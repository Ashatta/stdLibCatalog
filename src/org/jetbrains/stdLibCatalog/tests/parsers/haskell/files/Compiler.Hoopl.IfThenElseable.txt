[Classifier]
class IfThenElseable x where mkIfThenElse :: HooplNode n => (Label -> Label -> AGraph n O C) -> AGraph n O x -> AGraph n O x -> AGraph n O x
Name: IfThenElseable
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/hoopl-3.10.0.1/Compiler-Hoopl.html#t:IfThenElseable
Containing package: Compiler.Hoopl
parameters {
}
derived {
	Compiler.Hoopl.Internals::Compiler.Hoopl.IfThenElseable_O<>
	Compiler.Hoopl.Internals::Compiler.Hoopl.IfThenElseable_C<>
	Compiler.Hoopl::Compiler.Hoopl.IfThenElseable_O<>
	Compiler.Hoopl::Compiler.Hoopl.IfThenElseable_C<>
}
supertypes {
}
members {

	[Function]
	mkIfThenElse :: HooplNode n => (Label -> Label -> AGraph n O C) -> AGraph n O x -> AGraph n O x -> AGraph n O x
	Name: mkIfThenElse
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/hoopl-3.10.0.1/Compiler-Hoopl.html#v:mkIfThenElse
	Containing package: Compiler.Hoopl
	Containing type: IfThenElseable
	parameters {
		n: (HooplNode n; n; Compiler.Hoopl::HooplNode)
		x: (IfThenElseable x; x; Compiler.Hoopl::IfThenElseable)
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
			Compiler.Hoopl::Label
			Compiler.Hoopl::Label
		
			[result]
			Compiler.Hoopl::AGraph {
				null::n
				Compiler.Hoopl::O
				Compiler.Hoopl::C
			}
		}
		Compiler.Hoopl::AGraph {
			null::n
			Compiler.Hoopl::O
			null::x
		}
		Compiler.Hoopl::AGraph {
			null::n
			Compiler.Hoopl::O
			null::x
		}
	
		[result]
		Compiler.Hoopl::AGraph {
			null::n
			Compiler.Hoopl::O
			null::x
		}
	}
}