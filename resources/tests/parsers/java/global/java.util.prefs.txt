[Package]
Name: java.util.prefs
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/package-summary.html
Containing package: java.util
attributes {
}

Subpackages {
}

[Classifier]
public interface NodeChangeListener
extends EventListener
Name: NodeChangeListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeListener.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void childAdded(NodeChangeEvent evt)
	Name: childAdded
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeListener.html#childAdded-java.util.prefs.NodeChangeEvent-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NodeChangeListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeEvent
	
		[result]
		other::void
	}

	[Function]
	void childRemoved(NodeChangeEvent evt)
	Name: childRemoved
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeListener.html#childRemoved-java.util.prefs.NodeChangeEvent-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NodeChangeListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeEvent
	
		[result]
		other::void
	}
}

[Classifier]
@FunctionalInterface
public interface PreferenceChangeListener
extends EventListener
Name: PreferenceChangeListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeListener.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void preferenceChange(PreferenceChangeEvent evt)
	Name: preferenceChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeListener.html#preferenceChange-java.util.prefs.PreferenceChangeEvent-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferenceChangeListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::PreferenceChangeEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface PreferencesFactory
Name: PreferencesFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferencesFactory.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	Preferences systemRoot()
	Name: systemRoot
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferencesFactory.html#systemRoot--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferencesFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	Preferences userRoot()
	Name: userRoot
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferencesFactory.html#userRoot--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferencesFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}
}

[Classifier]
public abstract class AbstractPreferences
extends Preferences
Name: AbstractPreferences
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html
Containing package: java.util.prefs
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.prefs::Preferences
}
members {

	[Function]
	protected boolean newNode
	Name: newNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#newNode
	Containing package: java.util.prefs
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	protected final Object lock
	Name: lock
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#lock
	Containing package: java.util.prefs
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	protected AbstractPreferences(AbstractPreferences parent,
	                              String name)
	Name: AbstractPreferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#AbstractPreferences-java.util.prefs.AbstractPreferences-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::AbstractPreferences
		java.lang::String
	
		[result]
		java.util.prefs::AbstractPreferences
	}

	[Function]
	public void put(String key,
	                String value)
	Name: put
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#put-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String get(String key,
	                  String def)
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#get-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public void remove(String key)
	Name: remove
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#remove-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void clear()
	           throws BackingStoreException
	Name: clear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#clear--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void putInt(String key,
	                   int value)
	Name: putInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putInt-java.lang.String-int-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	public int getInt(String key,
	                  int def)
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getInt-java.lang.String-int-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::int
	}

	[Function]
	public void putLong(String key,
	                    long value)
	Name: putLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putLong-java.lang.String-long-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::void
	}

	[Function]
	public long getLong(String key,
	                    long def)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getLong-java.lang.String-long-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::long
	}

	[Function]
	public void putBoolean(String key,
	                       boolean value)
	Name: putBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putBoolean-java.lang.String-boolean-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean getBoolean(String key,
	                          boolean def)
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getBoolean-java.lang.String-boolean-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::boolean
	}

	[Function]
	public void putFloat(String key,
	                     float value)
	Name: putFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putFloat-java.lang.String-float-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::void
	}

	[Function]
	public float getFloat(String key,
	                      float def)
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getFloat-java.lang.String-float-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::float
	}

	[Function]
	public void putDouble(String key,
	                      double value)
	Name: putDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putDouble-java.lang.String-double-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::void
	}

	[Function]
	public double getDouble(String key,
	                        double def)
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getDouble-java.lang.String-double-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::double
	}

	[Function]
	public void putByteArray(String key,
	                         byte[] value)
	Name: putByteArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putByteArray-java.lang.String-byte:A-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	public byte[] getByteArray(String key,
	                           byte[] def)
	Name: getByteArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getByteArray-java.lang.String-byte:A-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public String[] keys()
	              throws BackingStoreException
	Name: keys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#keys--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public String[] childrenNames()
	                       throws BackingStoreException
	Name: childrenNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#childrenNames--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	protected final AbstractPreferences[] cachedChildren()
	Name: cachedChildren
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#cachedChildren--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=true
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.util.prefs::AbstractPreferences
		}
	}

	[Function]
	public Preferences parent()
	Name: parent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#parent--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public Preferences node(String path)
	Name: node
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#node-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public boolean nodeExists(String path)
	                   throws BackingStoreException
	Name: nodeExists
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#nodeExists-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public void removeNode()
	                throws BackingStoreException
	Name: removeNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#removeNode--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public String name()
	Name: name
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#name--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String absolutePath()
	Name: absolutePath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#absolutePath--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isUserNode()
	Name: isUserNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#isUserNode--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void addPreferenceChangeListener(PreferenceChangeListener pcl)
	Name: addPreferenceChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#addPreferenceChangeListener-java.util.prefs.PreferenceChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::PreferenceChangeListener
	
		[result]
		other::void
	}

	[Function]
	public void removePreferenceChangeListener(PreferenceChangeListener pcl)
	Name: removePreferenceChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#removePreferenceChangeListener-java.util.prefs.PreferenceChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::PreferenceChangeListener
	
		[result]
		other::void
	}

	[Function]
	public void addNodeChangeListener(NodeChangeListener ncl)
	Name: addNodeChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#addNodeChangeListener-java.util.prefs.NodeChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeListener
	
		[result]
		other::void
	}

	[Function]
	public void removeNodeChangeListener(NodeChangeListener ncl)
	Name: removeNodeChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#removeNodeChangeListener-java.util.prefs.NodeChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeListener
	
		[result]
		other::void
	}

	[Function]
	protected abstract void putSpi(String key,
	                               String value)
	Name: putSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#putSpi-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	protected abstract String getSpi(String key)
	Name: getSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getSpi-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	protected abstract void removeSpi(String key)
	Name: removeSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#removeSpi-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	protected abstract void removeNodeSpi()
	                               throws BackingStoreException
	Name: removeNodeSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#removeNodeSpi--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	protected abstract String[] keysSpi()
	                             throws BackingStoreException
	Name: keysSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#keysSpi--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	protected abstract String[] childrenNamesSpi()
	                                      throws BackingStoreException
	Name: childrenNamesSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#childrenNamesSpi--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	protected AbstractPreferences getChild(String nodeName)
	                                throws BackingStoreException
	Name: getChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#getChild-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::AbstractPreferences
	}

	[Function]
	protected abstract AbstractPreferences childSpi(String name)
	Name: childSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#childSpi-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::AbstractPreferences
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#toString--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void sync()
	          throws BackingStoreException
	Name: sync
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#sync--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	protected abstract void syncSpi()
	                         throws BackingStoreException
	Name: syncSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#syncSpi--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void flush()
	           throws BackingStoreException
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#flush--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	protected abstract void flushSpi()
	                          throws BackingStoreException
	Name: flushSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#flushSpi--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	protected boolean isRemoved()
	Name: isRemoved
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#isRemoved--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void exportNode(OutputStream os)
	                throws IOException,
	                       BackingStoreException
	Name: exportNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#exportNode-java.io.OutputStream-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	public void exportSubtree(OutputStream os)
	                   throws IOException,
	                          BackingStoreException
	Name: exportSubtree
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/AbstractPreferences.html#exportSubtree-java.io.OutputStream-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractPreferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
	
		[result]
		other::void
	}
}

[Classifier]
public class NodeChangeEvent
extends EventObject
Name: NodeChangeEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeEvent.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public NodeChangeEvent(Preferences parent,
	                       Preferences child)
	Name: NodeChangeEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeEvent.html#NodeChangeEvent-java.util.prefs.Preferences-java.util.prefs.Preferences-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: NodeChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::Preferences
		java.util.prefs::Preferences
	
		[result]
		java.util.prefs::NodeChangeEvent
	}

	[Function]
	public Preferences getParent()
	Name: getParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeEvent.html#getParent--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NodeChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public Preferences getChild()
	Name: getChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/NodeChangeEvent.html#getChild--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NodeChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}
}

[Classifier]
public class PreferenceChangeEvent
extends EventObject
Name: PreferenceChangeEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeEvent.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public PreferenceChangeEvent(Preferences node,
	                             String key,
	                             String newValue)
	Name: PreferenceChangeEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeEvent.html#PreferenceChangeEvent-java.util.prefs.Preferences-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PreferenceChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::Preferences
		java.lang::String
		java.lang::String
	
		[result]
		java.util.prefs::PreferenceChangeEvent
	}

	[Function]
	public Preferences getNode()
	Name: getNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeEvent.html#getNode--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferenceChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public String getKey()
	Name: getKey
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeEvent.html#getKey--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferenceChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getNewValue()
	Name: getNewValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/PreferenceChangeEvent.html#getNewValue--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreferenceChangeEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class Preferences
extends Object
Name: Preferences
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html
Containing package: java.util.prefs
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.util.prefs::AbstractPreferences
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int MAX_KEY_LENGTH
	Name: MAX_KEY_LENGTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#MAX_KEY_LENGTH
	Containing package: java.util.prefs
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int MAX_VALUE_LENGTH
	Name: MAX_VALUE_LENGTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#MAX_VALUE_LENGTH
	Containing package: java.util.prefs
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int MAX_NAME_LENGTH
	Name: MAX_NAME_LENGTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#MAX_NAME_LENGTH
	Containing package: java.util.prefs
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected Preferences()
	Name: Preferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#Preferences--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public static Preferences userNodeForPackage(Class<?> c)
	Name: userNodeForPackage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#userNodeForPackage-java.lang.Class-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public static Preferences systemNodeForPackage(Class<?> c)
	Name: systemNodeForPackage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#systemNodeForPackage-java.lang.Class-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public static Preferences userRoot()
	Name: userRoot
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#userRoot--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public static Preferences systemRoot()
	Name: systemRoot
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#systemRoot--
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public abstract void put(String key,
	                         String value)
	Name: put
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#put-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public abstract String get(String key,
	                           String def)
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#get-java.lang.String-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract void remove(String key)
	Name: remove
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#remove-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public abstract void clear()
	                    throws BackingStoreException
	Name: clear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#clear--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract void putInt(String key,
	                            int value)
	Name: putInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putInt-java.lang.String-int-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	public abstract int getInt(String key,
	                           int def)
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getInt-java.lang.String-int-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::int
	}

	[Function]
	public abstract void putLong(String key,
	                             long value)
	Name: putLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putLong-java.lang.String-long-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::void
	}

	[Function]
	public abstract long getLong(String key,
	                             long def)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getLong-java.lang.String-long-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::long
	}

	[Function]
	public abstract void putBoolean(String key,
	                                boolean value)
	Name: putBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putBoolean-java.lang.String-boolean-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getBoolean(String key,
	                                   boolean def)
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getBoolean-java.lang.String-boolean-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void putFloat(String key,
	                              float value)
	Name: putFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putFloat-java.lang.String-float-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::void
	}

	[Function]
	public abstract float getFloat(String key,
	                               float def)
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getFloat-java.lang.String-float-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::float
	}

	[Function]
	public abstract void putDouble(String key,
	                               double value)
	Name: putDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putDouble-java.lang.String-double-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::void
	}

	[Function]
	public abstract double getDouble(String key,
	                                 double def)
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getDouble-java.lang.String-double-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::double
	}

	[Function]
	public abstract void putByteArray(String key,
	                                  byte[] value)
	Name: putByteArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#putByteArray-java.lang.String-byte:A-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract byte[] getByteArray(String key,
	                                    byte[] def)
	Name: getByteArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#getByteArray-java.lang.String-byte:A-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public abstract String[] keys()
	                       throws BackingStoreException
	Name: keys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#keys--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] childrenNames()
	                                throws BackingStoreException
	Name: childrenNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#childrenNames--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract Preferences parent()
	Name: parent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#parent--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public abstract Preferences node(String pathName)
	Name: node
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#node-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::Preferences
	}

	[Function]
	public abstract boolean nodeExists(String pathName)
	                            throws BackingStoreException
	Name: nodeExists
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#nodeExists-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void removeNode()
	                         throws BackingStoreException
	Name: removeNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#removeNode--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract String name()
	Name: name
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#name--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract String absolutePath()
	Name: absolutePath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#absolutePath--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract boolean isUserNode()
	Name: isUserNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#isUserNode--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#toString--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract void flush()
	                    throws BackingStoreException
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#flush--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract void sync()
	                   throws BackingStoreException
	Name: sync
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#sync--
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract void addPreferenceChangeListener(PreferenceChangeListener pcl)
	Name: addPreferenceChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#addPreferenceChangeListener-java.util.prefs.PreferenceChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::PreferenceChangeListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void removePreferenceChangeListener(PreferenceChangeListener pcl)
	Name: removePreferenceChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#removePreferenceChangeListener-java.util.prefs.PreferenceChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::PreferenceChangeListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void addNodeChangeListener(NodeChangeListener ncl)
	Name: addNodeChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#addNodeChangeListener-java.util.prefs.NodeChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void removeNodeChangeListener(NodeChangeListener ncl)
	Name: removeNodeChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#removeNodeChangeListener-java.util.prefs.NodeChangeListener-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.prefs::NodeChangeListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void exportNode(OutputStream os)
	                         throws IOException,
	                                BackingStoreException
	Name: exportNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#exportNode-java.io.OutputStream-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	public abstract void exportSubtree(OutputStream os)
	                            throws IOException,
	                                   BackingStoreException
	Name: exportSubtree
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#exportSubtree-java.io.OutputStream-
	Containing package: java.util.prefs
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	public static void importPreferences(InputStream is)
	                              throws IOException,
	                                     InvalidPreferencesFormatException
	Name: importPreferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#importPreferences-java.io.InputStream-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Preferences
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}
}

[Classifier]
public class BackingStoreException
extends Exception
Name: BackingStoreException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/BackingStoreException.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public BackingStoreException(String s)
	Name: BackingStoreException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/BackingStoreException.html#BackingStoreException-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BackingStoreException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::BackingStoreException
	}

	[Function]
	public BackingStoreException(Throwable cause)
	Name: BackingStoreException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/BackingStoreException.html#BackingStoreException-java.lang.Throwable-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BackingStoreException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.util.prefs::BackingStoreException
	}
}

[Classifier]
public class InvalidPreferencesFormatException
extends Exception
Name: InvalidPreferencesFormatException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/InvalidPreferencesFormatException.html
Containing package: java.util.prefs
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public InvalidPreferencesFormatException(Throwable cause)
	Name: InvalidPreferencesFormatException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/InvalidPreferencesFormatException.html#InvalidPreferencesFormatException-java.lang.Throwable-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidPreferencesFormatException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.util.prefs::InvalidPreferencesFormatException
	}

	[Function]
	public InvalidPreferencesFormatException(String message)
	Name: InvalidPreferencesFormatException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/InvalidPreferencesFormatException.html#InvalidPreferencesFormatException-java.lang.String-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidPreferencesFormatException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.prefs::InvalidPreferencesFormatException
	}

	[Function]
	public InvalidPreferencesFormatException(String message,
	                                         Throwable cause)
	Name: InvalidPreferencesFormatException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/prefs/InvalidPreferencesFormatException.html#InvalidPreferencesFormatException-java.lang.String-java.lang.Throwable-
	Containing package: java.util.prefs
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidPreferencesFormatException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.util.prefs::InvalidPreferencesFormatException
	}
}