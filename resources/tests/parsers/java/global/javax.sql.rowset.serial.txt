[Package]
Name: javax.sql.rowset.serial
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/package-summary.html
Containing package: javax.sql.rowset
attributes {
}

Subpackages {
}

[Classifier]
public class SerialArray
extends Object
implements Array, Serializable, Cloneable
Name: SerialArray
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Array
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialArray(Array array,
	                   Map<String,Class<?>> map)
	            throws SerialException,
	                   SQLException
	Name: SerialArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#SerialArray-java.sql.Array-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Array
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		javax.sql.rowset.serial::SerialArray
	}

	[Function]
	public SerialArray(Array array)
	            throws SerialException,
	                   SQLException
	Name: SerialArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#SerialArray-java.sql.Array-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Array
	
		[result]
		javax.sql.rowset.serial::SerialArray
	}

	[Function]
	public void free()
	          throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#free--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public Object getArray()
	                throws SerialException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getArray--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object getArray(Map<String,Class<?>> map)
	                throws SerialException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getArray-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object getArray(long index,
	                       int count)
	                throws SerialException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getArray-long-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object getArray(long index,
	                       int count,
	                       Map<String,Class<?>> map)
	                throws SerialException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getArray-long-int-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public int getBaseType()
	                throws SerialException
	Name: getBaseType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getBaseType--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String getBaseTypeName()
	                       throws SerialException
	Name: getBaseTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getBaseTypeName--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public ResultSet getResultSet(long index,
	                              int count)
	                       throws SerialException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getResultSet-long-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	public ResultSet getResultSet(Map<String,Class<?>> map)
	                       throws SerialException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getResultSet-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	public ResultSet getResultSet()
	                       throws SerialException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getResultSet--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	public ResultSet getResultSet(long index,
	                              int count,
	                              Map<String,Class<?>> map)
	                       throws SerialException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#getResultSet-long-int-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialArray.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialArray
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialBlob
extends Object
implements Blob, Serializable, Cloneable
Name: SerialBlob
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Blob
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialBlob(byte[] b)
	           throws SerialException,
	                  SQLException
	Name: SerialBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#SerialBlob-byte:A-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.sql.rowset.serial::SerialBlob
	}

	[Function]
	public SerialBlob(Blob blob)
	           throws SerialException,
	                  SQLException
	Name: SerialBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#SerialBlob-java.sql.Blob-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Blob
	
		[result]
		javax.sql.rowset.serial::SerialBlob
	}

	[Function]
	public byte[] getBytes(long pos,
	                       int length)
	                throws SerialException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#getBytes-long-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public long length()
	            throws SerialException
	Name: length
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#length--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public InputStream getBinaryStream()
	                            throws SerialException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#getBinaryStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public long position(byte[] pattern,
	                     long start)
	              throws SerialException,
	                     SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#position-byte:A-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::long
	
		[result]
		other::long
	}

	[Function]
	public long position(Blob pattern,
	                     long start)
	              throws SerialException,
	                     SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#position-java.sql.Blob-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Blob
		other::long
	
		[result]
		other::long
	}

	[Function]
	public int setBytes(long pos,
	                    byte[] bytes)
	             throws SerialException,
	                    SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#setBytes-long-byte:A-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::[] {
			other::byte
		}
	
		[result]
		other::int
	}

	[Function]
	public int setBytes(long pos,
	                    byte[] bytes,
	                    int offset,
	                    int length)
	             throws SerialException,
	                    SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#setBytes-long-byte:A-int-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public OutputStream setBinaryStream(long pos)
	                             throws SerialException,
	                                    SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#setBinaryStream-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::OutputStream
	}

	[Function]
	public void truncate(long length)
	              throws SerialException
	Name: truncate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#truncate-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public InputStream getBinaryStream(long pos,
	                                   long length)
	                            throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#getBinaryStream-long-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::long
	
		[result]
		java.io::InputStream
	}

	[Function]
	public void free()
	          throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#free--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialBlob.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialBlob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialClob
extends Object
implements Clob, Serializable, Cloneable
Name: SerialClob
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Clob
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialClob(char[] ch)
	           throws SerialException,
	                  SQLException
	Name: SerialClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#SerialClob-char:A-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::char
		}
	
		[result]
		javax.sql.rowset.serial::SerialClob
	}

	[Function]
	public SerialClob(Clob clob)
	           throws SerialException,
	                  SQLException
	Name: SerialClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#SerialClob-java.sql.Clob-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Clob
	
		[result]
		javax.sql.rowset.serial::SerialClob
	}

	[Function]
	public long length()
	            throws SerialException
	Name: length
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#length--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public Reader getCharacterStream()
	                          throws SerialException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#getCharacterStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Reader
	}

	[Function]
	public InputStream getAsciiStream()
	                           throws SerialException,
	                                  SQLException
	Name: getAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#getAsciiStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public String getSubString(long pos,
	                           int length)
	                    throws SerialException
	Name: getSubString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#getSubString-long-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public long position(String searchStr,
	                     long start)
	              throws SerialException,
	                     SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#position-java.lang.String-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::long
	}

	[Function]
	public long position(Clob searchStr,
	                     long start)
	              throws SerialException,
	                     SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#position-java.sql.Clob-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Clob
		other::long
	
		[result]
		other::long
	}

	[Function]
	public int setString(long pos,
	                     String str)
	              throws SerialException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#setString-long-java.lang.String-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	public int setString(long pos,
	                     String str,
	                     int offset,
	                     int length)
	              throws SerialException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#setString-long-java.lang.String-int-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.lang::String
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public OutputStream setAsciiStream(long pos)
	                            throws SerialException,
	                                   SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#setAsciiStream-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::OutputStream
	}

	[Function]
	public Writer setCharacterStream(long pos)
	                          throws SerialException,
	                                 SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#setCharacterStream-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::Writer
	}

	[Function]
	public void truncate(long length)
	              throws SerialException
	Name: truncate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#truncate-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public Reader getCharacterStream(long pos,
	                                 long length)
	                          throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#getCharacterStream-long-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::long
	
		[result]
		java.io::Reader
	}

	[Function]
	public void free()
	          throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#free--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialClob.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialClob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialDatalink
extends Object
implements Serializable, Cloneable
Name: SerialDatalink
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialDatalink(URL url)
	               throws SerialException
	Name: SerialDatalink
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html#SerialDatalink-java.net.URL-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialDatalink
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sql.rowset.serial::SerialDatalink
	}

	[Function]
	public URL getDatalink()
	                throws SerialException
	Name: getDatalink
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html#getDatalink--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialDatalink
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URL
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialDatalink
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialDatalink
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialDatalink.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialDatalink
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialJavaObject
extends Object
implements Serializable, Cloneable
Name: SerialJavaObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialJavaObject(Object obj)
	                 throws SerialException
	Name: SerialJavaObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#SerialJavaObject-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		javax.sql.rowset.serial::SerialJavaObject
	}

	[Function]
	public Object getObject()
	                 throws SerialException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#getObject--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	public Field[] getFields()
	                  throws SerialException
	Name: getFields
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#getFields--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang.reflect::Field
		}
	}

	[Function]
	public boolean equals(Object o)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialJavaObject.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialJavaObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialRef
extends Object
implements Ref, Serializable, Cloneable
Name: SerialRef
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Ref
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialRef(Ref ref)
	          throws SerialException,
	                 SQLException
	Name: SerialRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#SerialRef-java.sql.Ref-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Ref
	
		[result]
		javax.sql.rowset.serial::SerialRef
	}

	[Function]
	public String getBaseTypeName()
	                       throws SerialException
	Name: getBaseTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#getBaseTypeName--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Object getObject(Map<String,Class<?>> map)
	                 throws SerialException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#getObject-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object getObject()
	                 throws SerialException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#getObject--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	public void setObject(Object obj)
	               throws SerialException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#setObject-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialRef.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialRef
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SerialStruct
extends Object
implements Struct, Serializable, Cloneable
Name: SerialStruct
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Struct
	java.io::Serializable
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	public SerialStruct(Struct in,
	                    Map<String,Class<?>> map)
	             throws SerialException
	Name: SerialStruct
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#SerialStruct-java.sql.Struct-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Struct
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		javax.sql.rowset.serial::SerialStruct
	}

	[Function]
	public SerialStruct(SQLData in,
	                    Map<String,Class<?>> map)
	             throws SerialException
	Name: SerialStruct
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#SerialStruct-java.sql.SQLData-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLData
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		javax.sql.rowset.serial::SerialStruct
	}

	[Function]
	public String getSQLTypeName()
	                      throws SerialException
	Name: getSQLTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#getSQLTypeName--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Object[] getAttributes()
	                       throws SerialException
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#getAttributes--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::Object
		}
	}

	[Function]
	public Object[] getAttributes(Map<String,Class<?>> map)
	                       throws SerialException
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#getAttributes-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		other::[] {
			java.lang::Object
		}
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#equals-java.lang.Object-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#hashCode--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialStruct.html#clone--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerialStruct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SQLInputImpl
extends Object
implements SQLInput
Name: SQLInputImpl
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLInput
	java.lang::Object
}
members {

	[Function]
	public SQLInputImpl(Object[] attributes,
	                    Map<String,Class<?>> map)
	             throws SQLException
	Name: SQLInputImpl
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#SQLInputImpl-java.lang.Object:A-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::Object
		}
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		javax.sql.rowset.serial::SQLInputImpl
	}

	[Function]
	public String readString()
	                  throws SQLException
	Name: readString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readString--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean readBoolean()
	                    throws SQLException
	Name: readBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readBoolean--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public byte readByte()
	              throws SQLException
	Name: readByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readByte--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::byte
	}

	[Function]
	public short readShort()
	                throws SQLException
	Name: readShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readShort--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	public int readInt()
	            throws SQLException
	Name: readInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readInt--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long readLong()
	              throws SQLException
	Name: readLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readLong--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public float readFloat()
	                throws SQLException
	Name: readFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readFloat--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public double readDouble()
	                  throws SQLException
	Name: readDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readDouble--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::double
	}

	[Function]
	public BigDecimal readBigDecimal()
	                          throws SQLException
	Name: readBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readBigDecimal--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	public byte[] readBytes()
	                 throws SQLException
	Name: readBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readBytes--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public Date readDate()
	              throws SQLException
	Name: readDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readDate--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Date
	}

	[Function]
	public Time readTime()
	              throws SQLException
	Name: readTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readTime--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Time
	}

	[Function]
	public Timestamp readTimestamp()
	                        throws SQLException
	Name: readTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readTimestamp--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public Reader readCharacterStream()
	                           throws SQLException
	Name: readCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readCharacterStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Reader
	}

	[Function]
	public InputStream readAsciiStream()
	                            throws SQLException
	Name: readAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readAsciiStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public InputStream readBinaryStream()
	                             throws SQLException
	Name: readBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readBinaryStream--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public Object readObject()
	                  throws SQLException
	Name: readObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readObject--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	public Ref readRef()
	            throws SQLException
	Name: readRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readRef--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Ref
	}

	[Function]
	public Blob readBlob()
	              throws SQLException
	Name: readBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readBlob--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Blob
	}

	[Function]
	public Clob readClob()
	              throws SQLException
	Name: readClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readClob--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Clob
	}

	[Function]
	public Array readArray()
	                throws SQLException
	Name: readArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readArray--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Array
	}

	[Function]
	public boolean wasNull()
	                throws SQLException
	Name: wasNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#wasNull--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public URL readURL()
	            throws SQLException
	Name: readURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readURL--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URL
	}

	[Function]
	public NClob readNClob()
	                throws SQLException
	Name: readNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readNClob--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::NClob
	}

	[Function]
	public String readNString()
	                   throws SQLException
	Name: readNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readNString--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public SQLXML readSQLXML()
	                  throws SQLException
	Name: readSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readSQLXML--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	public RowId readRowId()
	                throws SQLException
	Name: readRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLInputImpl.html#readRowId--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowId
	}
}

[Classifier]
public class SQLOutputImpl
extends Object
implements SQLOutput
Name: SQLOutputImpl
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLOutput
	java.lang::Object
}
members {

	[Function]
	public SQLOutputImpl(Vector<?> attributes,
	                     Map<String,?> map)
	              throws SQLException
	Name: SQLOutputImpl
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#SQLOutputImpl-java.util.Vector-java.util.Map-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Vector {
			?
		}
		java.util::Map {
			java.lang::String
			?
		}
	
		[result]
		javax.sql.rowset.serial::SQLOutputImpl
	}

	[Function]
	public void writeString(String x)
	                 throws SQLException
	Name: writeString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeString-java.lang.String-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void writeBoolean(boolean x)
	                  throws SQLException
	Name: writeBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeBoolean-boolean-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void writeByte(byte x)
	               throws SQLException
	Name: writeByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeByte-byte-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::byte
	
		[result]
		other::void
	}

	[Function]
	public void writeShort(short x)
	                throws SQLException
	Name: writeShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeShort-short-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::short
	
		[result]
		other::void
	}

	[Function]
	public void writeInt(int x)
	              throws SQLException
	Name: writeInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeInt-int-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void writeLong(long x)
	               throws SQLException
	Name: writeLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeLong-long-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public void writeFloat(float x)
	                throws SQLException
	Name: writeFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeFloat-float-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		other::void
	}

	[Function]
	public void writeDouble(double x)
	                 throws SQLException
	Name: writeDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeDouble-double-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::double
	
		[result]
		other::void
	}

	[Function]
	public void writeBigDecimal(BigDecimal x)
	                     throws SQLException
	Name: writeBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeBigDecimal-java.math.BigDecimal-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	public void writeBytes(byte[] x)
	                throws SQLException
	Name: writeBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeBytes-byte:A-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	public void writeDate(Date x)
	               throws SQLException
	Name: writeDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeDate-java.sql.Date-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	public void writeTime(Time x)
	               throws SQLException
	Name: writeTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeTime-java.sql.Time-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	public void writeTimestamp(Timestamp x)
	                    throws SQLException
	Name: writeTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeTimestamp-java.sql.Timestamp-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	public void writeCharacterStream(Reader x)
	                          throws SQLException
	Name: writeCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeCharacterStream-java.io.Reader-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	public void writeAsciiStream(InputStream x)
	                      throws SQLException
	Name: writeAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeAsciiStream-java.io.InputStream-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	public void writeBinaryStream(InputStream x)
	                       throws SQLException
	Name: writeBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeBinaryStream-java.io.InputStream-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	public void writeObject(SQLData x)
	                 throws SQLException
	Name: writeObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeObject-java.sql.SQLData-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLData
	
		[result]
		other::void
	}

	[Function]
	public void writeRef(Ref x)
	              throws SQLException
	Name: writeRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeRef-java.sql.Ref-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	public void writeBlob(Blob x)
	               throws SQLException
	Name: writeBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeBlob-java.sql.Blob-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	public void writeClob(Clob x)
	               throws SQLException
	Name: writeClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeClob-java.sql.Clob-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	public void writeStruct(Struct x)
	                 throws SQLException
	Name: writeStruct
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeStruct-java.sql.Struct-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Struct
	
		[result]
		other::void
	}

	[Function]
	public void writeArray(Array x)
	                throws SQLException
	Name: writeArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeArray-java.sql.Array-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	public void writeURL(URL url)
	              throws SQLException
	Name: writeURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeURL-java.net.URL-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		other::void
	}

	[Function]
	public void writeNString(String x)
	                  throws SQLException
	Name: writeNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeNString-java.lang.String-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void writeNClob(NClob x)
	                throws SQLException
	Name: writeNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeNClob-java.sql.NClob-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	public void writeRowId(RowId x)
	                throws SQLException
	Name: writeRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeRowId-java.sql.RowId-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	public void writeSQLXML(SQLXML x)
	                 throws SQLException
	Name: writeSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SQLOutputImpl.html#writeSQLXML-java.sql.SQLXML-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutputImpl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLXML
	
		[result]
		other::void
	}
}

[Classifier]
public class SerialException
extends SQLException
Name: SerialException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialException.html
Containing package: javax.sql.rowset.serial
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SerialException()
	Name: SerialException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialException.html#SerialException--
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.serial::SerialException
	}

	[Function]
	public SerialException(String msg)
	Name: SerialException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/serial/SerialException.html#SerialException-java.lang.String-
	Containing package: javax.sql.rowset.serial
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerialException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sql.rowset.serial::SerialException
	}
}