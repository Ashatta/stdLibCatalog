[Package]
Name: javax.crypto.spec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/package-summary.html
Containing package: javax.crypto
attributes {
}

Subpackages {
}

[Classifier]
public class DESedeKeySpec
extends Object
implements KeySpec
Name: DESedeKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	java.lang::Object
}
members {

	[Function]
	public static final int DES_EDE_KEY_LEN
	Name: DES_EDE_KEY_LEN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html#DES_EDE_KEY_LEN
	Containing package: javax.crypto.spec
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DESedeKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public DESedeKeySpec(byte[] key)
	              throws InvalidKeyException
	Name: DESedeKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html#DESedeKeySpec-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DESedeKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::DESedeKeySpec
	}

	[Function]
	public DESedeKeySpec(byte[] key,
	                     int offset)
	              throws InvalidKeyException
	Name: DESedeKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html#DESedeKeySpec-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DESedeKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::DESedeKeySpec
	}

	[Function]
	public byte[] getKey()
	Name: getKey
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html#getKey--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DESedeKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public static boolean isParityAdjusted(byte[] key,
	                                       int offset)
	                                throws InvalidKeyException
	Name: isParityAdjusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESedeKeySpec.html#isParityAdjusted-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DESedeKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::boolean
	}
}

[Classifier]
public class DESKeySpec
extends Object
implements KeySpec
Name: DESKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	java.lang::Object
}
members {

	[Function]
	public static final int DES_KEY_LEN
	Name: DES_KEY_LEN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#DES_KEY_LEN
	Containing package: javax.crypto.spec
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public DESKeySpec(byte[] key)
	           throws InvalidKeyException
	Name: DESKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#DESKeySpec-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::DESKeySpec
	}

	[Function]
	public DESKeySpec(byte[] key,
	                  int offset)
	           throws InvalidKeyException
	Name: DESKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#DESKeySpec-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::DESKeySpec
	}

	[Function]
	public byte[] getKey()
	Name: getKey
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#getKey--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public static boolean isParityAdjusted(byte[] key,
	                                       int offset)
	                                throws InvalidKeyException
	Name: isParityAdjusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#isParityAdjusted-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public static boolean isWeak(byte[] key,
	                             int offset)
	                      throws InvalidKeyException
	Name: isWeak
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DESKeySpec.html#isWeak-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DESKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::boolean
	}
}

[Classifier]
public class DHGenParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: DHGenParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHGenParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public DHGenParameterSpec(int primeSize,
	                          int exponentSize)
	Name: DHGenParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHGenParameterSpec.html#DHGenParameterSpec-int-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DHGenParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		javax.crypto.spec::DHGenParameterSpec
	}

	[Function]
	public int getPrimeSize()
	Name: getPrimeSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHGenParameterSpec.html#getPrimeSize--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHGenParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getExponentSize()
	Name: getExponentSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHGenParameterSpec.html#getExponentSize--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHGenParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class DHParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: DHParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public DHParameterSpec(BigInteger p,
	                       BigInteger g)
	Name: DHParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html#DHParameterSpec-java.math.BigInteger-java.math.BigInteger-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DHParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
		java.math::BigInteger
	
		[result]
		javax.crypto.spec::DHParameterSpec
	}

	[Function]
	public DHParameterSpec(BigInteger p,
	                       BigInteger g,
	                       int l)
	Name: DHParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html#DHParameterSpec-java.math.BigInteger-java.math.BigInteger-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DHParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
		java.math::BigInteger
		other::int
	
		[result]
		javax.crypto.spec::DHParameterSpec
	}

	[Function]
	public BigInteger getP()
	Name: getP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html#getP--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public BigInteger getG()
	Name: getG
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html#getG--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public int getL()
	Name: getL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHParameterSpec.html#getL--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class DHPrivateKeySpec
extends Object
implements KeySpec
Name: DHPrivateKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPrivateKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	java.lang::Object
}
members {

	[Function]
	public DHPrivateKeySpec(BigInteger x,
	                        BigInteger p,
	                        BigInteger g)
	Name: DHPrivateKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPrivateKeySpec.html#DHPrivateKeySpec-java.math.BigInteger-java.math.BigInteger-java.math.BigInteger-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DHPrivateKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
		java.math::BigInteger
		java.math::BigInteger
	
		[result]
		javax.crypto.spec::DHPrivateKeySpec
	}

	[Function]
	public BigInteger getX()
	Name: getX
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPrivateKeySpec.html#getX--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPrivateKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public BigInteger getP()
	Name: getP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPrivateKeySpec.html#getP--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPrivateKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public BigInteger getG()
	Name: getG
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPrivateKeySpec.html#getG--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPrivateKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}
}

[Classifier]
public class DHPublicKeySpec
extends Object
implements KeySpec
Name: DHPublicKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPublicKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	java.lang::Object
}
members {

	[Function]
	public DHPublicKeySpec(BigInteger y,
	                       BigInteger p,
	                       BigInteger g)
	Name: DHPublicKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPublicKeySpec.html#DHPublicKeySpec-java.math.BigInteger-java.math.BigInteger-java.math.BigInteger-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DHPublicKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
		java.math::BigInteger
		java.math::BigInteger
	
		[result]
		javax.crypto.spec::DHPublicKeySpec
	}

	[Function]
	public BigInteger getY()
	Name: getY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPublicKeySpec.html#getY--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPublicKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public BigInteger getP()
	Name: getP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPublicKeySpec.html#getP--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPublicKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public BigInteger getG()
	Name: getG
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/DHPublicKeySpec.html#getG--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DHPublicKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigInteger
	}
}

[Classifier]
public class GCMParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: GCMParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/GCMParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public GCMParameterSpec(int tLen,
	                        byte[] src)
	Name: GCMParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/GCMParameterSpec.html#GCMParameterSpec-int-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: GCMParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::GCMParameterSpec
	}

	[Function]
	public GCMParameterSpec(int tLen,
	                        byte[] src,
	                        int offset,
	                        int len)
	Name: GCMParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/GCMParameterSpec.html#GCMParameterSpec-int-byte:A-int-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: GCMParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		javax.crypto.spec::GCMParameterSpec
	}

	[Function]
	public int getTLen()
	Name: getTLen
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/GCMParameterSpec.html#getTLen--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: GCMParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public byte[] getIV()
	Name: getIV
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/GCMParameterSpec.html#getIV--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: GCMParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}
}

[Classifier]
public class IvParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: IvParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/IvParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public IvParameterSpec(byte[] iv)
	Name: IvParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/IvParameterSpec.html#IvParameterSpec-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: IvParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::IvParameterSpec
	}

	[Function]
	public IvParameterSpec(byte[] iv,
	                       int offset,
	                       int len)
	Name: IvParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/IvParameterSpec.html#IvParameterSpec-byte:A-int-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: IvParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		javax.crypto.spec::IvParameterSpec
	}

	[Function]
	public byte[] getIV()
	Name: getIV
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/IvParameterSpec.html#getIV--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IvParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}
}

[Classifier]
public class OAEPParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: OAEPParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public static final OAEPParameterSpec DEFAULT
	Name: DEFAULT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#DEFAULT
	Containing package: javax.crypto.spec
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.crypto.spec::OAEPParameterSpec
	}

	[Function]
	public OAEPParameterSpec(String mdName,
	                         String mgfName,
	                         AlgorithmParameterSpec mgfSpec,
	                         PSource pSrc)
	Name: OAEPParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#OAEPParameterSpec-java.lang.String-java.lang.String-java.security.spec.AlgorithmParameterSpec-javax.crypto.spec.PSource-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.security.spec::AlgorithmParameterSpec
		javax.crypto.spec::PSource
	
		[result]
		javax.crypto.spec::OAEPParameterSpec
	}

	[Function]
	public String getDigestAlgorithm()
	Name: getDigestAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#getDigestAlgorithm--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getMGFAlgorithm()
	Name: getMGFAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#getMGFAlgorithm--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public AlgorithmParameterSpec getMGFParameters()
	Name: getMGFParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#getMGFParameters--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}

	[Function]
	public PSource getPSource()
	Name: getPSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/OAEPParameterSpec.html#getPSource--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OAEPParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.crypto.spec::PSource
	}
}

[Classifier]
public class PBEKeySpec
extends Object
implements KeySpec
Name: PBEKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	java.lang::Object
}
members {

	[Function]
	public PBEKeySpec(char[] password)
	Name: PBEKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#PBEKeySpec-char:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::char
		}
	
		[result]
		javax.crypto.spec::PBEKeySpec
	}

	[Function]
	public PBEKeySpec(char[] password,
	                  byte[] salt,
	                  int iterationCount,
	                  int keyLength)
	Name: PBEKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#PBEKeySpec-char:A-byte:A-int-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::char
		}
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		javax.crypto.spec::PBEKeySpec
	}

	[Function]
	public PBEKeySpec(char[] password,
	                  byte[] salt,
	                  int iterationCount)
	Name: PBEKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#PBEKeySpec-char:A-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::char
		}
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::PBEKeySpec
	}

	[Function]
	public final void clearPassword()
	Name: clearPassword
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#clearPassword--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public final char[] getPassword()
	Name: getPassword
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#getPassword--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::char
		}
	}

	[Function]
	public final byte[] getSalt()
	Name: getSalt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#getSalt--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public final int getIterationCount()
	Name: getIterationCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#getIterationCount--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final int getKeyLength()
	Name: getKeyLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEKeySpec.html#getKeyLength--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class PBEParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: PBEParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public PBEParameterSpec(byte[] salt,
	                        int iterationCount)
	Name: PBEParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html#PBEParameterSpec-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PBEParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::PBEParameterSpec
	}

	[Function]
	public PBEParameterSpec(byte[] salt,
	                        int iterationCount,
	                        AlgorithmParameterSpec paramSpec)
	Name: PBEParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html#PBEParameterSpec-byte:A-int-java.security.spec.AlgorithmParameterSpec-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PBEParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		java.security.spec::AlgorithmParameterSpec
	
		[result]
		javax.crypto.spec::PBEParameterSpec
	}

	[Function]
	public byte[] getSalt()
	Name: getSalt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html#getSalt--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public int getIterationCount()
	Name: getIterationCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html#getIterationCount--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public AlgorithmParameterSpec getParameterSpec()
	Name: getParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PBEParameterSpec.html#getParameterSpec--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PBEParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}
}

[Classifier]
public class PSource
extends Object
Name: PSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.crypto.spec::PSource.PSpecified
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected PSource(String pSrcName)
	Name: PSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.html#PSource-java.lang.String-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.crypto.spec::PSource
	}

	[Function]
	public String getAlgorithm()
	Name: getAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.html#getAlgorithm--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public static final class PSource.PSpecified
extends PSource
Name: PSource.PSpecified
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.PSpecified.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=true
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.crypto.spec::PSource
}
members {

	[Function]
	public static final PSource.PSpecified DEFAULT
	Name: DEFAULT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.PSpecified.html#DEFAULT
	Containing package: javax.crypto.spec
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: PSource.PSpecified
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.crypto.spec::PSource.PSpecified
	}

	[Function]
	public PSpecified(byte[] p)
	Name: PSpecified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.PSpecified.html#PSpecified-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PSource.PSpecified
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::PSource.PSpecified
	}

	[Function]
	public byte[] getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/PSource.PSpecified.html#getValue--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PSource.PSpecified
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}
}

[Classifier]
public class RC2ParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: RC2ParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public RC2ParameterSpec(int effectiveKeyBits)
	Name: RC2ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#RC2ParameterSpec-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.crypto.spec::RC2ParameterSpec
	}

	[Function]
	public RC2ParameterSpec(int effectiveKeyBits,
	                        byte[] iv)
	Name: RC2ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#RC2ParameterSpec-int-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::RC2ParameterSpec
	}

	[Function]
	public RC2ParameterSpec(int effectiveKeyBits,
	                        byte[] iv,
	                        int offset)
	Name: RC2ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#RC2ParameterSpec-int-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::RC2ParameterSpec
	}

	[Function]
	public int getEffectiveKeyBits()
	Name: getEffectiveKeyBits
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#getEffectiveKeyBits--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public byte[] getIV()
	Name: getIV
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#getIV--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#equals-java.lang.Object-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC2ParameterSpec.html#hashCode--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC2ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class RC5ParameterSpec
extends Object
implements AlgorithmParameterSpec
Name: RC5ParameterSpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::AlgorithmParameterSpec
	java.lang::Object
}
members {

	[Function]
	public RC5ParameterSpec(int version,
	                        int rounds,
	                        int wordSize)
	Name: RC5ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#RC5ParameterSpec-int-int-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		javax.crypto.spec::RC5ParameterSpec
	}

	[Function]
	public RC5ParameterSpec(int version,
	                        int rounds,
	                        int wordSize,
	                        byte[] iv)
	Name: RC5ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#RC5ParameterSpec-int-int-int-byte:A-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		javax.crypto.spec::RC5ParameterSpec
	}

	[Function]
	public RC5ParameterSpec(int version,
	                        int rounds,
	                        int wordSize,
	                        byte[] iv,
	                        int offset)
	Name: RC5ParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#RC5ParameterSpec-int-int-int-byte:A-int-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.crypto.spec::RC5ParameterSpec
	}

	[Function]
	public int getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#getVersion--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getRounds()
	Name: getRounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#getRounds--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getWordSize()
	Name: getWordSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#getWordSize--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public byte[] getIV()
	Name: getIV
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#getIV--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#equals-java.lang.Object-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/RC5ParameterSpec.html#hashCode--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RC5ParameterSpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class SecretKeySpec
extends Object
implements KeySpec, SecretKey
Name: SecretKeySpec
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html
Containing package: javax.crypto.spec
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security.spec::KeySpec
	javax.crypto::SecretKey
	java.lang::Object
}
members {

	[Function]
	public SecretKeySpec(byte[] key,
	                     String algorithm)
	Name: SecretKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#SecretKeySpec-byte:A-java.lang.String-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		java.lang::String
	
		[result]
		javax.crypto.spec::SecretKeySpec
	}

	[Function]
	public SecretKeySpec(byte[] key,
	                     int offset,
	                     int len,
	                     String algorithm)
	Name: SecretKeySpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#SecretKeySpec-byte:A-int-int-java.lang.String-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
		java.lang::String
	
		[result]
		javax.crypto.spec::SecretKeySpec
	}

	[Function]
	public String getAlgorithm()
	Name: getAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#getAlgorithm--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getFormat()
	Name: getFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#getFormat--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public byte[] getEncoded()
	Name: getEncoded
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#getEncoded--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#hashCode--
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#equals-java.lang.Object-
	Containing package: javax.crypto.spec
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SecretKeySpec
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}
}