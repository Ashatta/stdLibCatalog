[Package]
Name: javax.rmi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/package-summary.html
Containing package: null
attributes {
}

Subpackages {
	javax.rmi.ssl
	javax.rmi.CORBA
}

[Classifier]
public class PortableRemoteObject
extends Object
Name: PortableRemoteObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html
Containing package: javax.rmi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected PortableRemoteObject()
	                        throws RemoteException
	Name: PortableRemoteObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#PortableRemoteObject--
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.rmi::PortableRemoteObject
	}

	[Function]
	public static void exportObject(Remote obj)
	                         throws RemoteException
	Name: exportObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#exportObject-java.rmi.Remote-
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.rmi::Remote
	
		[result]
		other::void
	}

	[Function]
	public static Remote toStub(Remote obj)
	                     throws NoSuchObjectException
	Name: toStub
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#toStub-java.rmi.Remote-
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.rmi::Remote
	
		[result]
		java.rmi::Remote
	}

	[Function]
	public static void unexportObject(Remote obj)
	                           throws NoSuchObjectException
	Name: unexportObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#unexportObject-java.rmi.Remote-
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.rmi::Remote
	
		[result]
		other::void
	}

	[Function]
	public static Object narrow(Object narrowFrom,
	                            Class narrowTo)
	                     throws ClassCastException
	Name: narrow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#narrow-java.lang.Object-java.lang.Class-
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.lang::Class
	
		[result]
		java.lang::Object
	}

	[Function]
	public static void connect(Remote target,
	                           Remote source)
	                    throws RemoteException
	Name: connect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/rmi/PortableRemoteObject.html#connect-java.rmi.Remote-java.rmi.Remote-
	Containing package: javax.rmi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PortableRemoteObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.rmi::Remote
		java.rmi::Remote
	
		[result]
		other::void
	}
}