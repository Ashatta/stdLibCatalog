[Package]
Name: java.sql
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/package-summary.html
Containing package: null
attributes {
}

Subpackages {
}

[Classifier]
public interface Array
Name: Array
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SerialArray
}
supertypes {
}
members {

	[Function]
	String getBaseTypeName()
	                throws SQLException
	Name: getBaseTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getBaseTypeName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	int getBaseType()
	         throws SQLException
	Name: getBaseType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getBaseType--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Object getArray()
	         throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getArray--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getArray(Map<String,Class<?>> map)
	         throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getArray-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getArray(long index,
	                int count)
	         throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getArray-long-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getArray(long index,
	                int count,
	                Map<String,Class<?>> map)
	         throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getArray-long-int-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	ResultSet getResultSet()
	                throws SQLException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getResultSet--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getResultSet(Map<String,Class<?>> map)
	                throws SQLException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getResultSet-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getResultSet(long index,
	                       int count)
	                throws SQLException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getResultSet-long-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getResultSet(long index,
	                       int count,
	                       Map<String,Class<?>> map)
	                throws SQLException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#getResultSet-long-int-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	void free()
	   throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Array.html#free--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Array
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public interface Blob
Name: Blob
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SerialBlob
}
supertypes {
}
members {

	[Function]
	long length()
	     throws SQLException
	Name: length
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#length--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	byte[] getBytes(long pos,
	                int length)
	         throws SQLException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#getBytes-long-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	InputStream getBinaryStream()
	                     throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#getBinaryStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	long position(byte[] pattern,
	              long start)
	       throws SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#position-byte:A-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::long
	
		[result]
		other::long
	}

	[Function]
	long position(Blob pattern,
	              long start)
	       throws SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#position-java.sql.Blob-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Blob
		other::long
	
		[result]
		other::long
	}

	[Function]
	int setBytes(long pos,
	             byte[] bytes)
	      throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#setBytes-long-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::[] {
			other::byte
		}
	
		[result]
		other::int
	}

	[Function]
	int setBytes(long pos,
	             byte[] bytes,
	             int offset,
	             int len)
	      throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#setBytes-long-byte:A-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	OutputStream setBinaryStream(long pos)
	                      throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#setBinaryStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::OutputStream
	}

	[Function]
	void truncate(long len)
	       throws SQLException
	Name: truncate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#truncate-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	void free()
	   throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#free--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	InputStream getBinaryStream(long pos,
	                            long length)
	                     throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Blob.html#getBinaryStream-long-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Blob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::long
	
		[result]
		java.io::InputStream
	}
}

[Classifier]
public interface CallableStatement
extends PreparedStatement
Name: CallableStatement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::PreparedStatement
}
members {

	[Function]
	void registerOutParameter(int parameterIndex,
	                          int sqlType)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void registerOutParameter(int parameterIndex,
	                          int sqlType,
	                          int scale)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	boolean wasNull()
	         throws SQLException
	Name: wasNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#wasNull--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getString(int parameterIndex)
	          throws SQLException
	Name: getString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getString-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	boolean getBoolean(int parameterIndex)
	            throws SQLException
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBoolean-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	byte getByte(int parameterIndex)
	      throws SQLException
	Name: getByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getByte-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::byte
	}

	[Function]
	short getShort(int parameterIndex)
	        throws SQLException
	Name: getShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getShort-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::short
	}

	[Function]
	int getInt(int parameterIndex)
	    throws SQLException
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getInt-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	long getLong(int parameterIndex)
	      throws SQLException
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getLong-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::long
	}

	[Function]
	float getFloat(int parameterIndex)
	        throws SQLException
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getFloat-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::float
	}

	[Function]
	double getDouble(int parameterIndex)
	          throws SQLException
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDouble-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::double
	}

	[Function]
	@Deprecated
	BigDecimal getBigDecimal(int parameterIndex,
	                                     int scale)
	                              throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBigDecimal-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	byte[] getBytes(int parameterIndex)
	         throws SQLException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBytes-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Date getDate(int parameterIndex)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDate-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(int parameterIndex)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTime-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(int parameterIndex)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTimestamp-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	Object getObject(int parameterIndex)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	BigDecimal getBigDecimal(int parameterIndex)
	                  throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBigDecimal-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	Object getObject(int parameterIndex,
	                 Map<String,Class<?>> map)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-int-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Ref getRef(int parameterIndex)
	    throws SQLException
	Name: getRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getRef-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Ref
	}

	[Function]
	Blob getBlob(int parameterIndex)
	      throws SQLException
	Name: getBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBlob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Blob
	}

	[Function]
	Clob getClob(int parameterIndex)
	      throws SQLException
	Name: getClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getClob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Clob
	}

	[Function]
	Array getArray(int parameterIndex)
	        throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getArray-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Array
	}

	[Function]
	Date getDate(int parameterIndex,
	             Calendar cal)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDate-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(int parameterIndex,
	             Calendar cal)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTime-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(int parameterIndex,
	                       Calendar cal)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTimestamp-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	void registerOutParameter(int parameterIndex,
	                          int sqlType,
	                          String typeName)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void registerOutParameter(String parameterName,
	                          int sqlType)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void registerOutParameter(String parameterName,
	                          int sqlType,
	                          int scale)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void registerOutParameter(String parameterName,
	                          int sqlType,
	                          String typeName)
	                   throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	URL getURL(int parameterIndex)
	    throws SQLException
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getURL-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.net::URL
	}

	[Function]
	void setURL(String parameterName,
	            URL val)
	     throws SQLException
	Name: setURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setURL-java.lang.String-java.net.URL-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.net::URL
	
		[result]
		other::void
	}

	[Function]
	void setNull(String parameterName,
	             int sqlType)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNull-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBoolean(String parameterName,
	                boolean x)
	         throws SQLException
	Name: setBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBoolean-java.lang.String-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setByte(String parameterName,
	             byte x)
	      throws SQLException
	Name: setByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setByte-java.lang.String-byte-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void setShort(String parameterName,
	              short x)
	       throws SQLException
	Name: setShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setShort-java.lang.String-short-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::short
	
		[result]
		other::void
	}

	[Function]
	void setInt(String parameterName,
	            int x)
	     throws SQLException
	Name: setInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setInt-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setLong(String parameterName,
	             long x)
	      throws SQLException
	Name: setLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setLong-java.lang.String-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setFloat(String parameterName,
	              float x)
	       throws SQLException
	Name: setFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setFloat-java.lang.String-float-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::void
	}

	[Function]
	void setDouble(String parameterName,
	               double x)
	        throws SQLException
	Name: setDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setDouble-java.lang.String-double-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::void
	}

	[Function]
	void setBigDecimal(String parameterName,
	                   BigDecimal x)
	            throws SQLException
	Name: setBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBigDecimal-java.lang.String-java.math.BigDecimal-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void setString(String parameterName,
	               String x)
	        throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setString-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setBytes(String parameterName,
	              byte[] x)
	       throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBytes-java.lang.String-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void setDate(String parameterName,
	             Date x)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setDate-java.lang.String-java.sql.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void setTime(String parameterName,
	             Time x)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setTime-java.lang.String-java.sql.Time-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(String parameterName,
	                  Timestamp x)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setTimestamp-java.lang.String-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(String parameterName,
	                    InputStream x,
	                    int length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setAsciiStream-java.lang.String-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(String parameterName,
	                     InputStream x,
	                     int length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBinaryStream-java.lang.String-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x,
	               int targetSqlType,
	               int scale)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setObject-java.lang.String-java.lang.Object-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x,
	               int targetSqlType)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setObject-java.lang.String-java.lang.Object-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setObject-java.lang.String-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(String parameterName,
	                        Reader reader,
	                        int length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setCharacterStream-java.lang.String-java.io.Reader-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setDate(String parameterName,
	             Date x,
	             Calendar cal)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setDate-java.lang.String-java.sql.Date-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Date
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTime(String parameterName,
	             Time x,
	             Calendar cal)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setTime-java.lang.String-java.sql.Time-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Time
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(String parameterName,
	                  Timestamp x,
	                  Calendar cal)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setTimestamp-java.lang.String-java.sql.Timestamp-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Timestamp
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setNull(String parameterName,
	             int sqlType,
	             String typeName)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNull-java.lang.String-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getString(String parameterName)
	          throws SQLException
	Name: getString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	boolean getBoolean(String parameterName)
	            throws SQLException
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBoolean-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	byte getByte(String parameterName)
	      throws SQLException
	Name: getByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getByte-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::byte
	}

	[Function]
	short getShort(String parameterName)
	        throws SQLException
	Name: getShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getShort-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::short
	}

	[Function]
	int getInt(String parameterName)
	    throws SQLException
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getInt-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	long getLong(String parameterName)
	      throws SQLException
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getLong-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	float getFloat(String parameterName)
	        throws SQLException
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getFloat-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::float
	}

	[Function]
	double getDouble(String parameterName)
	          throws SQLException
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDouble-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::double
	}

	[Function]
	byte[] getBytes(String parameterName)
	         throws SQLException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBytes-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Date getDate(String parameterName)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDate-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(String parameterName)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTime-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(String parameterName)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTimestamp-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	Object getObject(String parameterName)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	BigDecimal getBigDecimal(String parameterName)
	                  throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBigDecimal-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	Object getObject(String parameterName,
	                 Map<String,Class<?>> map)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-java.lang.String-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Ref getRef(String parameterName)
	    throws SQLException
	Name: getRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getRef-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Ref
	}

	[Function]
	Blob getBlob(String parameterName)
	      throws SQLException
	Name: getBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getBlob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Blob
	}

	[Function]
	Clob getClob(String parameterName)
	      throws SQLException
	Name: getClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getClob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Clob
	}

	[Function]
	Array getArray(String parameterName)
	        throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getArray-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Array
	}

	[Function]
	Date getDate(String parameterName,
	             Calendar cal)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getDate-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(String parameterName,
	             Calendar cal)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTime-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(String parameterName,
	                       Calendar cal)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getTimestamp-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	URL getURL(String parameterName)
	    throws SQLException
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getURL-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.net::URL
	}

	[Function]
	RowId getRowId(int parameterIndex)
	        throws SQLException
	Name: getRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getRowId-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::RowId
	}

	[Function]
	RowId getRowId(String parameterName)
	        throws SQLException
	Name: getRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getRowId-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::RowId
	}

	[Function]
	void setRowId(String parameterName,
	              RowId x)
	       throws SQLException
	Name: setRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setRowId-java.lang.String-java.sql.RowId-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void setNString(String parameterName,
	                String value)
	         throws SQLException
	Name: setNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNString-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(String parameterName,
	                         Reader value,
	                         long length)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNCharacterStream-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              NClob value)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNClob-java.lang.String-java.sql.NClob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Reader reader,
	             long length)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setClob-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBlob(String parameterName,
	             InputStream inputStream,
	             long length)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBlob-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              Reader reader,
	              long length)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNClob-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	NClob getNClob(int parameterIndex)
	        throws SQLException
	Name: getNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNClob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::NClob
	}

	[Function]
	NClob getNClob(String parameterName)
	        throws SQLException
	Name: getNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNClob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::NClob
	}

	[Function]
	void setSQLXML(String parameterName,
	               SQLXML xmlObject)
	        throws SQLException
	Name: setSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setSQLXML-java.lang.String-java.sql.SQLXML-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	SQLXML getSQLXML(int parameterIndex)
	          throws SQLException
	Name: getSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getSQLXML-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	SQLXML getSQLXML(String parameterName)
	          throws SQLException
	Name: getSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getSQLXML-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	String getNString(int parameterIndex)
	           throws SQLException
	Name: getNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNString-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getNString(String parameterName)
	           throws SQLException
	Name: getNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	Reader getNCharacterStream(int parameterIndex)
	                    throws SQLException
	Name: getNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNCharacterStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::Reader
	}

	[Function]
	Reader getNCharacterStream(String parameterName)
	                    throws SQLException
	Name: getNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getNCharacterStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::Reader
	}

	[Function]
	Reader getCharacterStream(int parameterIndex)
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getCharacterStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::Reader
	}

	[Function]
	Reader getCharacterStream(String parameterName)
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getCharacterStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::Reader
	}

	[Function]
	void setBlob(String parameterName,
	             Blob x)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBlob-java.lang.String-java.sql.Blob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Clob x)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setClob-java.lang.String-java.sql.Clob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(String parameterName,
	                    InputStream x,
	                    long length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setAsciiStream-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(String parameterName,
	                     InputStream x,
	                     long length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBinaryStream-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(String parameterName,
	                        Reader reader,
	                        long length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setCharacterStream-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(String parameterName,
	                    InputStream x)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setAsciiStream-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(String parameterName,
	                     InputStream x)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBinaryStream-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(String parameterName,
	                        Reader reader)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setCharacterStream-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(String parameterName,
	                         Reader value)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNCharacterStream-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Reader reader)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setClob-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setBlob(String parameterName,
	             InputStream inputStream)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setBlob-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              Reader reader)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setNClob-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	<T> T getObject(int parameterIndex,
	                Class<T> type)
	         throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-int-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	<T> T getObject(String parameterName,
	                Class<T> type)
	         throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#getObject-java.lang.String-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	default void setObject(String parameterName,
	                       Object x,
	                       SQLType targetSqlType,
	                       int scaleOrLength)
	                throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setObject-java.lang.String-java.lang.Object-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void setObject(String parameterName,
	                       Object x,
	                       SQLType targetSqlType)
	                throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#setObject-java.lang.String-java.lang.Object-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		java.sql::SQLType
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(int parameterIndex,
	                                  SQLType sqlType)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLType
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(int parameterIndex,
	                                  SQLType sqlType,
	                                  int scale)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(int parameterIndex,
	                                  SQLType sqlType,
	                                  String typeName)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-int-java.sql.SQLType-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLType
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(String parameterName,
	                                  SQLType sqlType)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLType
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(String parameterName,
	                                  SQLType sqlType,
	                                  int scale)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void registerOutParameter(String parameterName,
	                                  SQLType sqlType,
	                                  String typeName)
	                           throws SQLException
	Name: registerOutParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/CallableStatement.html#registerOutParameter-java.lang.String-java.sql.SQLType-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallableStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLType
		java.lang::String
	
		[result]
		other::void
	}
}

[Classifier]
public interface Clob
Name: Clob
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::NClob
	javax.sql.rowset.serial::SerialClob
}
supertypes {
}
members {

	[Function]
	long length()
	     throws SQLException
	Name: length
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#length--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	String getSubString(long pos,
	                    int length)
	             throws SQLException
	Name: getSubString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#getSubString-long-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	Reader getCharacterStream()
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#getCharacterStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Reader
	}

	[Function]
	InputStream getAsciiStream()
	                    throws SQLException
	Name: getAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#getAsciiStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	long position(String searchstr,
	              long start)
	       throws SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#position-java.lang.String-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::long
	}

	[Function]
	long position(Clob searchstr,
	              long start)
	       throws SQLException
	Name: position
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#position-java.sql.Clob-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Clob
		other::long
	
		[result]
		other::long
	}

	[Function]
	int setString(long pos,
	              String str)
	       throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#setString-long-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	int setString(long pos,
	              String str,
	              int offset,
	              int len)
	       throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#setString-long-java.lang.String-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.lang::String
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	OutputStream setAsciiStream(long pos)
	                     throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#setAsciiStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::OutputStream
	}

	[Function]
	Writer setCharacterStream(long pos)
	                   throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#setCharacterStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.io::Writer
	}

	[Function]
	void truncate(long len)
	       throws SQLException
	Name: truncate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#truncate-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	void free()
	   throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#free--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	Reader getCharacterStream(long pos,
	                          long length)
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Clob.html#getCharacterStream-long-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Clob
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		other::long
	
		[result]
		java.io::Reader
	}
}

[Classifier]
public interface Connection
extends Wrapper, AutoCloseable
Name: Connection
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Wrapper
	java.lang::AutoCloseable
}
members {

	[Function]
	static final int TRANSACTION_NONE
	Name: TRANSACTION_NONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#TRANSACTION_NONE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TRANSACTION_READ_UNCOMMITTED
	Name: TRANSACTION_READ_UNCOMMITTED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#TRANSACTION_READ_UNCOMMITTED
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TRANSACTION_READ_COMMITTED
	Name: TRANSACTION_READ_COMMITTED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#TRANSACTION_READ_COMMITTED
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TRANSACTION_REPEATABLE_READ
	Name: TRANSACTION_REPEATABLE_READ
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#TRANSACTION_REPEATABLE_READ
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TRANSACTION_SERIALIZABLE
	Name: TRANSACTION_SERIALIZABLE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#TRANSACTION_SERIALIZABLE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Statement createStatement()
	                   throws SQLException
	Name: createStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createStatement--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Statement
	}

	[Function]
	PreparedStatement prepareStatement(String sql)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	CallableStatement prepareCall(String sql)
	                       throws SQLException
	Name: prepareCall
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareCall-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::CallableStatement
	}

	[Function]
	String nativeSQL(String sql)
	          throws SQLException
	Name: nativeSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#nativeSQL-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	void setAutoCommit(boolean autoCommit)
	            throws SQLException
	Name: setAutoCommit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setAutoCommit-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getAutoCommit()
	               throws SQLException
	Name: getAutoCommit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getAutoCommit--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void commit()
	     throws SQLException
	Name: commit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#commit--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void rollback()
	       throws SQLException
	Name: rollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#rollback--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void close()
	    throws SQLException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#close--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isClosed()
	          throws SQLException
	Name: isClosed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#isClosed--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	DatabaseMetaData getMetaData()
	                      throws SQLException
	Name: getMetaData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getMetaData--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::DatabaseMetaData
	}

	[Function]
	void setReadOnly(boolean readOnly)
	          throws SQLException
	Name: setReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setReadOnly-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean isReadOnly()
	            throws SQLException
	Name: isReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#isReadOnly--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setCatalog(String catalog)
	         throws SQLException
	Name: setCatalog
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setCatalog-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getCatalog()
	           throws SQLException
	Name: getCatalog
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getCatalog--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setTransactionIsolation(int level)
	                      throws SQLException
	Name: setTransactionIsolation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setTransactionIsolation-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getTransactionIsolation()
	                     throws SQLException
	Name: getTransactionIsolation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getTransactionIsolation--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	SQLWarning getWarnings()
	                throws SQLException
	Name: getWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	void clearWarnings()
	            throws SQLException
	Name: clearWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#clearWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	Statement createStatement(int resultSetType,
	                          int resultSetConcurrency)
	                   throws SQLException
	Name: createStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createStatement-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.sql::Statement
	}

	[Function]
	PreparedStatement prepareStatement(String sql,
	                                   int resultSetType,
	                                   int resultSetConcurrency)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	CallableStatement prepareCall(String sql,
	                              int resultSetType,
	                              int resultSetConcurrency)
	                       throws SQLException
	Name: prepareCall
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareCall-java.lang.String-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
	
		[result]
		java.sql::CallableStatement
	}

	[Function]
	Map<String,Class<?>> getTypeMap()
	                         throws SQLException
	Name: getTypeMap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getTypeMap--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	}

	[Function]
	void setTypeMap(Map<String,Class<?>> map)
	         throws SQLException
	Name: setTypeMap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setTypeMap-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		other::void
	}

	[Function]
	void setHoldability(int holdability)
	             throws SQLException
	Name: setHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setHoldability-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getHoldability()
	            throws SQLException
	Name: getHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getHoldability--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Savepoint setSavepoint()
	                throws SQLException
	Name: setSavepoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setSavepoint--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Savepoint
	}

	[Function]
	Savepoint setSavepoint(String name)
	                throws SQLException
	Name: setSavepoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setSavepoint-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Savepoint
	}

	[Function]
	void rollback(Savepoint savepoint)
	       throws SQLException
	Name: rollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#rollback-java.sql.Savepoint-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Savepoint
	
		[result]
		other::void
	}

	[Function]
	void releaseSavepoint(Savepoint savepoint)
	               throws SQLException
	Name: releaseSavepoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#releaseSavepoint-java.sql.Savepoint-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Savepoint
	
		[result]
		other::void
	}

	[Function]
	Statement createStatement(int resultSetType,
	                          int resultSetConcurrency,
	                          int resultSetHoldability)
	                   throws SQLException
	Name: createStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createStatement-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.sql::Statement
	}

	[Function]
	PreparedStatement prepareStatement(String sql,
	                                   int resultSetType,
	                                   int resultSetConcurrency,
	                                   int resultSetHoldability)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
		other::int
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	CallableStatement prepareCall(String sql,
	                              int resultSetType,
	                              int resultSetConcurrency,
	                              int resultSetHoldability)
	                       throws SQLException
	Name: prepareCall
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareCall-java.lang.String-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
		other::int
	
		[result]
		java.sql::CallableStatement
	}

	[Function]
	PreparedStatement prepareStatement(String sql,
	                                   int autoGeneratedKeys)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	PreparedStatement prepareStatement(String sql,
	                                   int[] columnIndexes)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	PreparedStatement prepareStatement(String sql,
	                                   String[] columnNames)
	                            throws SQLException
	Name: prepareStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#prepareStatement-java.lang.String-java.lang.String:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::String
		}
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	Clob createClob()
	         throws SQLException
	Name: createClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createClob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Clob
	}

	[Function]
	Blob createBlob()
	         throws SQLException
	Name: createBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createBlob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Blob
	}

	[Function]
	NClob createNClob()
	           throws SQLException
	Name: createNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createNClob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::NClob
	}

	[Function]
	SQLXML createSQLXML()
	             throws SQLException
	Name: createSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createSQLXML--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	boolean isValid(int timeout)
	         throws SQLException
	Name: isValid
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#isValid-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	void setClientInfo(String name,
	                   String value)
	            throws SQLClientInfoException
	Name: setClientInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setClientInfo-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setClientInfo(Properties properties)
	            throws SQLClientInfoException
	Name: setClientInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setClientInfo-java.util.Properties-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Properties
	
		[result]
		other::void
	}

	[Function]
	String getClientInfo(String name)
	              throws SQLException
	Name: getClientInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getClientInfo-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	Properties getClientInfo()
	                  throws SQLException
	Name: getClientInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getClientInfo--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Properties
	}

	[Function]
	Array createArrayOf(String typeName,
	                    Object[] elements)
	             throws SQLException
	Name: createArrayOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createArrayOf-java.lang.String-java.lang.Object:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		java.sql::Array
	}

	[Function]
	Struct createStruct(String typeName,
	                    Object[] attributes)
	             throws SQLException
	Name: createStruct
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#createStruct-java.lang.String-java.lang.Object:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		java.sql::Struct
	}

	[Function]
	void setSchema(String schema)
	        throws SQLException
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setSchema-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getSchema()
	          throws SQLException
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getSchema--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void abort(Executor executor)
	    throws SQLException
	Name: abort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#abort-java.util.concurrent.Executor-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.concurrent::Executor
	
		[result]
		other::void
	}

	[Function]
	void setNetworkTimeout(Executor executor,
	                       int milliseconds)
	                throws SQLException
	Name: setNetworkTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#setNetworkTimeout-java.util.concurrent.Executor-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.concurrent::Executor
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getNetworkTimeout()
	               throws SQLException
	Name: getNetworkTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html#getNetworkTimeout--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Connection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public interface DatabaseMetaData
extends Wrapper
Name: DatabaseMetaData
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Wrapper
}
members {

	[Function]
	static final int procedureResultUnknown
	Name: procedureResultUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureResultUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureNoResult
	Name: procedureNoResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureNoResult
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureReturnsResult
	Name: procedureReturnsResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureReturnsResult
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnUnknown
	Name: procedureColumnUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnIn
	Name: procedureColumnIn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnIn
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnInOut
	Name: procedureColumnInOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnInOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnOut
	Name: procedureColumnOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnReturn
	Name: procedureColumnReturn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnReturn
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureColumnResult
	Name: procedureColumnResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureColumnResult
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureNoNulls
	Name: procedureNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureNullable
	Name: procedureNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int procedureNullableUnknown
	Name: procedureNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#procedureNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int columnNoNulls
	Name: columnNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#columnNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int columnNullable
	Name: columnNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#columnNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int columnNullableUnknown
	Name: columnNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#columnNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowTemporary
	Name: bestRowTemporary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowTemporary
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowTransaction
	Name: bestRowTransaction
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowTransaction
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowSession
	Name: bestRowSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowSession
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowUnknown
	Name: bestRowUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowNotPseudo
	Name: bestRowNotPseudo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowNotPseudo
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int bestRowPseudo
	Name: bestRowPseudo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#bestRowPseudo
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int versionColumnUnknown
	Name: versionColumnUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#versionColumnUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int versionColumnNotPseudo
	Name: versionColumnNotPseudo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#versionColumnNotPseudo
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int versionColumnPseudo
	Name: versionColumnPseudo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#versionColumnPseudo
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyCascade
	Name: importedKeyCascade
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyCascade
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyRestrict
	Name: importedKeyRestrict
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyRestrict
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeySetNull
	Name: importedKeySetNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeySetNull
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyNoAction
	Name: importedKeyNoAction
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyNoAction
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeySetDefault
	Name: importedKeySetDefault
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeySetDefault
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyInitiallyDeferred
	Name: importedKeyInitiallyDeferred
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyInitiallyDeferred
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyInitiallyImmediate
	Name: importedKeyInitiallyImmediate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyInitiallyImmediate
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int importedKeyNotDeferrable
	Name: importedKeyNotDeferrable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#importedKeyNotDeferrable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typeNoNulls
	Name: typeNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typeNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typeNullable
	Name: typeNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typeNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typeNullableUnknown
	Name: typeNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typeNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typePredNone
	Name: typePredNone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typePredNone
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typePredChar
	Name: typePredChar
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typePredChar
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typePredBasic
	Name: typePredBasic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typePredBasic
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int typeSearchable
	Name: typeSearchable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#typeSearchable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final short tableIndexStatistic
	Name: tableIndexStatistic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#tableIndexStatistic
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short tableIndexClustered
	Name: tableIndexClustered
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#tableIndexClustered
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short tableIndexHashed
	Name: tableIndexHashed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#tableIndexHashed
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short tableIndexOther
	Name: tableIndexOther
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#tableIndexOther
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short attributeNoNulls
	Name: attributeNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#attributeNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short attributeNullable
	Name: attributeNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#attributeNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final short attributeNullableUnknown
	Name: attributeNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#attributeNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	static final int sqlStateXOpen
	Name: sqlStateXOpen
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#sqlStateXOpen
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int sqlStateSQL
	Name: sqlStateSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#sqlStateSQL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int sqlStateSQL99
	Name: sqlStateSQL99
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#sqlStateSQL99
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionColumnUnknown
	Name: functionColumnUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionColumnUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionColumnIn
	Name: functionColumnIn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionColumnIn
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionColumnInOut
	Name: functionColumnInOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionColumnInOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionColumnOut
	Name: functionColumnOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionColumnOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionReturn
	Name: functionReturn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionReturn
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionColumnResult
	Name: functionColumnResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionColumnResult
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionNoNulls
	Name: functionNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionNullable
	Name: functionNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionNullableUnknown
	Name: functionNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionResultUnknown
	Name: functionResultUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionResultUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionNoTable
	Name: functionNoTable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionNoTable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int functionReturnsTable
	Name: functionReturnsTable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#functionReturnsTable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean allProceduresAreCallable()
	                          throws SQLException
	Name: allProceduresAreCallable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#allProceduresAreCallable--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean allTablesAreSelectable()
	                        throws SQLException
	Name: allTablesAreSelectable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#allTablesAreSelectable--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getURL()
	       throws SQLException
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getURL--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getUserName()
	            throws SQLException
	Name: getUserName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getUserName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isReadOnly()
	            throws SQLException
	Name: isReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#isReadOnly--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean nullsAreSortedHigh()
	                    throws SQLException
	Name: nullsAreSortedHigh
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#nullsAreSortedHigh--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean nullsAreSortedLow()
	                   throws SQLException
	Name: nullsAreSortedLow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#nullsAreSortedLow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean nullsAreSortedAtStart()
	                       throws SQLException
	Name: nullsAreSortedAtStart
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#nullsAreSortedAtStart--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean nullsAreSortedAtEnd()
	                     throws SQLException
	Name: nullsAreSortedAtEnd
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#nullsAreSortedAtEnd--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getDatabaseProductName()
	                       throws SQLException
	Name: getDatabaseProductName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDatabaseProductName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getDatabaseProductVersion()
	                          throws SQLException
	Name: getDatabaseProductVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDatabaseProductVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getDriverName()
	              throws SQLException
	Name: getDriverName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDriverName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getDriverVersion()
	                 throws SQLException
	Name: getDriverVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDriverVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	int getDriverMajorVersion()
	Name: getDriverMajorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDriverMajorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getDriverMinorVersion()
	Name: getDriverMinorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDriverMinorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean usesLocalFiles()
	                throws SQLException
	Name: usesLocalFiles
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#usesLocalFiles--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean usesLocalFilePerTable()
	                       throws SQLException
	Name: usesLocalFilePerTable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#usesLocalFilePerTable--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMixedCaseIdentifiers()
	                              throws SQLException
	Name: supportsMixedCaseIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMixedCaseIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesUpperCaseIdentifiers()
	                            throws SQLException
	Name: storesUpperCaseIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesUpperCaseIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesLowerCaseIdentifiers()
	                            throws SQLException
	Name: storesLowerCaseIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesLowerCaseIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesMixedCaseIdentifiers()
	                            throws SQLException
	Name: storesMixedCaseIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesMixedCaseIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMixedCaseQuotedIdentifiers()
	                                    throws SQLException
	Name: supportsMixedCaseQuotedIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMixedCaseQuotedIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesUpperCaseQuotedIdentifiers()
	                                  throws SQLException
	Name: storesUpperCaseQuotedIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesUpperCaseQuotedIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesLowerCaseQuotedIdentifiers()
	                                  throws SQLException
	Name: storesLowerCaseQuotedIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesLowerCaseQuotedIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean storesMixedCaseQuotedIdentifiers()
	                                  throws SQLException
	Name: storesMixedCaseQuotedIdentifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#storesMixedCaseQuotedIdentifiers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getIdentifierQuoteString()
	                         throws SQLException
	Name: getIdentifierQuoteString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getIdentifierQuoteString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getSQLKeywords()
	               throws SQLException
	Name: getSQLKeywords
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSQLKeywords--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getNumericFunctions()
	                    throws SQLException
	Name: getNumericFunctions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getNumericFunctions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getStringFunctions()
	                   throws SQLException
	Name: getStringFunctions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getStringFunctions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getSystemFunctions()
	                   throws SQLException
	Name: getSystemFunctions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSystemFunctions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getTimeDateFunctions()
	                     throws SQLException
	Name: getTimeDateFunctions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getTimeDateFunctions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getSearchStringEscape()
	                      throws SQLException
	Name: getSearchStringEscape
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSearchStringEscape--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getExtraNameCharacters()
	                       throws SQLException
	Name: getExtraNameCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getExtraNameCharacters--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean supportsAlterTableWithAddColumn()
	                                 throws SQLException
	Name: supportsAlterTableWithAddColumn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsAlterTableWithAddColumn--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsAlterTableWithDropColumn()
	                                  throws SQLException
	Name: supportsAlterTableWithDropColumn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsAlterTableWithDropColumn--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsColumnAliasing()
	                        throws SQLException
	Name: supportsColumnAliasing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsColumnAliasing--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean nullPlusNonNullIsNull()
	                       throws SQLException
	Name: nullPlusNonNullIsNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#nullPlusNonNullIsNull--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsConvert()
	                 throws SQLException
	Name: supportsConvert
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsConvert--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsConvert(int fromType,
	                        int toType)
	                 throws SQLException
	Name: supportsConvert
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsConvert-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsTableCorrelationNames()
	                               throws SQLException
	Name: supportsTableCorrelationNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsTableCorrelationNames--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsDifferentTableCorrelationNames()
	                                        throws SQLException
	Name: supportsDifferentTableCorrelationNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsDifferentTableCorrelationNames--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsExpressionsInOrderBy()
	                              throws SQLException
	Name: supportsExpressionsInOrderBy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsExpressionsInOrderBy--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOrderByUnrelated()
	                          throws SQLException
	Name: supportsOrderByUnrelated
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOrderByUnrelated--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsGroupBy()
	                 throws SQLException
	Name: supportsGroupBy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsGroupBy--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsGroupByUnrelated()
	                          throws SQLException
	Name: supportsGroupByUnrelated
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsGroupByUnrelated--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsGroupByBeyondSelect()
	                             throws SQLException
	Name: supportsGroupByBeyondSelect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsGroupByBeyondSelect--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsLikeEscapeClause()
	                          throws SQLException
	Name: supportsLikeEscapeClause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsLikeEscapeClause--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMultipleResultSets()
	                            throws SQLException
	Name: supportsMultipleResultSets
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMultipleResultSets--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMultipleTransactions()
	                              throws SQLException
	Name: supportsMultipleTransactions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMultipleTransactions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsNonNullableColumns()
	                            throws SQLException
	Name: supportsNonNullableColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsNonNullableColumns--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMinimumSQLGrammar()
	                           throws SQLException
	Name: supportsMinimumSQLGrammar
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMinimumSQLGrammar--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCoreSQLGrammar()
	                        throws SQLException
	Name: supportsCoreSQLGrammar
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCoreSQLGrammar--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsExtendedSQLGrammar()
	                            throws SQLException
	Name: supportsExtendedSQLGrammar
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsExtendedSQLGrammar--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsANSI92EntryLevelSQL()
	                             throws SQLException
	Name: supportsANSI92EntryLevelSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsANSI92EntryLevelSQL--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsANSI92IntermediateSQL()
	                               throws SQLException
	Name: supportsANSI92IntermediateSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsANSI92IntermediateSQL--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsANSI92FullSQL()
	                       throws SQLException
	Name: supportsANSI92FullSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsANSI92FullSQL--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsIntegrityEnhancementFacility()
	                                      throws SQLException
	Name: supportsIntegrityEnhancementFacility
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsIntegrityEnhancementFacility--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOuterJoins()
	                    throws SQLException
	Name: supportsOuterJoins
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOuterJoins--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsFullOuterJoins()
	                        throws SQLException
	Name: supportsFullOuterJoins
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsFullOuterJoins--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsLimitedOuterJoins()
	                           throws SQLException
	Name: supportsLimitedOuterJoins
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsLimitedOuterJoins--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getSchemaTerm()
	              throws SQLException
	Name: getSchemaTerm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSchemaTerm--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getProcedureTerm()
	                 throws SQLException
	Name: getProcedureTerm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getProcedureTerm--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getCatalogTerm()
	               throws SQLException
	Name: getCatalogTerm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getCatalogTerm--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isCatalogAtStart()
	                  throws SQLException
	Name: isCatalogAtStart
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#isCatalogAtStart--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getCatalogSeparator()
	                    throws SQLException
	Name: getCatalogSeparator
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getCatalogSeparator--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean supportsSchemasInDataManipulation()
	                                   throws SQLException
	Name: supportsSchemasInDataManipulation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSchemasInDataManipulation--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSchemasInProcedureCalls()
	                                 throws SQLException
	Name: supportsSchemasInProcedureCalls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSchemasInProcedureCalls--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSchemasInTableDefinitions()
	                                   throws SQLException
	Name: supportsSchemasInTableDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSchemasInTableDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSchemasInIndexDefinitions()
	                                   throws SQLException
	Name: supportsSchemasInIndexDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSchemasInIndexDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSchemasInPrivilegeDefinitions()
	                                       throws SQLException
	Name: supportsSchemasInPrivilegeDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSchemasInPrivilegeDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCatalogsInDataManipulation()
	                                    throws SQLException
	Name: supportsCatalogsInDataManipulation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCatalogsInDataManipulation--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCatalogsInProcedureCalls()
	                                  throws SQLException
	Name: supportsCatalogsInProcedureCalls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCatalogsInProcedureCalls--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCatalogsInTableDefinitions()
	                                    throws SQLException
	Name: supportsCatalogsInTableDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCatalogsInTableDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCatalogsInIndexDefinitions()
	                                    throws SQLException
	Name: supportsCatalogsInIndexDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCatalogsInIndexDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCatalogsInPrivilegeDefinitions()
	                                        throws SQLException
	Name: supportsCatalogsInPrivilegeDefinitions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCatalogsInPrivilegeDefinitions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsPositionedDelete()
	                          throws SQLException
	Name: supportsPositionedDelete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsPositionedDelete--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsPositionedUpdate()
	                          throws SQLException
	Name: supportsPositionedUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsPositionedUpdate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSelectForUpdate()
	                         throws SQLException
	Name: supportsSelectForUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSelectForUpdate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsStoredProcedures()
	                          throws SQLException
	Name: supportsStoredProcedures
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsStoredProcedures--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSubqueriesInComparisons()
	                                 throws SQLException
	Name: supportsSubqueriesInComparisons
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSubqueriesInComparisons--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSubqueriesInExists()
	                            throws SQLException
	Name: supportsSubqueriesInExists
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSubqueriesInExists--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSubqueriesInIns()
	                         throws SQLException
	Name: supportsSubqueriesInIns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSubqueriesInIns--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsSubqueriesInQuantifieds()
	                                 throws SQLException
	Name: supportsSubqueriesInQuantifieds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSubqueriesInQuantifieds--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsCorrelatedSubqueries()
	                              throws SQLException
	Name: supportsCorrelatedSubqueries
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsCorrelatedSubqueries--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsUnion()
	               throws SQLException
	Name: supportsUnion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsUnion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsUnionAll()
	                  throws SQLException
	Name: supportsUnionAll
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsUnionAll--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOpenCursorsAcrossCommit()
	                                 throws SQLException
	Name: supportsOpenCursorsAcrossCommit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOpenCursorsAcrossCommit--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOpenCursorsAcrossRollback()
	                                   throws SQLException
	Name: supportsOpenCursorsAcrossRollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOpenCursorsAcrossRollback--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOpenStatementsAcrossCommit()
	                                    throws SQLException
	Name: supportsOpenStatementsAcrossCommit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOpenStatementsAcrossCommit--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsOpenStatementsAcrossRollback()
	                                      throws SQLException
	Name: supportsOpenStatementsAcrossRollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsOpenStatementsAcrossRollback--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	int getMaxBinaryLiteralLength()
	                       throws SQLException
	Name: getMaxBinaryLiteralLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxBinaryLiteralLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxCharLiteralLength()
	                     throws SQLException
	Name: getMaxCharLiteralLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxCharLiteralLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnNameLength()
	                    throws SQLException
	Name: getMaxColumnNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnsInGroupBy()
	                    throws SQLException
	Name: getMaxColumnsInGroupBy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnsInGroupBy--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnsInIndex()
	                  throws SQLException
	Name: getMaxColumnsInIndex
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnsInIndex--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnsInOrderBy()
	                    throws SQLException
	Name: getMaxColumnsInOrderBy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnsInOrderBy--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnsInSelect()
	                   throws SQLException
	Name: getMaxColumnsInSelect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnsInSelect--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxColumnsInTable()
	                  throws SQLException
	Name: getMaxColumnsInTable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxColumnsInTable--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxConnections()
	               throws SQLException
	Name: getMaxConnections
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxConnections--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxCursorNameLength()
	                    throws SQLException
	Name: getMaxCursorNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxCursorNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxIndexLength()
	               throws SQLException
	Name: getMaxIndexLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxIndexLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxSchemaNameLength()
	                    throws SQLException
	Name: getMaxSchemaNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxSchemaNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxProcedureNameLength()
	                       throws SQLException
	Name: getMaxProcedureNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxProcedureNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxCatalogNameLength()
	                     throws SQLException
	Name: getMaxCatalogNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxCatalogNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxRowSize()
	           throws SQLException
	Name: getMaxRowSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxRowSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean doesMaxRowSizeIncludeBlobs()
	                            throws SQLException
	Name: doesMaxRowSizeIncludeBlobs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#doesMaxRowSizeIncludeBlobs--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	int getMaxStatementLength()
	                   throws SQLException
	Name: getMaxStatementLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxStatementLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxStatements()
	              throws SQLException
	Name: getMaxStatements
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxStatements--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxTableNameLength()
	                   throws SQLException
	Name: getMaxTableNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxTableNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxTablesInSelect()
	                  throws SQLException
	Name: getMaxTablesInSelect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxTablesInSelect--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxUserNameLength()
	                  throws SQLException
	Name: getMaxUserNameLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxUserNameLength--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getDefaultTransactionIsolation()
	                            throws SQLException
	Name: getDefaultTransactionIsolation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDefaultTransactionIsolation--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean supportsTransactions()
	                      throws SQLException
	Name: supportsTransactions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsTransactions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsTransactionIsolationLevel(int level)
	                                   throws SQLException
	Name: supportsTransactionIsolationLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsTransactionIsolationLevel-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsDataDefinitionAndDataManipulationTransactions()
	                                                       throws SQLException
	Name: supportsDataDefinitionAndDataManipulationTransactions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsDataDefinitionAndDataManipulationTransactions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsDataManipulationTransactionsOnly()
	                                          throws SQLException
	Name: supportsDataManipulationTransactionsOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsDataManipulationTransactionsOnly--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean dataDefinitionCausesTransactionCommit()
	                                       throws SQLException
	Name: dataDefinitionCausesTransactionCommit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#dataDefinitionCausesTransactionCommit--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean dataDefinitionIgnoredInTransactions()
	                                     throws SQLException
	Name: dataDefinitionIgnoredInTransactions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#dataDefinitionIgnoredInTransactions--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getProcedures(String catalog,
	                        String schemaPattern,
	                        String procedureNamePattern)
	                 throws SQLException
	Name: getProcedures
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getProcedures-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getProcedureColumns(String catalog,
	                              String schemaPattern,
	                              String procedureNamePattern,
	                              String columnNamePattern)
	                       throws SQLException
	Name: getProcedureColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getProcedureColumns-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getTables(String catalog,
	                    String schemaPattern,
	                    String tableNamePattern,
	                    String[] types)
	             throws SQLException
	Name: getTables
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getTables-java.lang.String-java.lang.String-java.lang.String-java.lang.String:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		other::[] {
			java.lang::String
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getSchemas()
	              throws SQLException
	Name: getSchemas
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSchemas--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getCatalogs()
	               throws SQLException
	Name: getCatalogs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getCatalogs--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getTableTypes()
	                 throws SQLException
	Name: getTableTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getTableTypes--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getColumns(String catalog,
	                     String schemaPattern,
	                     String tableNamePattern,
	                     String columnNamePattern)
	              throws SQLException
	Name: getColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getColumns-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getColumnPrivileges(String catalog,
	                              String schema,
	                              String table,
	                              String columnNamePattern)
	                       throws SQLException
	Name: getColumnPrivileges
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getColumnPrivileges-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getTablePrivileges(String catalog,
	                             String schemaPattern,
	                             String tableNamePattern)
	                      throws SQLException
	Name: getTablePrivileges
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getTablePrivileges-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getBestRowIdentifier(String catalog,
	                               String schema,
	                               String table,
	                               int scope,
	                               boolean nullable)
	                        throws SQLException
	Name: getBestRowIdentifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getBestRowIdentifier-java.lang.String-java.lang.String-java.lang.String-int-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		other::int
		other::boolean
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getVersionColumns(String catalog,
	                            String schema,
	                            String table)
	                     throws SQLException
	Name: getVersionColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getVersionColumns-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getPrimaryKeys(String catalog,
	                         String schema,
	                         String table)
	                  throws SQLException
	Name: getPrimaryKeys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getPrimaryKeys-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getImportedKeys(String catalog,
	                          String schema,
	                          String table)
	                   throws SQLException
	Name: getImportedKeys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getImportedKeys-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getExportedKeys(String catalog,
	                          String schema,
	                          String table)
	                   throws SQLException
	Name: getExportedKeys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getExportedKeys-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getCrossReference(String parentCatalog,
	                            String parentSchema,
	                            String parentTable,
	                            String foreignCatalog,
	                            String foreignSchema,
	                            String foreignTable)
	                     throws SQLException
	Name: getCrossReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getCrossReference-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getTypeInfo()
	               throws SQLException
	Name: getTypeInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getTypeInfo--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getIndexInfo(String catalog,
	                       String schema,
	                       String table,
	                       boolean unique,
	                       boolean approximate)
	                throws SQLException
	Name: getIndexInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getIndexInfo-java.lang.String-java.lang.String-java.lang.String-boolean-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		other::boolean
		other::boolean
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	boolean supportsResultSetType(int type)
	                       throws SQLException
	Name: supportsResultSetType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsResultSetType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsResultSetConcurrency(int type,
	                                     int concurrency)
	                              throws SQLException
	Name: supportsResultSetConcurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsResultSetConcurrency-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean ownUpdatesAreVisible(int type)
	                      throws SQLException
	Name: ownUpdatesAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#ownUpdatesAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean ownDeletesAreVisible(int type)
	                      throws SQLException
	Name: ownDeletesAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#ownDeletesAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean ownInsertsAreVisible(int type)
	                      throws SQLException
	Name: ownInsertsAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#ownInsertsAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean othersUpdatesAreVisible(int type)
	                         throws SQLException
	Name: othersUpdatesAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#othersUpdatesAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean othersDeletesAreVisible(int type)
	                         throws SQLException
	Name: othersDeletesAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#othersDeletesAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean othersInsertsAreVisible(int type)
	                         throws SQLException
	Name: othersInsertsAreVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#othersInsertsAreVisible-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean updatesAreDetected(int type)
	                    throws SQLException
	Name: updatesAreDetected
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#updatesAreDetected-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean deletesAreDetected(int type)
	                    throws SQLException
	Name: deletesAreDetected
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#deletesAreDetected-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean insertsAreDetected(int type)
	                    throws SQLException
	Name: insertsAreDetected
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#insertsAreDetected-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsBatchUpdates()
	                      throws SQLException
	Name: supportsBatchUpdates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsBatchUpdates--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getUDTs(String catalog,
	                  String schemaPattern,
	                  String typeNamePattern,
	                  int[] types)
	           throws SQLException
	Name: getUDTs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getUDTs-java.lang.String-java.lang.String-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	Connection getConnection()
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getConnection--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Connection
	}

	[Function]
	boolean supportsSavepoints()
	                    throws SQLException
	Name: supportsSavepoints
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsSavepoints--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsNamedParameters()
	                         throws SQLException
	Name: supportsNamedParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsNamedParameters--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsMultipleOpenResults()
	                             throws SQLException
	Name: supportsMultipleOpenResults
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsMultipleOpenResults--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsGetGeneratedKeys()
	                          throws SQLException
	Name: supportsGetGeneratedKeys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsGetGeneratedKeys--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getSuperTypes(String catalog,
	                        String schemaPattern,
	                        String typeNamePattern)
	                 throws SQLException
	Name: getSuperTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSuperTypes-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getSuperTables(String catalog,
	                         String schemaPattern,
	                         String tableNamePattern)
	                  throws SQLException
	Name: getSuperTables
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSuperTables-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getAttributes(String catalog,
	                        String schemaPattern,
	                        String typeNamePattern,
	                        String attributeNamePattern)
	                 throws SQLException
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getAttributes-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	boolean supportsResultSetHoldability(int holdability)
	                              throws SQLException
	Name: supportsResultSetHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsResultSetHoldability-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	int getResultSetHoldability()
	                     throws SQLException
	Name: getResultSetHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getResultSetHoldability--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getDatabaseMajorVersion()
	                     throws SQLException
	Name: getDatabaseMajorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDatabaseMajorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getDatabaseMinorVersion()
	                     throws SQLException
	Name: getDatabaseMinorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getDatabaseMinorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getJDBCMajorVersion()
	                 throws SQLException
	Name: getJDBCMajorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getJDBCMajorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getJDBCMinorVersion()
	                 throws SQLException
	Name: getJDBCMinorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getJDBCMinorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getSQLStateType()
	             throws SQLException
	Name: getSQLStateType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSQLStateType--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean locatorsUpdateCopy()
	                    throws SQLException
	Name: locatorsUpdateCopy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#locatorsUpdateCopy--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean supportsStatementPooling()
	                          throws SQLException
	Name: supportsStatementPooling
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsStatementPooling--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	RowIdLifetime getRowIdLifetime()
	                        throws SQLException
	Name: getRowIdLifetime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getRowIdLifetime--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	ResultSet getSchemas(String catalog,
	                     String schemaPattern)
	              throws SQLException
	Name: getSchemas
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getSchemas-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	boolean supportsStoredFunctionsUsingCallSyntax()
	                                        throws SQLException
	Name: supportsStoredFunctionsUsingCallSyntax
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsStoredFunctionsUsingCallSyntax--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean autoCommitFailureClosesAllResultSets()
	                                      throws SQLException
	Name: autoCommitFailureClosesAllResultSets
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#autoCommitFailureClosesAllResultSets--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getClientInfoProperties()
	                           throws SQLException
	Name: getClientInfoProperties
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getClientInfoProperties--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getFunctions(String catalog,
	                       String schemaPattern,
	                       String functionNamePattern)
	                throws SQLException
	Name: getFunctions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getFunctions-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getFunctionColumns(String catalog,
	                             String schemaPattern,
	                             String functionNamePattern,
	                             String columnNamePattern)
	                      throws SQLException
	Name: getFunctionColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getFunctionColumns-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getPseudoColumns(String catalog,
	                           String schemaPattern,
	                           String tableNamePattern,
	                           String columnNamePattern)
	                    throws SQLException
	Name: getPseudoColumns
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getPseudoColumns-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	boolean generatedKeyAlwaysReturned()
	                            throws SQLException
	Name: generatedKeyAlwaysReturned
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#generatedKeyAlwaysReturned--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	default long getMaxLogicalLobSize()
	                           throws SQLException
	Name: getMaxLogicalLobSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#getMaxLogicalLobSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	default boolean supportsRefCursors()
	                            throws SQLException
	Name: supportsRefCursors
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DatabaseMetaData.html#supportsRefCursors--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatabaseMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface Driver
Name: Driver
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	Connection connect(String url,
	                   Properties info)
	            throws SQLException
	Name: connect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#connect-java.lang.String-java.util.Properties-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Properties
	
		[result]
		java.sql::Connection
	}

	[Function]
	boolean acceptsURL(String url)
	            throws SQLException
	Name: acceptsURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#acceptsURL-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	DriverPropertyInfo[] getPropertyInfo(String url,
	                                     Properties info)
	                              throws SQLException
	Name: getPropertyInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#getPropertyInfo-java.lang.String-java.util.Properties-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Properties
	
		[result]
		other::[] {
			java.sql::DriverPropertyInfo
		}
	}

	[Function]
	int getMajorVersion()
	Name: getMajorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#getMajorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMinorVersion()
	Name: getMinorVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#getMinorVersion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean jdbcCompliant()
	Name: jdbcCompliant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#jdbcCompliant--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	Logger getParentLogger()
	                throws SQLFeatureNotSupportedException
	Name: getParentLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Driver.html#getParentLogger--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Driver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}
}

[Classifier]
public interface DriverAction
Name: DriverAction
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverAction.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	void deregister()
	Name: deregister
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverAction.html#deregister--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DriverAction
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public interface NClob
extends Clob
Name: NClob
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/NClob.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Clob
}
members {
}

[Classifier]
public interface ParameterMetaData
extends Wrapper
Name: ParameterMetaData
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::Wrapper
}
members {

	[Function]
	static final int parameterNoNulls
	Name: parameterNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterNullable
	Name: parameterNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterNullableUnknown
	Name: parameterNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterModeUnknown
	Name: parameterModeUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterModeUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterModeIn
	Name: parameterModeIn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterModeIn
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterModeInOut
	Name: parameterModeInOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterModeInOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int parameterModeOut
	Name: parameterModeOut
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#parameterModeOut
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getParameterCount()
	               throws SQLException
	Name: getParameterCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getParameterCount--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int isNullable(int param)
	        throws SQLException
	Name: isNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#isNullable-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	boolean isSigned(int param)
	          throws SQLException
	Name: isSigned
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#isSigned-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	int getPrecision(int param)
	          throws SQLException
	Name: getPrecision
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getPrecision-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	int getScale(int param)
	      throws SQLException
	Name: getScale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getScale-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	int getParameterType(int param)
	              throws SQLException
	Name: getParameterType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getParameterType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	String getParameterTypeName(int param)
	                     throws SQLException
	Name: getParameterTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getParameterTypeName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getParameterClassName(int param)
	                      throws SQLException
	Name: getParameterClassName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getParameterClassName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	int getParameterMode(int param)
	              throws SQLException
	Name: getParameterMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ParameterMetaData.html#getParameterMode-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ParameterMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}
}

[Classifier]
public interface PreparedStatement
extends Statement
Name: PreparedStatement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::CallableStatement
}
supertypes {
	java.sql::Statement
}
members {

	[Function]
	ResultSet executeQuery()
	                throws SQLException
	Name: executeQuery
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#executeQuery--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	int executeUpdate()
	           throws SQLException
	Name: executeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#executeUpdate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setNull(int parameterIndex,
	             int sqlType)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNull-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBoolean(int parameterIndex,
	                boolean x)
	         throws SQLException
	Name: setBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBoolean-int-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setByte(int parameterIndex,
	             byte x)
	      throws SQLException
	Name: setByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setByte-int-byte-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void setShort(int parameterIndex,
	              short x)
	       throws SQLException
	Name: setShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setShort-int-short-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::short
	
		[result]
		other::void
	}

	[Function]
	void setInt(int parameterIndex,
	            int x)
	     throws SQLException
	Name: setInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setInt-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setLong(int parameterIndex,
	             long x)
	      throws SQLException
	Name: setLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setLong-int-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setFloat(int parameterIndex,
	              float x)
	       throws SQLException
	Name: setFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setFloat-int-float-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::float
	
		[result]
		other::void
	}

	[Function]
	void setDouble(int parameterIndex,
	               double x)
	        throws SQLException
	Name: setDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setDouble-int-double-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::double
	
		[result]
		other::void
	}

	[Function]
	void setBigDecimal(int parameterIndex,
	                   BigDecimal x)
	            throws SQLException
	Name: setBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBigDecimal-int-java.math.BigDecimal-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void setString(int parameterIndex,
	               String x)
	        throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setString-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setBytes(int parameterIndex,
	              byte[] x)
	       throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBytes-int-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void setDate(int parameterIndex,
	             Date x)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setDate-int-java.sql.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void setTime(int parameterIndex,
	             Time x)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setTime-int-java.sql.Time-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(int parameterIndex,
	                  Timestamp x)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setTimestamp-int-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(int parameterIndex,
	                    InputStream x,
	                    int length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setAsciiStream-int-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	void setUnicodeStream(int parameterIndex,
	                                  InputStream x,
	                                  int length)
	                           throws SQLException
	Name: setUnicodeStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setUnicodeStream-int-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(int parameterIndex,
	                     InputStream x,
	                     int length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBinaryStream-int-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void clearParameters()
	              throws SQLException
	Name: clearParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#clearParameters--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x,
	               int targetSqlType)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setObject-int-java.lang.Object-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setObject-int-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	boolean execute()
	         throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#execute--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void addBatch()
	       throws SQLException
	Name: addBatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#addBatch--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(int parameterIndex,
	                        Reader reader,
	                        int length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setCharacterStream-int-java.io.Reader-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setRef(int parameterIndex,
	            Ref x)
	     throws SQLException
	Name: setRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setRef-int-java.sql.Ref-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int parameterIndex,
	             Blob x)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBlob-int-java.sql.Blob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void setClob(int parameterIndex,
	             Clob x)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setClob-int-java.sql.Clob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void setArray(int parameterIndex,
	              Array x)
	       throws SQLException
	Name: setArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setArray-int-java.sql.Array-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	ResultSetMetaData getMetaData()
	                       throws SQLException
	Name: getMetaData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#getMetaData--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSetMetaData
	}

	[Function]
	void setDate(int parameterIndex,
	             Date x,
	             Calendar cal)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setDate-int-java.sql.Date-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Date
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTime(int parameterIndex,
	             Time x,
	             Calendar cal)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setTime-int-java.sql.Time-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Time
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(int parameterIndex,
	                  Timestamp x,
	                  Calendar cal)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setTimestamp-int-java.sql.Timestamp-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Timestamp
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setNull(int parameterIndex,
	             int sqlType,
	             String typeName)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNull-int-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setURL(int parameterIndex,
	            URL x)
	     throws SQLException
	Name: setURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setURL-int-java.net.URL-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.net::URL
	
		[result]
		other::void
	}

	[Function]
	ParameterMetaData getParameterMetaData()
	                                throws SQLException
	Name: getParameterMetaData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#getParameterMetaData--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ParameterMetaData
	}

	[Function]
	void setRowId(int parameterIndex,
	              RowId x)
	       throws SQLException
	Name: setRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setRowId-int-java.sql.RowId-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void setNString(int parameterIndex,
	                String value)
	         throws SQLException
	Name: setNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNString-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(int parameterIndex,
	                         Reader value,
	                         long length)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNCharacterStream-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              NClob value)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNClob-int-java.sql.NClob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void setClob(int parameterIndex,
	             Reader reader,
	             long length)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setClob-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int parameterIndex,
	             InputStream inputStream,
	             long length)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBlob-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              Reader reader,
	              long length)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNClob-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setSQLXML(int parameterIndex,
	               SQLXML xmlObject)
	        throws SQLException
	Name: setSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setSQLXML-int-java.sql.SQLXML-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x,
	               int targetSqlType,
	               int scaleOrLength)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setObject-int-java.lang.Object-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(int parameterIndex,
	                    InputStream x,
	                    long length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setAsciiStream-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(int parameterIndex,
	                     InputStream x,
	                     long length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBinaryStream-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(int parameterIndex,
	                        Reader reader,
	                        long length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setCharacterStream-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(int parameterIndex,
	                    InputStream x)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setAsciiStream-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(int parameterIndex,
	                     InputStream x)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBinaryStream-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(int parameterIndex,
	                        Reader reader)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setCharacterStream-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(int parameterIndex,
	                         Reader value)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNCharacterStream-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setClob(int parameterIndex,
	             Reader reader)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setClob-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int parameterIndex,
	             InputStream inputStream)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setBlob-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              Reader reader)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setNClob-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	default void setObject(int parameterIndex,
	                       Object x,
	                       SQLType targetSqlType,
	                       int scaleOrLength)
	                throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setObject-int-java.lang.Object-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void setObject(int parameterIndex,
	                       Object x,
	                       SQLType targetSqlType)
	                throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#setObject-int-java.lang.Object-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		java.sql::SQLType
	
		[result]
		other::void
	}

	[Function]
	default long executeLargeUpdate()
	                         throws SQLException
	Name: executeLargeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html#executeLargeUpdate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PreparedStatement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}
}

[Classifier]
public interface Ref
Name: Ref
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Ref.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SerialRef
}
supertypes {
}
members {

	[Function]
	String getBaseTypeName()
	                throws SQLException
	Name: getBaseTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Ref.html#getBaseTypeName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Ref
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Object getObject(Map<String,Class<?>> map)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Ref.html#getObject-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Ref
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getObject()
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Ref.html#getObject--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Ref
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	void setObject(Object value)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Ref.html#setObject-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Ref
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::void
	}
}

[Classifier]
public interface ResultSet
extends Wrapper, AutoCloseable
Name: ResultSet
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql::RowSet
}
supertypes {
	java.sql::Wrapper
	java.lang::AutoCloseable
}
members {

	[Function]
	static final int FETCH_FORWARD
	Name: FETCH_FORWARD
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#FETCH_FORWARD
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int FETCH_REVERSE
	Name: FETCH_REVERSE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#FETCH_REVERSE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int FETCH_UNKNOWN
	Name: FETCH_UNKNOWN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#FETCH_UNKNOWN
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TYPE_FORWARD_ONLY
	Name: TYPE_FORWARD_ONLY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#TYPE_FORWARD_ONLY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TYPE_SCROLL_INSENSITIVE
	Name: TYPE_SCROLL_INSENSITIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#TYPE_SCROLL_INSENSITIVE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int TYPE_SCROLL_SENSITIVE
	Name: TYPE_SCROLL_SENSITIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#TYPE_SCROLL_SENSITIVE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int CONCUR_READ_ONLY
	Name: CONCUR_READ_ONLY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#CONCUR_READ_ONLY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int CONCUR_UPDATABLE
	Name: CONCUR_UPDATABLE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#CONCUR_UPDATABLE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int HOLD_CURSORS_OVER_COMMIT
	Name: HOLD_CURSORS_OVER_COMMIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#HOLD_CURSORS_OVER_COMMIT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int CLOSE_CURSORS_AT_COMMIT
	Name: CLOSE_CURSORS_AT_COMMIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#CLOSE_CURSORS_AT_COMMIT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean next()
	      throws SQLException
	Name: next
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#next--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void close()
	    throws SQLException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#close--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean wasNull()
	         throws SQLException
	Name: wasNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#wasNull--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getString(int columnIndex)
	          throws SQLException
	Name: getString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getString-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	boolean getBoolean(int columnIndex)
	            throws SQLException
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBoolean-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	byte getByte(int columnIndex)
	      throws SQLException
	Name: getByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getByte-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::byte
	}

	[Function]
	short getShort(int columnIndex)
	        throws SQLException
	Name: getShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getShort-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::short
	}

	[Function]
	int getInt(int columnIndex)
	    throws SQLException
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getInt-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	long getLong(int columnIndex)
	      throws SQLException
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getLong-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::long
	}

	[Function]
	float getFloat(int columnIndex)
	        throws SQLException
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getFloat-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::float
	}

	[Function]
	double getDouble(int columnIndex)
	          throws SQLException
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDouble-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::double
	}

	[Function]
	@Deprecated
	BigDecimal getBigDecimal(int columnIndex,
	                                     int scale)
	                              throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBigDecimal-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	byte[] getBytes(int columnIndex)
	         throws SQLException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBytes-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Date getDate(int columnIndex)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDate-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(int columnIndex)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTime-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(int columnIndex)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTimestamp-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	InputStream getAsciiStream(int columnIndex)
	                    throws SQLException
	Name: getAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getAsciiStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::InputStream
	}

	[Function]
	@Deprecated
	InputStream getUnicodeStream(int columnIndex)
	                                  throws SQLException
	Name: getUnicodeStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getUnicodeStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::InputStream
	}

	[Function]
	InputStream getBinaryStream(int columnIndex)
	                     throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBinaryStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::InputStream
	}

	[Function]
	String getString(String columnLabel)
	          throws SQLException
	Name: getString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	boolean getBoolean(String columnLabel)
	            throws SQLException
	Name: getBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBoolean-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	byte getByte(String columnLabel)
	      throws SQLException
	Name: getByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getByte-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::byte
	}

	[Function]
	short getShort(String columnLabel)
	        throws SQLException
	Name: getShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getShort-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::short
	}

	[Function]
	int getInt(String columnLabel)
	    throws SQLException
	Name: getInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getInt-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	long getLong(String columnLabel)
	      throws SQLException
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getLong-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	float getFloat(String columnLabel)
	        throws SQLException
	Name: getFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getFloat-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::float
	}

	[Function]
	double getDouble(String columnLabel)
	          throws SQLException
	Name: getDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDouble-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::double
	}

	[Function]
	@Deprecated
	BigDecimal getBigDecimal(String columnLabel,
	                                     int scale)
	                              throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBigDecimal-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	byte[] getBytes(String columnLabel)
	         throws SQLException
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBytes-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Date getDate(String columnLabel)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDate-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(String columnLabel)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTime-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(String columnLabel)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTimestamp-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	InputStream getAsciiStream(String columnLabel)
	                    throws SQLException
	Name: getAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getAsciiStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::InputStream
	}

	[Function]
	@Deprecated
	InputStream getUnicodeStream(String columnLabel)
	                                  throws SQLException
	Name: getUnicodeStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getUnicodeStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::InputStream
	}

	[Function]
	InputStream getBinaryStream(String columnLabel)
	                     throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBinaryStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::InputStream
	}

	[Function]
	SQLWarning getWarnings()
	                throws SQLException
	Name: getWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	void clearWarnings()
	            throws SQLException
	Name: clearWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#clearWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	String getCursorName()
	              throws SQLException
	Name: getCursorName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getCursorName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	ResultSetMetaData getMetaData()
	                       throws SQLException
	Name: getMetaData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getMetaData--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSetMetaData
	}

	[Function]
	Object getObject(int columnIndex)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getObject(String columnLabel)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	int findColumn(String columnLabel)
	        throws SQLException
	Name: findColumn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#findColumn-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	Reader getCharacterStream(int columnIndex)
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getCharacterStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::Reader
	}

	[Function]
	Reader getCharacterStream(String columnLabel)
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getCharacterStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::Reader
	}

	[Function]
	BigDecimal getBigDecimal(int columnIndex)
	                  throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBigDecimal-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	BigDecimal getBigDecimal(String columnLabel)
	                  throws SQLException
	Name: getBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBigDecimal-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	boolean isBeforeFirst()
	               throws SQLException
	Name: isBeforeFirst
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#isBeforeFirst--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isAfterLast()
	             throws SQLException
	Name: isAfterLast
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#isAfterLast--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isFirst()
	         throws SQLException
	Name: isFirst
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#isFirst--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isLast()
	        throws SQLException
	Name: isLast
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#isLast--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void beforeFirst()
	          throws SQLException
	Name: beforeFirst
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#beforeFirst--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void afterLast()
	        throws SQLException
	Name: afterLast
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#afterLast--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean first()
	       throws SQLException
	Name: first
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#first--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean last()
	      throws SQLException
	Name: last
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#last--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	int getRow()
	    throws SQLException
	Name: getRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean absolute(int row)
	          throws SQLException
	Name: absolute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#absolute-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean relative(int rows)
	          throws SQLException
	Name: relative
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#relative-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean previous()
	          throws SQLException
	Name: previous
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#previous--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setFetchDirection(int direction)
	                throws SQLException
	Name: setFetchDirection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#setFetchDirection-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getFetchDirection()
	               throws SQLException
	Name: getFetchDirection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getFetchDirection--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setFetchSize(int rows)
	           throws SQLException
	Name: setFetchSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#setFetchSize-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getFetchSize()
	          throws SQLException
	Name: getFetchSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getFetchSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getType()
	     throws SQLException
	Name: getType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getType--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getConcurrency()
	            throws SQLException
	Name: getConcurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getConcurrency--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean rowUpdated()
	            throws SQLException
	Name: rowUpdated
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#rowUpdated--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean rowInserted()
	             throws SQLException
	Name: rowInserted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#rowInserted--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean rowDeleted()
	            throws SQLException
	Name: rowDeleted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#rowDeleted--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void updateNull(int columnIndex)
	         throws SQLException
	Name: updateNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNull-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateBoolean(int columnIndex,
	                   boolean x)
	            throws SQLException
	Name: updateBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBoolean-int-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void updateByte(int columnIndex,
	                byte x)
	         throws SQLException
	Name: updateByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateByte-int-byte-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void updateShort(int columnIndex,
	                 short x)
	          throws SQLException
	Name: updateShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateShort-int-short-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::short
	
		[result]
		other::void
	}

	[Function]
	void updateInt(int columnIndex,
	               int x)
	        throws SQLException
	Name: updateInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateInt-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateLong(int columnIndex,
	                long x)
	         throws SQLException
	Name: updateLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateLong-int-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateFloat(int columnIndex,
	                 float x)
	          throws SQLException
	Name: updateFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateFloat-int-float-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::float
	
		[result]
		other::void
	}

	[Function]
	void updateDouble(int columnIndex,
	                  double x)
	           throws SQLException
	Name: updateDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateDouble-int-double-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::double
	
		[result]
		other::void
	}

	[Function]
	void updateBigDecimal(int columnIndex,
	                      BigDecimal x)
	               throws SQLException
	Name: updateBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBigDecimal-int-java.math.BigDecimal-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void updateString(int columnIndex,
	                  String x)
	           throws SQLException
	Name: updateString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateString-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void updateBytes(int columnIndex,
	                 byte[] x)
	          throws SQLException
	Name: updateBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBytes-int-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void updateDate(int columnIndex,
	                Date x)
	         throws SQLException
	Name: updateDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateDate-int-java.sql.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void updateTime(int columnIndex,
	                Time x)
	         throws SQLException
	Name: updateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateTime-int-java.sql.Time-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void updateTimestamp(int columnIndex,
	                     Timestamp x)
	              throws SQLException
	Name: updateTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateTimestamp-int-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(int columnIndex,
	                       InputStream x,
	                       int length)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-int-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(int columnIndex,
	                        InputStream x,
	                        int length)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-int-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(int columnIndex,
	                           Reader x,
	                           int length)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-int-java.io.Reader-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateObject(int columnIndex,
	                  Object x,
	                  int scaleOrLength)
	           throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-int-java.lang.Object-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateObject(int columnIndex,
	                  Object x)
	           throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-int-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void updateNull(String columnLabel)
	         throws SQLException
	Name: updateNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNull-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void updateBoolean(String columnLabel,
	                   boolean x)
	            throws SQLException
	Name: updateBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBoolean-java.lang.String-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void updateByte(String columnLabel,
	                byte x)
	         throws SQLException
	Name: updateByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateByte-java.lang.String-byte-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void updateShort(String columnLabel,
	                 short x)
	          throws SQLException
	Name: updateShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateShort-java.lang.String-short-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::short
	
		[result]
		other::void
	}

	[Function]
	void updateInt(String columnLabel,
	               int x)
	        throws SQLException
	Name: updateInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateInt-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateLong(String columnLabel,
	                long x)
	         throws SQLException
	Name: updateLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateLong-java.lang.String-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateFloat(String columnLabel,
	                 float x)
	          throws SQLException
	Name: updateFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateFloat-java.lang.String-float-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::void
	}

	[Function]
	void updateDouble(String columnLabel,
	                  double x)
	           throws SQLException
	Name: updateDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateDouble-java.lang.String-double-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::void
	}

	[Function]
	void updateBigDecimal(String columnLabel,
	                      BigDecimal x)
	               throws SQLException
	Name: updateBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBigDecimal-java.lang.String-java.math.BigDecimal-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void updateString(String columnLabel,
	                  String x)
	           throws SQLException
	Name: updateString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateString-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void updateBytes(String columnLabel,
	                 byte[] x)
	          throws SQLException
	Name: updateBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBytes-java.lang.String-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void updateDate(String columnLabel,
	                Date x)
	         throws SQLException
	Name: updateDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateDate-java.lang.String-java.sql.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void updateTime(String columnLabel,
	                Time x)
	         throws SQLException
	Name: updateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateTime-java.lang.String-java.sql.Time-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void updateTimestamp(String columnLabel,
	                     Timestamp x)
	              throws SQLException
	Name: updateTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateTimestamp-java.lang.String-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(String columnLabel,
	                       InputStream x,
	                       int length)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-java.lang.String-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(String columnLabel,
	                        InputStream x,
	                        int length)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-java.lang.String-java.io.InputStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(String columnLabel,
	                           Reader reader,
	                           int length)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-java.lang.String-java.io.Reader-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateObject(String columnLabel,
	                  Object x,
	                  int scaleOrLength)
	           throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-java.lang.String-java.lang.Object-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void updateObject(String columnLabel,
	                  Object x)
	           throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-java.lang.String-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void insertRow()
	        throws SQLException
	Name: insertRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#insertRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void updateRow()
	        throws SQLException
	Name: updateRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void deleteRow()
	        throws SQLException
	Name: deleteRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#deleteRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void refreshRow()
	         throws SQLException
	Name: refreshRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#refreshRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void cancelRowUpdates()
	               throws SQLException
	Name: cancelRowUpdates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#cancelRowUpdates--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void moveToInsertRow()
	              throws SQLException
	Name: moveToInsertRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#moveToInsertRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void moveToCurrentRow()
	               throws SQLException
	Name: moveToCurrentRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#moveToCurrentRow--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	Statement getStatement()
	                throws SQLException
	Name: getStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getStatement--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Statement
	}

	[Function]
	Object getObject(int columnIndex,
	                 Map<String,Class<?>> map)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-int-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Ref getRef(int columnIndex)
	    throws SQLException
	Name: getRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getRef-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Ref
	}

	[Function]
	Blob getBlob(int columnIndex)
	      throws SQLException
	Name: getBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBlob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Blob
	}

	[Function]
	Clob getClob(int columnIndex)
	      throws SQLException
	Name: getClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getClob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Clob
	}

	[Function]
	Array getArray(int columnIndex)
	        throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getArray-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::Array
	}

	[Function]
	Object getObject(String columnLabel,
	                 Map<String,Class<?>> map)
	          throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-java.lang.String-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	Ref getRef(String columnLabel)
	    throws SQLException
	Name: getRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getRef-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Ref
	}

	[Function]
	Blob getBlob(String columnLabel)
	      throws SQLException
	Name: getBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getBlob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Blob
	}

	[Function]
	Clob getClob(String columnLabel)
	      throws SQLException
	Name: getClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getClob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Clob
	}

	[Function]
	Array getArray(String columnLabel)
	        throws SQLException
	Name: getArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getArray-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Array
	}

	[Function]
	Date getDate(int columnIndex,
	             Calendar cal)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDate-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Date
	}

	[Function]
	Date getDate(String columnLabel,
	             Calendar cal)
	      throws SQLException
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getDate-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Date
	}

	[Function]
	Time getTime(int columnIndex,
	             Calendar cal)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTime-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Time
	}

	[Function]
	Time getTime(String columnLabel,
	             Calendar cal)
	      throws SQLException
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTime-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp getTimestamp(int columnIndex,
	                       Calendar cal)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTimestamp-int-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::Calendar
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	Timestamp getTimestamp(String columnLabel,
	                       Calendar cal)
	                throws SQLException
	Name: getTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getTimestamp-java.lang.String-java.util.Calendar-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Calendar
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	URL getURL(int columnIndex)
	    throws SQLException
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getURL-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.net::URL
	}

	[Function]
	URL getURL(String columnLabel)
	    throws SQLException
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getURL-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.net::URL
	}

	[Function]
	void updateRef(int columnIndex,
	               Ref x)
	        throws SQLException
	Name: updateRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateRef-int-java.sql.Ref-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	void updateRef(String columnLabel,
	               Ref x)
	        throws SQLException
	Name: updateRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateRef-java.lang.String-java.sql.Ref-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(int columnIndex,
	                Blob x)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-int-java.sql.Blob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(String columnLabel,
	                Blob x)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-java.lang.String-java.sql.Blob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void updateClob(int columnIndex,
	                Clob x)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-int-java.sql.Clob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void updateClob(String columnLabel,
	                Clob x)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-java.lang.String-java.sql.Clob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void updateArray(int columnIndex,
	                 Array x)
	          throws SQLException
	Name: updateArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateArray-int-java.sql.Array-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	void updateArray(String columnLabel,
	                 Array x)
	          throws SQLException
	Name: updateArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateArray-java.lang.String-java.sql.Array-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	RowId getRowId(int columnIndex)
	        throws SQLException
	Name: getRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getRowId-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::RowId
	}

	[Function]
	RowId getRowId(String columnLabel)
	        throws SQLException
	Name: getRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getRowId-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::RowId
	}

	[Function]
	void updateRowId(int columnIndex,
	                 RowId x)
	          throws SQLException
	Name: updateRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateRowId-int-java.sql.RowId-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void updateRowId(String columnLabel,
	                 RowId x)
	          throws SQLException
	Name: updateRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateRowId-java.lang.String-java.sql.RowId-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	int getHoldability()
	            throws SQLException
	Name: getHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getHoldability--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean isClosed()
	          throws SQLException
	Name: isClosed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#isClosed--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void updateNString(int columnIndex,
	                   String nString)
	            throws SQLException
	Name: updateNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNString-int-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void updateNString(String columnLabel,
	                   String nString)
	            throws SQLException
	Name: updateNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNString-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(int columnIndex,
	                 NClob nClob)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-int-java.sql.NClob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(String columnLabel,
	                 NClob nClob)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-java.lang.String-java.sql.NClob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	NClob getNClob(int columnIndex)
	        throws SQLException
	Name: getNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNClob-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::NClob
	}

	[Function]
	NClob getNClob(String columnLabel)
	        throws SQLException
	Name: getNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNClob-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::NClob
	}

	[Function]
	SQLXML getSQLXML(int columnIndex)
	          throws SQLException
	Name: getSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getSQLXML-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	SQLXML getSQLXML(String columnLabel)
	          throws SQLException
	Name: getSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getSQLXML-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	void updateSQLXML(int columnIndex,
	                  SQLXML xmlObject)
	           throws SQLException
	Name: updateSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateSQLXML-int-java.sql.SQLXML-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	void updateSQLXML(String columnLabel,
	                  SQLXML xmlObject)
	           throws SQLException
	Name: updateSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateSQLXML-java.lang.String-java.sql.SQLXML-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	String getNString(int columnIndex)
	           throws SQLException
	Name: getNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNString-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getNString(String columnLabel)
	           throws SQLException
	Name: getNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	Reader getNCharacterStream(int columnIndex)
	                    throws SQLException
	Name: getNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNCharacterStream-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.io::Reader
	}

	[Function]
	Reader getNCharacterStream(String columnLabel)
	                    throws SQLException
	Name: getNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getNCharacterStream-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.io::Reader
	}

	[Function]
	void updateNCharacterStream(int columnIndex,
	                            Reader x,
	                            long length)
	                     throws SQLException
	Name: updateNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNCharacterStream-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateNCharacterStream(String columnLabel,
	                            Reader reader,
	                            long length)
	                     throws SQLException
	Name: updateNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNCharacterStream-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(int columnIndex,
	                       InputStream x,
	                       long length)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(int columnIndex,
	                        InputStream x,
	                        long length)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(int columnIndex,
	                           Reader x,
	                           long length)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(String columnLabel,
	                       InputStream x,
	                       long length)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(String columnLabel,
	                        InputStream x,
	                        long length)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(String columnLabel,
	                           Reader reader,
	                           long length)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(int columnIndex,
	                InputStream inputStream,
	                long length)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-int-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(String columnLabel,
	                InputStream inputStream,
	                long length)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-java.lang.String-java.io.InputStream-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateClob(int columnIndex,
	                Reader reader,
	                long length)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateClob(String columnLabel,
	                Reader reader,
	                long length)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(int columnIndex,
	                 Reader reader,
	                 long length)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-int-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(String columnLabel,
	                 Reader reader,
	                 long length)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-java.lang.String-java.io.Reader-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void updateNCharacterStream(int columnIndex,
	                            Reader x)
	                     throws SQLException
	Name: updateNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNCharacterStream-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateNCharacterStream(String columnLabel,
	                            Reader reader)
	                     throws SQLException
	Name: updateNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNCharacterStream-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(int columnIndex,
	                       InputStream x)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(int columnIndex,
	                        InputStream x)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(int columnIndex,
	                           Reader x)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateAsciiStream(String columnLabel,
	                       InputStream x)
	                throws SQLException
	Name: updateAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateAsciiStream-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateBinaryStream(String columnLabel,
	                        InputStream x)
	                 throws SQLException
	Name: updateBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBinaryStream-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateCharacterStream(String columnLabel,
	                           Reader reader)
	                    throws SQLException
	Name: updateCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateCharacterStream-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(int columnIndex,
	                InputStream inputStream)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-int-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateBlob(String columnLabel,
	                InputStream inputStream)
	         throws SQLException
	Name: updateBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateBlob-java.lang.String-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void updateClob(int columnIndex,
	                Reader reader)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateClob(String columnLabel,
	                Reader reader)
	         throws SQLException
	Name: updateClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateClob-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(int columnIndex,
	                 Reader reader)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-int-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void updateNClob(String columnLabel,
	                 Reader reader)
	          throws SQLException
	Name: updateNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateNClob-java.lang.String-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	<T> T getObject(int columnIndex,
	                Class<T> type)
	         throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-int-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	<T> T getObject(String columnLabel,
	                Class<T> type)
	         throws SQLException
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#getObject-java.lang.String-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	default void updateObject(int columnIndex,
	                          Object x,
	                          SQLType targetSqlType,
	                          int scaleOrLength)
	                   throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-int-java.lang.Object-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void updateObject(String columnLabel,
	                          Object x,
	                          SQLType targetSqlType,
	                          int scaleOrLength)
	                   throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-java.lang.String-java.lang.Object-java.sql.SQLType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		java.sql::SQLType
		other::int
	
		[result]
		other::void
	}

	[Function]
	default void updateObject(int columnIndex,
	                          Object x,
	                          SQLType targetSqlType)
	                   throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-int-java.lang.Object-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		java.sql::SQLType
	
		[result]
		other::void
	}

	[Function]
	default void updateObject(String columnLabel,
	                          Object x,
	                          SQLType targetSqlType)
	                   throws SQLException
	Name: updateObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html#updateObject-java.lang.String-java.lang.Object-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		java.sql::SQLType
	
		[result]
		other::void
	}
}

[Classifier]
public interface ResultSetMetaData
extends Wrapper
Name: ResultSetMetaData
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql::RowSetMetaData
}
supertypes {
	java.sql::Wrapper
}
members {

	[Function]
	static final int columnNoNulls
	Name: columnNoNulls
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#columnNoNulls
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int columnNullable
	Name: columnNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#columnNullable
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int columnNullableUnknown
	Name: columnNullableUnknown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#columnNullableUnknown
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getColumnCount()
	            throws SQLException
	Name: getColumnCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnCount--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean isAutoIncrement(int column)
	                 throws SQLException
	Name: isAutoIncrement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isAutoIncrement-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean isCaseSensitive(int column)
	                 throws SQLException
	Name: isCaseSensitive
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isCaseSensitive-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean isSearchable(int column)
	              throws SQLException
	Name: isSearchable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isSearchable-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean isCurrency(int column)
	            throws SQLException
	Name: isCurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isCurrency-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	int isNullable(int column)
	        throws SQLException
	Name: isNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isNullable-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	boolean isSigned(int column)
	          throws SQLException
	Name: isSigned
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isSigned-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	int getColumnDisplaySize(int column)
	                  throws SQLException
	Name: getColumnDisplaySize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnDisplaySize-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	String getColumnLabel(int column)
	               throws SQLException
	Name: getColumnLabel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnLabel-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getColumnName(int column)
	              throws SQLException
	Name: getColumnName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getSchemaName(int column)
	              throws SQLException
	Name: getSchemaName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getSchemaName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	int getPrecision(int column)
	          throws SQLException
	Name: getPrecision
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getPrecision-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	int getScale(int column)
	      throws SQLException
	Name: getScale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getScale-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	String getTableName(int column)
	             throws SQLException
	Name: getTableName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getTableName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String getCatalogName(int column)
	               throws SQLException
	Name: getCatalogName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getCatalogName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	int getColumnType(int column)
	           throws SQLException
	Name: getColumnType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnType-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	String getColumnTypeName(int column)
	                  throws SQLException
	Name: getColumnTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnTypeName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isReadOnly(int column)
	            throws SQLException
	Name: isReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isReadOnly-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean isWritable(int column)
	            throws SQLException
	Name: isWritable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isWritable-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean isDefinitelyWritable(int column)
	                      throws SQLException
	Name: isDefinitelyWritable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#isDefinitelyWritable-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	String getColumnClassName(int column)
	                   throws SQLException
	Name: getColumnClassName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ResultSetMetaData.html#getColumnClassName-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ResultSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface RowId
Name: RowId
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowId.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowId.html#equals-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowId
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	byte[] getBytes()
	Name: getBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowId.html#getBytes--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowId
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowId.html#toString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowId
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowId.html#hashCode--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowId
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public interface Savepoint
Name: Savepoint
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Savepoint.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	int getSavepointId()
	            throws SQLException
	Name: getSavepointId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Savepoint.html#getSavepointId--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Savepoint
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String getSavepointName()
	                 throws SQLException
	Name: getSavepointName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Savepoint.html#getSavepointName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Savepoint
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface SQLData
Name: SQLData
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLData.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	String getSQLTypeName()
	               throws SQLException
	Name: getSQLTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLData.html#getSQLTypeName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLData
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void readSQL(SQLInput stream,
	             String typeName)
	      throws SQLException
	Name: readSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLData.html#readSQL-java.sql.SQLInput-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLInput
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void writeSQL(SQLOutput stream)
	       throws SQLException
	Name: writeSQL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLData.html#writeSQL-java.sql.SQLOutput-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLData
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLOutput
	
		[result]
		other::void
	}
}

[Classifier]
public interface SQLInput
Name: SQLInput
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SQLInputImpl
}
supertypes {
}
members {

	[Function]
	String readString()
	           throws SQLException
	Name: readString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean readBoolean()
	             throws SQLException
	Name: readBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readBoolean--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	byte readByte()
	       throws SQLException
	Name: readByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readByte--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::byte
	}

	[Function]
	short readShort()
	         throws SQLException
	Name: readShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readShort--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::short
	}

	[Function]
	int readInt()
	     throws SQLException
	Name: readInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readInt--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	long readLong()
	       throws SQLException
	Name: readLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readLong--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	float readFloat()
	         throws SQLException
	Name: readFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readFloat--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	double readDouble()
	           throws SQLException
	Name: readDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readDouble--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::double
	}

	[Function]
	BigDecimal readBigDecimal()
	                   throws SQLException
	Name: readBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readBigDecimal--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	byte[] readBytes()
	          throws SQLException
	Name: readBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readBytes--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Date readDate()
	       throws SQLException
	Name: readDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readDate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Date
	}

	[Function]
	Time readTime()
	       throws SQLException
	Name: readTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readTime--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Time
	}

	[Function]
	Timestamp readTimestamp()
	                 throws SQLException
	Name: readTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readTimestamp--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	Reader readCharacterStream()
	                    throws SQLException
	Name: readCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readCharacterStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Reader
	}

	[Function]
	InputStream readAsciiStream()
	                     throws SQLException
	Name: readAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readAsciiStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	InputStream readBinaryStream()
	                      throws SQLException
	Name: readBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readBinaryStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	Object readObject()
	           throws SQLException
	Name: readObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readObject--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	Ref readRef()
	     throws SQLException
	Name: readRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readRef--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Ref
	}

	[Function]
	Blob readBlob()
	       throws SQLException
	Name: readBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readBlob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Blob
	}

	[Function]
	Clob readClob()
	       throws SQLException
	Name: readClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readClob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Clob
	}

	[Function]
	Array readArray()
	         throws SQLException
	Name: readArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readArray--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Array
	}

	[Function]
	boolean wasNull()
	         throws SQLException
	Name: wasNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#wasNull--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	URL readURL()
	     throws SQLException
	Name: readURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readURL--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URL
	}

	[Function]
	NClob readNClob()
	         throws SQLException
	Name: readNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readNClob--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::NClob
	}

	[Function]
	String readNString()
	            throws SQLException
	Name: readNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readNString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	SQLXML readSQLXML()
	           throws SQLException
	Name: readSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readSQLXML--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLXML
	}

	[Function]
	RowId readRowId()
	         throws SQLException
	Name: readRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readRowId--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowId
	}

	[Function]
	default <T> T readObject(Class<T> type)
	                  throws SQLException
	Name: readObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInput.html#readObject-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLInput
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}
}

[Classifier]
public interface SQLOutput
Name: SQLOutput
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SQLOutputImpl
}
supertypes {
}
members {

	[Function]
	void writeString(String x)
	          throws SQLException
	Name: writeString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void writeBoolean(boolean x)
	           throws SQLException
	Name: writeBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeBoolean-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void writeByte(byte x)
	        throws SQLException
	Name: writeByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeByte-byte-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void writeShort(short x)
	         throws SQLException
	Name: writeShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeShort-short-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::short
	
		[result]
		other::void
	}

	[Function]
	void writeInt(int x)
	       throws SQLException
	Name: writeInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeInt-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void writeLong(long x)
	        throws SQLException
	Name: writeLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeLong-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	void writeFloat(float x)
	         throws SQLException
	Name: writeFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeFloat-float-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		other::void
	}

	[Function]
	void writeDouble(double x)
	          throws SQLException
	Name: writeDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeDouble-double-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::double
	
		[result]
		other::void
	}

	[Function]
	void writeBigDecimal(BigDecimal x)
	              throws SQLException
	Name: writeBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeBigDecimal-java.math.BigDecimal-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void writeBytes(byte[] x)
	         throws SQLException
	Name: writeBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeBytes-byte:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void writeDate(Date x)
	        throws SQLException
	Name: writeDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeDate-java.sql.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void writeTime(Time x)
	        throws SQLException
	Name: writeTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeTime-java.sql.Time-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void writeTimestamp(Timestamp x)
	             throws SQLException
	Name: writeTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeTimestamp-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void writeCharacterStream(Reader x)
	                   throws SQLException
	Name: writeCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeCharacterStream-java.io.Reader-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void writeAsciiStream(InputStream x)
	               throws SQLException
	Name: writeAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeAsciiStream-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void writeBinaryStream(InputStream x)
	                throws SQLException
	Name: writeBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeBinaryStream-java.io.InputStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void writeObject(SQLData x)
	          throws SQLException
	Name: writeObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeObject-java.sql.SQLData-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLData
	
		[result]
		other::void
	}

	[Function]
	void writeRef(Ref x)
	       throws SQLException
	Name: writeRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeRef-java.sql.Ref-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	void writeBlob(Blob x)
	        throws SQLException
	Name: writeBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeBlob-java.sql.Blob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void writeClob(Clob x)
	        throws SQLException
	Name: writeClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeClob-java.sql.Clob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void writeStruct(Struct x)
	          throws SQLException
	Name: writeStruct
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeStruct-java.sql.Struct-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Struct
	
		[result]
		other::void
	}

	[Function]
	void writeArray(Array x)
	         throws SQLException
	Name: writeArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeArray-java.sql.Array-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	void writeURL(URL x)
	       throws SQLException
	Name: writeURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeURL-java.net.URL-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		other::void
	}

	[Function]
	void writeNString(String x)
	           throws SQLException
	Name: writeNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeNString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void writeNClob(NClob x)
	         throws SQLException
	Name: writeNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeNClob-java.sql.NClob-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void writeRowId(RowId x)
	         throws SQLException
	Name: writeRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeRowId-java.sql.RowId-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void writeSQLXML(SQLXML x)
	          throws SQLException
	Name: writeSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeSQLXML-java.sql.SQLXML-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	default void writeObject(Object x,
	                         SQLType targetSqlType)
	                  throws SQLException
	Name: writeObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLOutput.html#writeObject-java.lang.Object-java.sql.SQLType-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLOutput
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.sql::SQLType
	
		[result]
		other::void
	}
}

[Classifier]
public interface SQLType
Name: SQLType
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLType.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::JDBCType
}
supertypes {
}
members {

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLType.html#getName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getVendor()
	Name: getVendor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLType.html#getVendor--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Integer getVendorTypeNumber()
	Name: getVendorTypeNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLType.html#getVendorTypeNumber--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Integer
	}
}

[Classifier]
public interface SQLXML
Name: SQLXML
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	void free()
	   throws SQLException
	Name: free
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#free--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	InputStream getBinaryStream()
	                     throws SQLException
	Name: getBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#getBinaryStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	OutputStream setBinaryStream()
	                      throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#setBinaryStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::OutputStream
	}

	[Function]
	Reader getCharacterStream()
	                   throws SQLException
	Name: getCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#getCharacterStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Reader
	}

	[Function]
	Writer setCharacterStream()
	                   throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#setCharacterStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Writer
	}

	[Function]
	String getString()
	          throws SQLException
	Name: getString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#getString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setString(String value)
	        throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#setString-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	<T extends Source> T getSource(Class<T> sourceClass)
	                        throws SQLException
	Name: getSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#getSource-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
		T: (T extends Source; T; javax.xml.transform::Source)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	<T extends Result> T setResult(Class<T> resultClass)
	                        throws SQLException
	Name: setResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLXML.html#setResult-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLXML
	parameters {
		T: (T extends Result; T; javax.xml.transform::Result)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}
}

[Classifier]
public interface Statement
extends Wrapper, AutoCloseable
Name: Statement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::PreparedStatement
}
supertypes {
	java.sql::Wrapper
	java.lang::AutoCloseable
}
members {

	[Function]
	static final int CLOSE_CURRENT_RESULT
	Name: CLOSE_CURRENT_RESULT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#CLOSE_CURRENT_RESULT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int KEEP_CURRENT_RESULT
	Name: KEEP_CURRENT_RESULT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#KEEP_CURRENT_RESULT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int CLOSE_ALL_RESULTS
	Name: CLOSE_ALL_RESULTS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#CLOSE_ALL_RESULTS
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int SUCCESS_NO_INFO
	Name: SUCCESS_NO_INFO
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#SUCCESS_NO_INFO
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int EXECUTE_FAILED
	Name: EXECUTE_FAILED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#EXECUTE_FAILED
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int RETURN_GENERATED_KEYS
	Name: RETURN_GENERATED_KEYS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#RETURN_GENERATED_KEYS
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int NO_GENERATED_KEYS
	Name: NO_GENERATED_KEYS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#NO_GENERATED_KEYS
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	ResultSet executeQuery(String sql)
	                throws SQLException
	Name: executeQuery
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeQuery-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	int executeUpdate(String sql)
	           throws SQLException
	Name: executeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeUpdate-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	void close()
	    throws SQLException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#close--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	int getMaxFieldSize()
	             throws SQLException
	Name: getMaxFieldSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getMaxFieldSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setMaxFieldSize(int max)
	              throws SQLException
	Name: setMaxFieldSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setMaxFieldSize-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getMaxRows()
	        throws SQLException
	Name: getMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getMaxRows--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setMaxRows(int max)
	         throws SQLException
	Name: setMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setMaxRows-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setEscapeProcessing(boolean enable)
	                  throws SQLException
	Name: setEscapeProcessing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setEscapeProcessing-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	int getQueryTimeout()
	             throws SQLException
	Name: getQueryTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getQueryTimeout--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setQueryTimeout(int seconds)
	              throws SQLException
	Name: setQueryTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setQueryTimeout-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void cancel()
	     throws SQLException
	Name: cancel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#cancel--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	SQLWarning getWarnings()
	                throws SQLException
	Name: getWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	void clearWarnings()
	            throws SQLException
	Name: clearWarnings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#clearWarnings--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void setCursorName(String name)
	            throws SQLException
	Name: setCursorName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setCursorName-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	boolean execute(String sql)
	         throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#execute-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getResultSet()
	                throws SQLException
	Name: getResultSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getResultSet--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	int getUpdateCount()
	            throws SQLException
	Name: getUpdateCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getUpdateCount--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean getMoreResults()
	                throws SQLException
	Name: getMoreResults
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getMoreResults--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setFetchDirection(int direction)
	                throws SQLException
	Name: setFetchDirection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setFetchDirection-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getFetchDirection()
	               throws SQLException
	Name: getFetchDirection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getFetchDirection--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setFetchSize(int rows)
	           throws SQLException
	Name: setFetchSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setFetchSize-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getFetchSize()
	          throws SQLException
	Name: getFetchSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getFetchSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getResultSetConcurrency()
	                     throws SQLException
	Name: getResultSetConcurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getResultSetConcurrency--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getResultSetType()
	              throws SQLException
	Name: getResultSetType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getResultSetType--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void addBatch(String sql)
	       throws SQLException
	Name: addBatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#addBatch-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void clearBatch()
	         throws SQLException
	Name: clearBatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#clearBatch--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	int[] executeBatch()
	            throws SQLException
	Name: executeBatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeBatch--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	Connection getConnection()
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getConnection--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Connection
	}

	[Function]
	boolean getMoreResults(int current)
	                throws SQLException
	Name: getMoreResults
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getMoreResults-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	ResultSet getGeneratedKeys()
	                    throws SQLException
	Name: getGeneratedKeys
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getGeneratedKeys--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	int executeUpdate(String sql,
	                  int autoGeneratedKeys)
	           throws SQLException
	Name: executeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeUpdate-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::int
	}

	[Function]
	int executeUpdate(String sql,
	                  int[] columnIndexes)
	           throws SQLException
	Name: executeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeUpdate-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		other::int
	}

	[Function]
	int executeUpdate(String sql,
	                  String[] columnNames)
	           throws SQLException
	Name: executeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeUpdate-java.lang.String-java.lang.String:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::String
		}
	
		[result]
		other::int
	}

	[Function]
	boolean execute(String sql,
	                int autoGeneratedKeys)
	         throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#execute-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean execute(String sql,
	                int[] columnIndexes)
	         throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#execute-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		other::boolean
	}

	[Function]
	boolean execute(String sql,
	                String[] columnNames)
	         throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#execute-java.lang.String-java.lang.String:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::String
		}
	
		[result]
		other::boolean
	}

	[Function]
	int getResultSetHoldability()
	                     throws SQLException
	Name: getResultSetHoldability
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getResultSetHoldability--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	boolean isClosed()
	          throws SQLException
	Name: isClosed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#isClosed--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setPoolable(boolean poolable)
	          throws SQLException
	Name: setPoolable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setPoolable-boolean-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean isPoolable()
	            throws SQLException
	Name: isPoolable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#isPoolable--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void closeOnCompletion()
	                throws SQLException
	Name: closeOnCompletion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#closeOnCompletion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isCloseOnCompletion()
	                     throws SQLException
	Name: isCloseOnCompletion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#isCloseOnCompletion--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	default long getLargeUpdateCount()
	                          throws SQLException
	Name: getLargeUpdateCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getLargeUpdateCount--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	default void setLargeMaxRows(long max)
	                      throws SQLException
	Name: setLargeMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#setLargeMaxRows-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	default long getLargeMaxRows()
	                      throws SQLException
	Name: getLargeMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#getLargeMaxRows--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	default long[] executeLargeBatch()
	                          throws SQLException
	Name: executeLargeBatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeLargeBatch--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::long
		}
	}

	[Function]
	default long executeLargeUpdate(String sql)
	                         throws SQLException
	Name: executeLargeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeLargeUpdate-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	default long executeLargeUpdate(String sql,
	                                int autoGeneratedKeys)
	                         throws SQLException
	Name: executeLargeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeLargeUpdate-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::long
	}

	[Function]
	default long executeLargeUpdate(String sql,
	                                int[] columnIndexes)
	                         throws SQLException
	Name: executeLargeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeLargeUpdate-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		other::long
	}

	[Function]
	default long executeLargeUpdate(String sql,
	                                String[] columnNames)
	                         throws SQLException
	Name: executeLargeUpdate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html#executeLargeUpdate-java.lang.String-java.lang.String:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Statement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::String
		}
	
		[result]
		other::long
	}
}

[Classifier]
public interface Struct
Name: Struct
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Struct.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.serial::SerialStruct
}
supertypes {
}
members {

	[Function]
	String getSQLTypeName()
	               throws SQLException
	Name: getSQLTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Struct.html#getSQLTypeName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Struct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Object[] getAttributes()
	                throws SQLException
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Struct.html#getAttributes--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Struct
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::Object
		}
	}

	[Function]
	Object[] getAttributes(Map<String,Class<?>> map)
	                throws SQLException
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Struct.html#getAttributes-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Struct
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		other::[] {
			java.lang::Object
		}
	}
}

[Classifier]
public interface Wrapper
Name: Wrapper
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Wrapper.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::ResultSet
	java.sql::Statement
	java.sql::ResultSetMetaData
	java.sql::ParameterMetaData
	java.sql::Connection
	javax.sql::DataSource
	java.sql::DatabaseMetaData
}
supertypes {
}
members {

	[Function]
	<T> T unwrap(Class<T> iface)
	      throws SQLException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Wrapper.html#unwrap-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Wrapper
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	boolean isWrapperFor(Class<?> iface)
	              throws SQLException
	Name: isWrapperFor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Wrapper.html#isWrapperFor-java.lang.Class-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Wrapper
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		other::boolean
	}
}

[Classifier]
public class Date
extends Date
Name: Date
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::Date
}
members {

	[Function]
	@Deprecated
	public Date(int year,
	                        int month,
	                        int day)
	Name: Date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#Date-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.sql::Date
	}

	[Function]
	public Date(long date)
	Name: Date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#Date-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.sql::Date
	}

	[Function]
	public void setTime(long date)
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#setTime-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public static Date valueOf(String s)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Date
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#toString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	@Deprecated
	public int getHours()
	Name: getHours
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#getHours--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public int getMinutes()
	Name: getMinutes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#getMinutes--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public int getSeconds()
	Name: getSeconds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#getSeconds--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public void setHours(int i)
	Name: setHours
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#setHours-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void setMinutes(int i)
	Name: setMinutes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#setMinutes-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void setSeconds(int i)
	Name: setSeconds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#setSeconds-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public static Date valueOf(LocalDate date)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#valueOf-java.time.LocalDate-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalDate
	
		[result]
		java.sql::Date
	}

	[Function]
	public LocalDate toLocalDate()
	Name: toLocalDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#toLocalDate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public Instant toInstant()
	Name: toInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Date.html#toInstant--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Date
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::Instant
	}
}

[Classifier]
public class DriverManager
extends Object
Name: DriverManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static PrintWriter getLogWriter()
	Name: getLogWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getLogWriter--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::PrintWriter
	}

	[Function]
	public static void setLogWriter(PrintWriter out)
	Name: setLogWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#setLogWriter-java.io.PrintWriter-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintWriter
	
		[result]
		other::void
	}

	[Function]
	public static Connection getConnection(String url,
	                                       Properties info)
	                                throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getConnection-java.lang.String-java.util.Properties-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Properties
	
		[result]
		java.sql::Connection
	}

	[Function]
	public static Connection getConnection(String url,
	                                       String user,
	                                       String password)
	                                throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getConnection-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::Connection
	}

	[Function]
	public static Connection getConnection(String url)
	                                throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getConnection-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Connection
	}

	[Function]
	public static Driver getDriver(String url)
	                        throws SQLException
	Name: getDriver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getDriver-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Driver
	}

	[Function]
	public static void registerDriver(Driver driver)
	                           throws SQLException
	Name: registerDriver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#registerDriver-java.sql.Driver-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Driver
	
		[result]
		other::void
	}

	[Function]
	public static void registerDriver(Driver driver,
	                                  DriverAction da)
	                           throws SQLException
	Name: registerDriver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#registerDriver-java.sql.Driver-java.sql.DriverAction-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Driver
		java.sql::DriverAction
	
		[result]
		other::void
	}

	[Function]
	public static void deregisterDriver(Driver driver)
	                             throws SQLException
	Name: deregisterDriver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#deregisterDriver-java.sql.Driver-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Driver
	
		[result]
		other::void
	}

	[Function]
	public static Enumeration<Driver> getDrivers()
	Name: getDrivers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getDrivers--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			java.sql::Driver
		}
	}

	[Function]
	public static void setLoginTimeout(int seconds)
	Name: setLoginTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#setLoginTimeout-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public static int getLoginTimeout()
	Name: getLoginTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getLoginTimeout--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public static void setLogStream(PrintStream out)
	Name: setLogStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#setLogStream-java.io.PrintStream-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintStream
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public static PrintStream getLogStream()
	Name: getLogStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#getLogStream--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::PrintStream
	}

	[Function]
	public static void println(String message)
	Name: println
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverManager.html#println-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DriverManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}
}

[Classifier]
public class DriverPropertyInfo
extends Object
Name: DriverPropertyInfo
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public String name
	Name: name
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#name
	Containing package: java.sql
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String description
	Name: description
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#description
	Containing package: java.sql
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean required
	Name: required
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#required
	Containing package: java.sql
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public String value
	Name: value
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#value
	Containing package: java.sql
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String[] choices
	Name: choices
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#choices
	Containing package: java.sql
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public DriverPropertyInfo(String name,
	                          String value)
	Name: DriverPropertyInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DriverPropertyInfo.html#DriverPropertyInfo-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DriverPropertyInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::DriverPropertyInfo
	}
}

[Classifier]
public final class SQLPermission
extends BasicPermission
Name: SQLPermission
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLPermission.html
Containing package: java.sql
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security::BasicPermission
}
members {

	[Function]
	public SQLPermission(String name)
	Name: SQLPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLPermission.html#SQLPermission-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLPermission
	}

	[Function]
	public SQLPermission(String name,
	                     String actions)
	Name: SQLPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLPermission.html#SQLPermission-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLPermission
	}
}

[Classifier]
public class Time
extends Date
Name: Time
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::Date
}
members {

	[Function]
	@Deprecated
	public Time(int hour,
	                        int minute,
	                        int second)
	Name: Time
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#Time-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.sql::Time
	}

	[Function]
	public Time(long time)
	Name: Time
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#Time-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.sql::Time
	}

	[Function]
	public void setTime(long time)
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#setTime-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public static Time valueOf(String s)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Time
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#toString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	@Deprecated
	public int getYear()
	Name: getYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#getYear--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public int getMonth()
	Name: getMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#getMonth--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public int getDay()
	Name: getDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#getDay--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public int getDate()
	Name: getDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#getDate--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	@Deprecated
	public void setYear(int i)
	Name: setYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#setYear-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void setMonth(int i)
	Name: setMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#setMonth-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void setDate(int i)
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#setDate-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public static Time valueOf(LocalTime time)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#valueOf-java.time.LocalTime-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.sql::Time
	}

	[Function]
	public LocalTime toLocalTime()
	Name: toLocalTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#toLocalTime--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalTime
	}

	[Function]
	public Instant toInstant()
	Name: toInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Time.html#toInstant--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Time
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::Instant
	}
}

[Classifier]
public class Timestamp
extends Date
Name: Timestamp
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::Date
}
members {

	[Function]
	@Deprecated
	public Timestamp(int year,
	                             int month,
	                             int date,
	                             int hour,
	                             int minute,
	                             int second,
	                             int nano)
	Name: Timestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#Timestamp-int-int-int-int-int-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
		other::int
		other::int
		other::int
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public Timestamp(long time)
	Name: Timestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#Timestamp-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public void setTime(long time)
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#setTime-long-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public long getTime()
	Name: getTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#getTime--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public static Timestamp valueOf(String s)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#toString--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getNanos()
	Name: getNanos
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#getNanos--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public void setNanos(int n)
	Name: setNanos
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#setNanos-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public boolean equals(Timestamp ts)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#equals-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::boolean
	}

	[Function]
	public boolean equals(Object ts)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#equals-java.lang.Object-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public boolean before(Timestamp ts)
	Name: before
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#before-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::boolean
	}

	[Function]
	public boolean after(Timestamp ts)
	Name: after
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#after-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::boolean
	}

	[Function]
	public int compareTo(Timestamp ts)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#compareTo-java.sql.Timestamp-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Timestamp
	
		[result]
		other::int
	}

	[Function]
	public int compareTo(Date o)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#compareTo-java.util.Date-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Date
	
		[result]
		other::int
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#hashCode--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static Timestamp valueOf(LocalDateTime dateTime)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#valueOf-java.time.LocalDateTime-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalDateTime
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public LocalDateTime toLocalDateTime()
	Name: toLocalDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#toLocalDateTime--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalDateTime
	}

	[Function]
	public static Timestamp from(Instant instant)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#from-java.time.Instant-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
	
		[result]
		java.sql::Timestamp
	}

	[Function]
	public Instant toInstant()
	Name: toInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html#toInstant--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Timestamp
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::Instant
	}
}

[Classifier]
public class Types
extends Object
Name: Types
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int BIT
	Name: BIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#BIT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TINYINT
	Name: TINYINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#TINYINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SMALLINT
	Name: SMALLINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#SMALLINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int INTEGER
	Name: INTEGER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#INTEGER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int BIGINT
	Name: BIGINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#BIGINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int FLOAT
	Name: FLOAT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#FLOAT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int REAL
	Name: REAL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#REAL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DOUBLE
	Name: DOUBLE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#DOUBLE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NUMERIC
	Name: NUMERIC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#NUMERIC
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DECIMAL
	Name: DECIMAL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#DECIMAL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CHAR
	Name: CHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#CHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int VARCHAR
	Name: VARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#VARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int LONGVARCHAR
	Name: LONGVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#LONGVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATE
	Name: DATE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#DATE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TIME
	Name: TIME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#TIME
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TIMESTAMP
	Name: TIMESTAMP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#TIMESTAMP
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int BINARY
	Name: BINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#BINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int VARBINARY
	Name: VARBINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#VARBINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int LONGVARBINARY
	Name: LONGVARBINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#LONGVARBINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NULL
	Name: NULL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#NULL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int OTHER
	Name: OTHER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#OTHER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int JAVA_OBJECT
	Name: JAVA_OBJECT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#JAVA_OBJECT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DISTINCT
	Name: DISTINCT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#DISTINCT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int STRUCT
	Name: STRUCT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#STRUCT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int ARRAY
	Name: ARRAY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#ARRAY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int BLOB
	Name: BLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#BLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CLOB
	Name: CLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#CLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int REF
	Name: REF
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#REF
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATALINK
	Name: DATALINK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#DATALINK
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int BOOLEAN
	Name: BOOLEAN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#BOOLEAN
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int ROWID
	Name: ROWID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#ROWID
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NCHAR
	Name: NCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#NCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NVARCHAR
	Name: NVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#NVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int LONGNVARCHAR
	Name: LONGNVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#LONGNVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NCLOB
	Name: NCLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#NCLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SQLXML
	Name: SQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#SQLXML
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int REF_CURSOR
	Name: REF_CURSOR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#REF_CURSOR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TIME_WITH_TIMEZONE
	Name: TIME_WITH_TIMEZONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#TIME_WITH_TIMEZONE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TIMESTAMP_WITH_TIMEZONE
	Name: TIMESTAMP_WITH_TIMEZONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/Types.html#TIMESTAMP_WITH_TIMEZONE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Types
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public enum ClientInfoStatus
extends Enum<ClientInfoStatus>
Name: ClientInfoStatus
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		java.sql::ClientInfoStatus
	}
}
members {

	[Function]
	public static final ClientInfoStatus REASON_UNKNOWN
	Name: REASON_UNKNOWN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#REASON_UNKNOWN
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ClientInfoStatus
	}

	[Function]
	public static final ClientInfoStatus REASON_UNKNOWN_PROPERTY
	Name: REASON_UNKNOWN_PROPERTY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#REASON_UNKNOWN_PROPERTY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ClientInfoStatus
	}

	[Function]
	public static final ClientInfoStatus REASON_VALUE_INVALID
	Name: REASON_VALUE_INVALID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#REASON_VALUE_INVALID
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ClientInfoStatus
	}

	[Function]
	public static final ClientInfoStatus REASON_VALUE_TRUNCATED
	Name: REASON_VALUE_TRUNCATED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#REASON_VALUE_TRUNCATED
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ClientInfoStatus
	}

	[Function]
	public static ClientInfoStatus[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#values--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.sql::ClientInfoStatus
		}
	}

	[Function]
	public static ClientInfoStatus valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/ClientInfoStatus.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ClientInfoStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::ClientInfoStatus
	}
}

[Classifier]
public enum JDBCType
extends Enum<JDBCType>
implements SQLType
Name: JDBCType
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLType
	java.lang::Enum {
		java.sql::JDBCType
	}
}
members {

	[Function]
	public static final JDBCType BIT
	Name: BIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#BIT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType TINYINT
	Name: TINYINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#TINYINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType SMALLINT
	Name: SMALLINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#SMALLINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType INTEGER
	Name: INTEGER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#INTEGER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType BIGINT
	Name: BIGINT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#BIGINT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType FLOAT
	Name: FLOAT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#FLOAT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType REAL
	Name: REAL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#REAL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType DOUBLE
	Name: DOUBLE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#DOUBLE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType NUMERIC
	Name: NUMERIC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#NUMERIC
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType DECIMAL
	Name: DECIMAL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#DECIMAL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType CHAR
	Name: CHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#CHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType VARCHAR
	Name: VARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#VARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType LONGVARCHAR
	Name: LONGVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#LONGVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType DATE
	Name: DATE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#DATE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType TIME
	Name: TIME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#TIME
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType TIMESTAMP
	Name: TIMESTAMP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#TIMESTAMP
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType BINARY
	Name: BINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#BINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType VARBINARY
	Name: VARBINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#VARBINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType LONGVARBINARY
	Name: LONGVARBINARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#LONGVARBINARY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType NULL
	Name: NULL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#NULL
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType OTHER
	Name: OTHER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#OTHER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType JAVA_OBJECT
	Name: JAVA_OBJECT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#JAVA_OBJECT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType DISTINCT
	Name: DISTINCT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#DISTINCT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType STRUCT
	Name: STRUCT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#STRUCT
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType ARRAY
	Name: ARRAY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#ARRAY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType BLOB
	Name: BLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#BLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType CLOB
	Name: CLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#CLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType REF
	Name: REF
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#REF
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType DATALINK
	Name: DATALINK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#DATALINK
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType BOOLEAN
	Name: BOOLEAN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#BOOLEAN
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType ROWID
	Name: ROWID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#ROWID
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType NCHAR
	Name: NCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#NCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType NVARCHAR
	Name: NVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#NVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType LONGNVARCHAR
	Name: LONGNVARCHAR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#LONGNVARCHAR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType NCLOB
	Name: NCLOB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#NCLOB
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType SQLXML
	Name: SQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#SQLXML
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType REF_CURSOR
	Name: REF_CURSOR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#REF_CURSOR
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType TIME_WITH_TIMEZONE
	Name: TIME_WITH_TIMEZONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#TIME_WITH_TIMEZONE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static final JDBCType TIMESTAMP_WITH_TIMEZONE
	Name: TIMESTAMP_WITH_TIMEZONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#TIMESTAMP_WITH_TIMEZONE
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public static JDBCType[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#values--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.sql::JDBCType
		}
	}

	[Function]
	public static JDBCType valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::JDBCType
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#getName--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getVendor()
	Name: getVendor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#getVendor--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Integer getVendorTypeNumber()
	Name: getVendorTypeNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#getVendorTypeNumber--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Integer
	}

	[Function]
	public static JDBCType valueOf(int type)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html#valueOf-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JDBCType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.sql::JDBCType
	}
}

[Classifier]
public enum PseudoColumnUsage
extends Enum<PseudoColumnUsage>
Name: PseudoColumnUsage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		java.sql::PseudoColumnUsage
	}
}
members {

	[Function]
	public static final PseudoColumnUsage SELECT_LIST_ONLY
	Name: SELECT_LIST_ONLY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#SELECT_LIST_ONLY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::PseudoColumnUsage
	}

	[Function]
	public static final PseudoColumnUsage WHERE_CLAUSE_ONLY
	Name: WHERE_CLAUSE_ONLY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#WHERE_CLAUSE_ONLY
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::PseudoColumnUsage
	}

	[Function]
	public static final PseudoColumnUsage NO_USAGE_RESTRICTIONS
	Name: NO_USAGE_RESTRICTIONS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#NO_USAGE_RESTRICTIONS
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::PseudoColumnUsage
	}

	[Function]
	public static final PseudoColumnUsage USAGE_UNKNOWN
	Name: USAGE_UNKNOWN
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#USAGE_UNKNOWN
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::PseudoColumnUsage
	}

	[Function]
	public static PseudoColumnUsage[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#values--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.sql::PseudoColumnUsage
		}
	}

	[Function]
	public static PseudoColumnUsage valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/PseudoColumnUsage.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: PseudoColumnUsage
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::PseudoColumnUsage
	}
}

[Classifier]
public enum RowIdLifetime
extends Enum<RowIdLifetime>
Name: RowIdLifetime
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		java.sql::RowIdLifetime
	}
}
members {

	[Function]
	public static final RowIdLifetime ROWID_UNSUPPORTED
	Name: ROWID_UNSUPPORTED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#ROWID_UNSUPPORTED
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	public static final RowIdLifetime ROWID_VALID_OTHER
	Name: ROWID_VALID_OTHER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#ROWID_VALID_OTHER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	public static final RowIdLifetime ROWID_VALID_SESSION
	Name: ROWID_VALID_SESSION
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#ROWID_VALID_SESSION
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	public static final RowIdLifetime ROWID_VALID_TRANSACTION
	Name: ROWID_VALID_TRANSACTION
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#ROWID_VALID_TRANSACTION
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	public static final RowIdLifetime ROWID_VALID_FOREVER
	Name: ROWID_VALID_FOREVER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#ROWID_VALID_FOREVER
	Containing package: java.sql
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::RowIdLifetime
	}

	[Function]
	public static RowIdLifetime[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#values--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.sql::RowIdLifetime
		}
	}

	[Function]
	public static RowIdLifetime valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/RowIdLifetime.html#valueOf-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: RowIdLifetime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::RowIdLifetime
	}
}

[Classifier]
public class BatchUpdateException
extends SQLException
Name: BatchUpdateException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public BatchUpdateException(String reason,
	                            String SQLState,
	                            int vendorCode,
	                            int[] updateCounts)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-java.lang.String-int-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		other::[] {
			other::int
		}
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            String SQLState,
	                            int[] updateCounts)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            int[] updateCounts)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(int[] updateCounts)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-int:A-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::int
		}
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException()
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(int[] updateCounts,
	                            Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-int:A-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::int
		}
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            int[] updateCounts,
	                            Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-int:A-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::int
		}
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            String SQLState,
	                            int[] updateCounts,
	                            Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-java.lang.String-int:A-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::[] {
			other::int
		}
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            String SQLState,
	                            int vendorCode,
	                            int[] updateCounts,
	                            Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-java.lang.String-int-int:A-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		other::[] {
			other::int
		}
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public BatchUpdateException(String reason,
	                            String SQLState,
	                            int vendorCode,
	                            long[] updateCounts,
	                            Throwable cause)
	Name: BatchUpdateException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#BatchUpdateException-java.lang.String-java.lang.String-int-long:A-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		other::[] {
			other::long
		}
		java.lang::Throwable
	
		[result]
		java.sql::BatchUpdateException
	}

	[Function]
	public int[] getUpdateCounts()
	Name: getUpdateCounts
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#getUpdateCounts--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	public long[] getLargeUpdateCounts()
	Name: getLargeUpdateCounts
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html#getLargeUpdateCounts--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: BatchUpdateException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::long
		}
	}
}

[Classifier]
public class DataTruncation
extends SQLWarning
Name: DataTruncation
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLWarning
}
members {

	[Function]
	public DataTruncation(int index,
	                      boolean parameter,
	                      boolean read,
	                      int dataSize,
	                      int transferSize)
	Name: DataTruncation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#DataTruncation-int-boolean-boolean-int-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
		other::boolean
		other::int
		other::int
	
		[result]
		java.sql::DataTruncation
	}

	[Function]
	public DataTruncation(int index,
	                      boolean parameter,
	                      boolean read,
	                      int dataSize,
	                      int transferSize,
	                      Throwable cause)
	Name: DataTruncation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#DataTruncation-int-boolean-boolean-int-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
		other::boolean
		other::int
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::DataTruncation
	}

	[Function]
	public int getIndex()
	Name: getIndex
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#getIndex--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public boolean getParameter()
	Name: getParameter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#getParameter--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean getRead()
	Name: getRead
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#getRead--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public int getDataSize()
	Name: getDataSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#getDataSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getTransferSize()
	Name: getTransferSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/DataTruncation.html#getTransferSize--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataTruncation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class SQLClientInfoException
extends SQLException
Name: SQLClientInfoException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SQLClientInfoException()
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(Map<String,ClientInfoStatus> failedProperties)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(Map<String,ClientInfoStatus> failedProperties,
	                              Throwable cause)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.util.Map-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
		java.lang::Throwable
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              Map<String,ClientInfoStatus> failedProperties)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              Map<String,ClientInfoStatus> failedProperties,
	                              Throwable cause)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.util.Map-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
		java.lang::Throwable
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              String SQLState,
	                              Map<String,ClientInfoStatus> failedProperties)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.lang.String-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              String SQLState,
	                              Map<String,ClientInfoStatus> failedProperties,
	                              Throwable cause)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.lang.String-java.util.Map-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
		java.lang::Throwable
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              String SQLState,
	                              int vendorCode,
	                              Map<String,ClientInfoStatus> failedProperties)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.lang.String-int-java.util.Map-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public SQLClientInfoException(String reason,
	                              String SQLState,
	                              int vendorCode,
	                              Map<String,ClientInfoStatus> failedProperties,
	                              Throwable cause)
	Name: SQLClientInfoException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#SQLClientInfoException-java.lang.String-java.lang.String-int-java.util.Map-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
		java.lang::Throwable
	
		[result]
		java.sql::SQLClientInfoException
	}

	[Function]
	public Map<String,ClientInfoStatus> getFailedProperties()
	Name: getFailedProperties
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLClientInfoException.html#getFailedProperties--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLClientInfoException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Map {
			java.lang::String
			java.sql::ClientInfoStatus
		}
	}
}

[Classifier]
public class SQLDataException
extends SQLNonTransientException
Name: SQLDataException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLDataException()
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason,
	                        String SQLState)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason,
	                        String SQLState,
	                        int vendorCode)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(Throwable cause)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason,
	                        Throwable cause)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason,
	                        String SQLState,
	                        Throwable cause)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLDataException
	}

	[Function]
	public SQLDataException(String reason,
	                        String SQLState,
	                        int vendorCode,
	                        Throwable cause)
	Name: SQLDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLDataException.html#SQLDataException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLDataException
	}
}

[Classifier]
public class SQLException
extends Exception
implements Iterable<Throwable>
Name: SQLException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::BatchUpdateException
	javax.sql.rowset::RowSetWarning
	java.sql::SQLWarning
	java.sql::SQLRecoverableException
	javax.sql.rowset.spi::SyncProviderException
	javax.sql.rowset.spi::SyncFactoryException
	java.sql::SQLClientInfoException
	java.sql::SQLTransientException
	java.sql::SQLNonTransientException
	javax.sql.rowset.serial::SerialException
}
supertypes {
	java.lang::Iterable {
		java.lang::Throwable
	}
	java.lang::Exception
}
members {

	[Function]
	public SQLException(String reason,
	                    String SQLState,
	                    int vendorCode)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(String reason,
	                    String SQLState)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(String reason)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException()
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(Throwable cause)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(String reason,
	                    Throwable cause)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(String reason,
	                    String sqlState,
	                    Throwable cause)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public SQLException(String reason,
	                    String sqlState,
	                    int vendorCode,
	                    Throwable cause)
	Name: SQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#SQLException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public String getSQLState()
	Name: getSQLState
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#getSQLState--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getErrorCode()
	Name: getErrorCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#getErrorCode--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public SQLException getNextException()
	Name: getNextException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#getNextException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLException
	}

	[Function]
	public void setNextException(SQLException ex)
	Name: setNextException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#setNextException-java.sql.SQLException-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLException
	
		[result]
		other::void
	}

	[Function]
	public Iterator<Throwable> iterator()
	Name: iterator
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLException.html#iterator--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Iterator {
			java.lang::Throwable
		}
	}
}

[Classifier]
public class SQLFeatureNotSupportedException
extends SQLNonTransientException
Name: SQLFeatureNotSupportedException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLFeatureNotSupportedException()
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason,
	                                       String SQLState)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason,
	                                       String SQLState,
	                                       int vendorCode)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(Throwable cause)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason,
	                                       Throwable cause)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason,
	                                       String SQLState,
	                                       Throwable cause)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}

	[Function]
	public SQLFeatureNotSupportedException(String reason,
	                                       String SQLState,
	                                       int vendorCode,
	                                       Throwable cause)
	Name: SQLFeatureNotSupportedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLFeatureNotSupportedException.html#SQLFeatureNotSupportedException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLFeatureNotSupportedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLFeatureNotSupportedException
	}
}

[Classifier]
public class SQLIntegrityConstraintViolationException
extends SQLNonTransientException
Name: SQLIntegrityConstraintViolationException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLIntegrityConstraintViolationException()
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason,
	                                                String SQLState)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason,
	                                                String SQLState,
	                                                int vendorCode)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(Throwable cause)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason,
	                                                Throwable cause)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason,
	                                                String SQLState,
	                                                Throwable cause)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}

	[Function]
	public SQLIntegrityConstraintViolationException(String reason,
	                                                String SQLState,
	                                                int vendorCode,
	                                                Throwable cause)
	Name: SQLIntegrityConstraintViolationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLIntegrityConstraintViolationException.html#SQLIntegrityConstraintViolationException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLIntegrityConstraintViolationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLIntegrityConstraintViolationException
	}
}

[Classifier]
public class SQLInvalidAuthorizationSpecException
extends SQLNonTransientException
Name: SQLInvalidAuthorizationSpecException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLInvalidAuthorizationSpecException()
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason,
	                                            String SQLState)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason,
	                                            String SQLState,
	                                            int vendorCode)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(Throwable cause)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason,
	                                            Throwable cause)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason,
	                                            String SQLState,
	                                            Throwable cause)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}

	[Function]
	public SQLInvalidAuthorizationSpecException(String reason,
	                                            String SQLState,
	                                            int vendorCode,
	                                            Throwable cause)
	Name: SQLInvalidAuthorizationSpecException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLInvalidAuthorizationSpecException.html#SQLInvalidAuthorizationSpecException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLInvalidAuthorizationSpecException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLInvalidAuthorizationSpecException
	}
}

[Classifier]
public class SQLNonTransientConnectionException
extends SQLNonTransientException
Name: SQLNonTransientConnectionException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLNonTransientConnectionException()
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason,
	                                          String SQLState)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason,
	                                          String SQLState,
	                                          int vendorCode)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(Throwable cause)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason,
	                                          Throwable cause)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason,
	                                          String SQLState,
	                                          Throwable cause)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}

	[Function]
	public SQLNonTransientConnectionException(String reason,
	                                          String SQLState,
	                                          int vendorCode,
	                                          Throwable cause)
	Name: SQLNonTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientConnectionException.html#SQLNonTransientConnectionException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientConnectionException
	}
}

[Classifier]
public class SQLNonTransientException
extends SQLException
Name: SQLNonTransientException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::SQLIntegrityConstraintViolationException
	java.sql::SQLDataException
	java.sql::SQLSyntaxErrorException
	java.sql::SQLNonTransientConnectionException
	java.sql::SQLFeatureNotSupportedException
	java.sql::SQLInvalidAuthorizationSpecException
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SQLNonTransientException()
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason,
	                                String SQLState)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason,
	                                String SQLState,
	                                int vendorCode)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(Throwable cause)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason,
	                                Throwable cause)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason,
	                                String SQLState,
	                                Throwable cause)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientException
	}

	[Function]
	public SQLNonTransientException(String reason,
	                                String SQLState,
	                                int vendorCode,
	                                Throwable cause)
	Name: SQLNonTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLNonTransientException.html#SQLNonTransientException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLNonTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLNonTransientException
	}
}

[Classifier]
public class SQLRecoverableException
extends SQLException
Name: SQLRecoverableException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SQLRecoverableException()
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason,
	                               String SQLState)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason,
	                               String SQLState,
	                               int vendorCode)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(Throwable cause)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason,
	                               Throwable cause)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason,
	                               String SQLState,
	                               Throwable cause)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLRecoverableException
	}

	[Function]
	public SQLRecoverableException(String reason,
	                               String SQLState,
	                               int vendorCode,
	                               Throwable cause)
	Name: SQLRecoverableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLRecoverableException.html#SQLRecoverableException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLRecoverableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLRecoverableException
	}
}

[Classifier]
public class SQLSyntaxErrorException
extends SQLNonTransientException
Name: SQLSyntaxErrorException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLNonTransientException
}
members {

	[Function]
	public SQLSyntaxErrorException()
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason,
	                               String SQLState)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason,
	                               String SQLState,
	                               int vendorCode)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(Throwable cause)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason,
	                               Throwable cause)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason,
	                               String SQLState,
	                               Throwable cause)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLSyntaxErrorException
	}

	[Function]
	public SQLSyntaxErrorException(String reason,
	                               String SQLState,
	                               int vendorCode,
	                               Throwable cause)
	Name: SQLSyntaxErrorException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLSyntaxErrorException.html#SQLSyntaxErrorException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLSyntaxErrorException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLSyntaxErrorException
	}
}

[Classifier]
public class SQLTimeoutException
extends SQLTransientException
Name: SQLTimeoutException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLTransientException
}
members {

	[Function]
	public SQLTimeoutException()
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason,
	                           String SQLState)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason,
	                           String SQLState,
	                           int vendorCode)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(Throwable cause)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason,
	                           Throwable cause)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason,
	                           String SQLState,
	                           Throwable cause)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTimeoutException
	}

	[Function]
	public SQLTimeoutException(String reason,
	                           String SQLState,
	                           int vendorCode,
	                           Throwable cause)
	Name: SQLTimeoutException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTimeoutException.html#SQLTimeoutException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTimeoutException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLTimeoutException
	}
}

[Classifier]
public class SQLTransactionRollbackException
extends SQLTransientException
Name: SQLTransactionRollbackException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLTransientException
}
members {

	[Function]
	public SQLTransactionRollbackException()
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason,
	                                       String SQLState)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason,
	                                       String SQLState,
	                                       int vendorCode)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(Throwable cause)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason,
	                                       Throwable cause)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason,
	                                       String SQLState,
	                                       Throwable cause)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransactionRollbackException
	}

	[Function]
	public SQLTransactionRollbackException(String reason,
	                                       String SQLState,
	                                       int vendorCode,
	                                       Throwable cause)
	Name: SQLTransactionRollbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransactionRollbackException.html#SQLTransactionRollbackException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransactionRollbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransactionRollbackException
	}
}

[Classifier]
public class SQLTransientConnectionException
extends SQLTransientException
Name: SQLTransientConnectionException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLTransientException
}
members {

	[Function]
	public SQLTransientConnectionException()
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason,
	                                       String SQLState)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason,
	                                       String SQLState,
	                                       int vendorCode)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(Throwable cause)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason,
	                                       Throwable cause)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason,
	                                       String SQLState,
	                                       Throwable cause)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientConnectionException
	}

	[Function]
	public SQLTransientConnectionException(String reason,
	                                       String SQLState,
	                                       int vendorCode,
	                                       Throwable cause)
	Name: SQLTransientConnectionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientConnectionException.html#SQLTransientConnectionException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientConnectionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientConnectionException
	}
}

[Classifier]
public class SQLTransientException
extends SQLException
Name: SQLTransientException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::SQLTimeoutException
	java.sql::SQLTransientConnectionException
	java.sql::SQLTransactionRollbackException
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SQLTransientException()
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason,
	                             String SQLState)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason,
	                             String SQLState,
	                             int vendorCode)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(Throwable cause)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason,
	                             Throwable cause)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason,
	                             String SQLState,
	                             Throwable cause)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientException
	}

	[Function]
	public SQLTransientException(String reason,
	                             String SQLState,
	                             int vendorCode,
	                             Throwable cause)
	Name: SQLTransientException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLTransientException.html#SQLTransientException-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLTransientException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLTransientException
	}
}

[Classifier]
public class SQLWarning
extends SQLException
Name: SQLWarning
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html
Containing package: java.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.sql::DataTruncation
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SQLWarning(String reason,
	                  String SQLState,
	                  int vendorCode)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-java.lang.String-int-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(String reason,
	                  String SQLState)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(String reason)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning()
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(Throwable cause)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(String reason,
	                  Throwable cause)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(String reason,
	                  String SQLState,
	                  Throwable cause)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning(String reason,
	                  String SQLState,
	                  int vendorCode,
	                  Throwable cause)
	Name: SQLWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#SQLWarning-java.lang.String-java.lang.String-int-java.lang.Throwable-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::int
		java.lang::Throwable
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public SQLWarning getNextWarning()
	Name: getNextWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#getNextWarning--
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLWarning
	}

	[Function]
	public void setNextWarning(SQLWarning w)
	Name: setNextWarning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/sql/SQLWarning.html#setNextWarning-java.sql.SQLWarning-
	Containing package: java.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SQLWarning
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::SQLWarning
	
		[result]
		other::void
	}
}