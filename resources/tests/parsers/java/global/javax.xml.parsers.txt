[Package]
Name: javax.xml.parsers
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/package-summary.html
Containing package: javax.xml
attributes {
}

Subpackages {
}

[Classifier]
public abstract class DocumentBuilder
extends Object
Name: DocumentBuilder
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html
Containing package: javax.xml.parsers
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected DocumentBuilder()
	Name: DocumentBuilder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#DocumentBuilder--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::DocumentBuilder
	}

	[Function]
	public void reset()
	Name: reset
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#reset--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public Document parse(InputStream is)
	               throws SAXException,
	                      IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#parse-java.io.InputStream-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public Document parse(InputStream is,
	                      String systemId)
	               throws SAXException,
	                      IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#parse-java.io.InputStream-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		java.lang::String
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public Document parse(String uri)
	               throws SAXException,
	                      IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#parse-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public Document parse(File f)
	               throws SAXException,
	                      IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#parse-java.io.File-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public abstract Document parse(InputSource is)
	                        throws SAXException,
	                               IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#parse-org.xml.sax.InputSource-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public abstract boolean isNamespaceAware()
	Name: isNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#isNamespaceAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract boolean isValidating()
	Name: isValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#isValidating--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setEntityResolver(EntityResolver er)
	Name: setEntityResolver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#setEntityResolver-org.xml.sax.EntityResolver-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::EntityResolver
	
		[result]
		other::void
	}

	[Function]
	public abstract void setErrorHandler(ErrorHandler eh)
	Name: setErrorHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#setErrorHandler-org.xml.sax.ErrorHandler-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::ErrorHandler
	
		[result]
		other::void
	}

	[Function]
	public abstract Document newDocument()
	Name: newDocument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#newDocument--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.w3c.dom::Document
	}

	[Function]
	public abstract DOMImplementation getDOMImplementation()
	Name: getDOMImplementation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#getDOMImplementation--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.w3c.dom::DOMImplementation
	}

	[Function]
	public Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#getSchema--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	public boolean isXIncludeAware()
	Name: isXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilder.html#isXIncludeAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public abstract class DocumentBuilderFactory
extends Object
Name: DocumentBuilderFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html
Containing package: javax.xml.parsers
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected DocumentBuilderFactory()
	Name: DocumentBuilderFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#DocumentBuilderFactory--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::DocumentBuilderFactory
	}

	[Function]
	public static DocumentBuilderFactory newInstance()
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#newInstance--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::DocumentBuilderFactory
	}

	[Function]
	public static DocumentBuilderFactory newInstance(String factoryClassName,
	                                                 ClassLoader classLoader)
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#newInstance-java.lang.String-java.lang.ClassLoader-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::ClassLoader
	
		[result]
		javax.xml.parsers::DocumentBuilderFactory
	}

	[Function]
	public abstract DocumentBuilder newDocumentBuilder()
	                                            throws ParserConfigurationException
	Name: newDocumentBuilder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#newDocumentBuilder--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::DocumentBuilder
	}

	[Function]
	public void setNamespaceAware(boolean awareness)
	Name: setNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setNamespaceAware-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setValidating(boolean validating)
	Name: setValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setValidating-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setIgnoringElementContentWhitespace(boolean whitespace)
	Name: setIgnoringElementContentWhitespace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setIgnoringElementContentWhitespace-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setExpandEntityReferences(boolean expandEntityRef)
	Name: setExpandEntityReferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setExpandEntityReferences-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setIgnoringComments(boolean ignoreComments)
	Name: setIgnoringComments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setIgnoringComments-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setCoalescing(boolean coalescing)
	Name: setCoalescing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setCoalescing-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isNamespaceAware()
	Name: isNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isNamespaceAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isValidating()
	Name: isValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isValidating--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isIgnoringElementContentWhitespace()
	Name: isIgnoringElementContentWhitespace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isIgnoringElementContentWhitespace--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isExpandEntityReferences()
	Name: isExpandEntityReferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isExpandEntityReferences--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isIgnoringComments()
	Name: isIgnoringComments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isIgnoringComments--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isCoalescing()
	Name: isCoalescing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isCoalescing--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setAttribute(String name,
	                                  Object value)
	                           throws IllegalArgumentException
	Name: setAttribute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setAttribute-java.lang.String-java.lang.Object-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public abstract Object getAttribute(String name)
	                             throws IllegalArgumentException
	Name: getAttribute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#getAttribute-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	public abstract void setFeature(String name,
	                                boolean value)
	                         throws ParserConfigurationException
	Name: setFeature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setFeature-java.lang.String-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getFeature(String name)
	                            throws ParserConfigurationException
	Name: getFeature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#getFeature-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#getSchema--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	public void setSchema(Schema schema)
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setSchema-javax.xml.validation.Schema-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.validation::Schema
	
		[result]
		other::void
	}

	[Function]
	public void setXIncludeAware(boolean state)
	Name: setXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#setXIncludeAware-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isXIncludeAware()
	Name: isXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#isXIncludeAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentBuilderFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public abstract class SAXParser
extends Object
Name: SAXParser
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html
Containing package: javax.xml.parsers
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SAXParser()
	Name: SAXParser
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#SAXParser--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::SAXParser
	}

	[Function]
	public void reset()
	Name: reset
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#reset--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputStream is,
	                  HandlerBase hb)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.InputStream-org.xml.sax.HandlerBase-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		org.xml.sax::HandlerBase
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputStream is,
	                  HandlerBase hb,
	                  String systemId)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.InputStream-org.xml.sax.HandlerBase-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		org.xml.sax::HandlerBase
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputStream is,
	                  DefaultHandler dh)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.InputStream-org.xml.sax.helpers.DefaultHandler-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		org.xml.sax.helpers::DefaultHandler
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputStream is,
	                  DefaultHandler dh,
	                  String systemId)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.InputStream-org.xml.sax.helpers.DefaultHandler-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		org.xml.sax.helpers::DefaultHandler
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void parse(String uri,
	                  HandlerBase hb)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.lang.String-org.xml.sax.HandlerBase-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		org.xml.sax::HandlerBase
	
		[result]
		other::void
	}

	[Function]
	public void parse(String uri,
	                  DefaultHandler dh)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.lang.String-org.xml.sax.helpers.DefaultHandler-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		org.xml.sax.helpers::DefaultHandler
	
		[result]
		other::void
	}

	[Function]
	public void parse(File f,
	                  HandlerBase hb)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.File-org.xml.sax.HandlerBase-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
		org.xml.sax::HandlerBase
	
		[result]
		other::void
	}

	[Function]
	public void parse(File f,
	                  DefaultHandler dh)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-java.io.File-org.xml.sax.helpers.DefaultHandler-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
		org.xml.sax.helpers::DefaultHandler
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputSource is,
	                  HandlerBase hb)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-org.xml.sax.InputSource-org.xml.sax.HandlerBase-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
		org.xml.sax::HandlerBase
	
		[result]
		other::void
	}

	[Function]
	public void parse(InputSource is,
	                  DefaultHandler dh)
	           throws SAXException,
	                  IOException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#parse-org.xml.sax.InputSource-org.xml.sax.helpers.DefaultHandler-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
		org.xml.sax.helpers::DefaultHandler
	
		[result]
		other::void
	}

	[Function]
	public abstract Parser getParser()
	                          throws SAXException
	Name: getParser
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#getParser--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax::Parser
	}

	[Function]
	public abstract XMLReader getXMLReader()
	                                throws SAXException
	Name: getXMLReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#getXMLReader--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax::XMLReader
	}

	[Function]
	public abstract boolean isNamespaceAware()
	Name: isNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#isNamespaceAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract boolean isValidating()
	Name: isValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#isValidating--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setProperty(String name,
	                                 Object value)
	                          throws SAXNotRecognizedException,
	                                 SAXNotSupportedException
	Name: setProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#setProperty-java.lang.String-java.lang.Object-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public abstract Object getProperty(String name)
	                            throws SAXNotRecognizedException,
	                                   SAXNotSupportedException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#getProperty-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	public Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#getSchema--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	public boolean isXIncludeAware()
	Name: isXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParser.html#isXIncludeAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParser
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public abstract class SAXParserFactory
extends Object
Name: SAXParserFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html
Containing package: javax.xml.parsers
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SAXParserFactory()
	Name: SAXParserFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#SAXParserFactory--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::SAXParserFactory
	}

	[Function]
	public static SAXParserFactory newInstance()
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::SAXParserFactory
	}

	[Function]
	public static SAXParserFactory newInstance(String factoryClassName,
	                                           ClassLoader classLoader)
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance-java.lang.String-java.lang.ClassLoader-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::ClassLoader
	
		[result]
		javax.xml.parsers::SAXParserFactory
	}

	[Function]
	public abstract SAXParser newSAXParser()
	                                throws ParserConfigurationException,
	                                       SAXException
	Name: newSAXParser
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#newSAXParser--
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::SAXParser
	}

	[Function]
	public void setNamespaceAware(boolean awareness)
	Name: setNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#setNamespaceAware-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public void setValidating(boolean validating)
	Name: setValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#setValidating-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isNamespaceAware()
	Name: isNamespaceAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#isNamespaceAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isValidating()
	Name: isValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#isValidating--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setFeature(String name,
	                                boolean value)
	                         throws ParserConfigurationException,
	                                SAXNotRecognizedException,
	                                SAXNotSupportedException
	Name: setFeature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#setFeature-java.lang.String-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getFeature(String name)
	                            throws ParserConfigurationException,
	                                   SAXNotRecognizedException,
	                                   SAXNotSupportedException
	Name: getFeature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#getFeature-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#getSchema--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	public void setSchema(Schema schema)
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#setSchema-javax.xml.validation.Schema-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.validation::Schema
	
		[result]
		other::void
	}

	[Function]
	public void setXIncludeAware(boolean state)
	Name: setXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#setXIncludeAware-boolean-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isXIncludeAware()
	Name: isXIncludeAware
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/SAXParserFactory.html#isXIncludeAware--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXParserFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public class ParserConfigurationException
extends Exception
Name: ParserConfigurationException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/ParserConfigurationException.html
Containing package: javax.xml.parsers
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public ParserConfigurationException()
	Name: ParserConfigurationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/ParserConfigurationException.html#ParserConfigurationException--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ParserConfigurationException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::ParserConfigurationException
	}

	[Function]
	public ParserConfigurationException(String msg)
	Name: ParserConfigurationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/ParserConfigurationException.html#ParserConfigurationException-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ParserConfigurationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.parsers::ParserConfigurationException
	}
}

[Classifier]
public class FactoryConfigurationError
extends Error
Name: FactoryConfigurationError
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html
Containing package: javax.xml.parsers
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Error
}
members {

	[Function]
	public FactoryConfigurationError()
	Name: FactoryConfigurationError
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#FactoryConfigurationError--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.parsers::FactoryConfigurationError
	}

	[Function]
	public FactoryConfigurationError(String msg)
	Name: FactoryConfigurationError
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#FactoryConfigurationError-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.parsers::FactoryConfigurationError
	}

	[Function]
	public FactoryConfigurationError(Exception e)
	Name: FactoryConfigurationError
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#FactoryConfigurationError-java.lang.Exception-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Exception
	
		[result]
		javax.xml.parsers::FactoryConfigurationError
	}

	[Function]
	public FactoryConfigurationError(Exception e,
	                                 String msg)
	Name: FactoryConfigurationError
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#FactoryConfigurationError-java.lang.Exception-java.lang.String-
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Exception
		java.lang::String
	
		[result]
		javax.xml.parsers::FactoryConfigurationError
	}

	[Function]
	public String getMessage()
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#getMessage--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Exception getException()
	Name: getException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#getException--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Exception
	}

	[Function]
	public Throwable getCause()
	Name: getCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/parsers/FactoryConfigurationError.html#getCause--
	Containing package: javax.xml.parsers
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FactoryConfigurationError
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}
}