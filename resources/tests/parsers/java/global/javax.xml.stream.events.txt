[Package]
Name: javax.xml.stream.events
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/package-summary.html
Containing package: javax.xml.stream
attributes {
}

Subpackages {
}

[Classifier]
public interface Attribute
extends XMLEvent
Name: Attribute
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Attribute.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.stream.events::Namespace
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	QName getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Attribute.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Attribute
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	String getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Attribute.html#getValue--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Attribute
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getDTDType()
	Name: getDTDType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Attribute.html#getDTDType--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Attribute
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isSpecified()
	Name: isSpecified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Attribute.html#isSpecified--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Attribute
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface Characters
extends XMLEvent
Name: Characters
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Characters.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getData()
	Name: getData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Characters.html#getData--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Characters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isWhiteSpace()
	Name: isWhiteSpace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Characters.html#isWhiteSpace--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Characters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isCData()
	Name: isCData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Characters.html#isCData--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Characters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isIgnorableWhiteSpace()
	Name: isIgnorableWhiteSpace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Characters.html#isIgnorableWhiteSpace--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Characters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface Comment
extends XMLEvent
Name: Comment
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Comment.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getText()
	Name: getText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Comment.html#getText--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Comment
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface DTD
extends XMLEvent
Name: DTD
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/DTD.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getDocumentTypeDeclaration()
	Name: getDocumentTypeDeclaration
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/DTD.html#getDocumentTypeDeclaration--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DTD
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Object getProcessedDTD()
	Name: getProcessedDTD
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/DTD.html#getProcessedDTD--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DTD
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	List getNotations()
	Name: getNotations
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/DTD.html#getNotations--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DTD
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}

	[Function]
	List getEntities()
	Name: getEntities
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/DTD.html#getEntities--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DTD
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}
}

[Classifier]
public interface EndDocument
extends XMLEvent
Name: EndDocument
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EndDocument.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {
}

[Classifier]
public interface EndElement
extends XMLEvent
Name: EndElement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EndElement.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	QName getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EndElement.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EndElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	Iterator getNamespaces()
	Name: getNamespaces
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EndElement.html#getNamespaces--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EndElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Iterator
	}
}

[Classifier]
public interface EntityDeclaration
extends XMLEvent
Name: EntityDeclaration
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getPublicId()
	Name: getPublicId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getPublicId--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getSystemId--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getNotationName()
	Name: getNotationName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getNotationName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getReplacementText()
	Name: getReplacementText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getReplacementText--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getBaseURI()
	Name: getBaseURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityDeclaration.html#getBaseURI--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface EntityReference
extends XMLEvent
Name: EntityReference
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityReference.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	EntityDeclaration getDeclaration()
	Name: getDeclaration
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityReference.html#getDeclaration--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityReference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::EntityDeclaration
	}

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/EntityReference.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EntityReference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface Namespace
extends Attribute
Name: Namespace
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Namespace.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::Attribute
}
members {

	[Function]
	String getPrefix()
	Name: getPrefix
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Namespace.html#getPrefix--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Namespace
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getNamespaceURI()
	Name: getNamespaceURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Namespace.html#getNamespaceURI--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Namespace
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isDefaultNamespaceDeclaration()
	Name: isDefaultNamespaceDeclaration
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/Namespace.html#isDefaultNamespaceDeclaration--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Namespace
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface NotationDeclaration
extends XMLEvent
Name: NotationDeclaration
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/NotationDeclaration.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/NotationDeclaration.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NotationDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getPublicId()
	Name: getPublicId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/NotationDeclaration.html#getPublicId--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NotationDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/NotationDeclaration.html#getSystemId--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: NotationDeclaration
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface ProcessingInstruction
extends XMLEvent
Name: ProcessingInstruction
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/ProcessingInstruction.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/ProcessingInstruction.html#getTarget--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ProcessingInstruction
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getData()
	Name: getData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/ProcessingInstruction.html#getData--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ProcessingInstruction
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface StartDocument
extends XMLEvent
Name: StartDocument
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#getSystemId--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getCharacterEncodingScheme()
	Name: getCharacterEncodingScheme
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#getCharacterEncodingScheme--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean encodingSet()
	Name: encodingSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#encodingSet--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isStandalone()
	Name: isStandalone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#isStandalone--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean standaloneSet()
	Name: standaloneSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#standaloneSet--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartDocument.html#getVersion--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartDocument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface StartElement
extends XMLEvent
Name: StartElement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream.events::XMLEvent
}
members {

	[Function]
	QName getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getName--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	Iterator getAttributes()
	Name: getAttributes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getAttributes--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Iterator
	}

	[Function]
	Iterator getNamespaces()
	Name: getNamespaces
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getNamespaces--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Iterator
	}

	[Function]
	Attribute getAttributeByName(QName name)
	Name: getAttributeByName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getAttributeByName-javax.xml.namespace.QName-
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.namespace::QName
	
		[result]
		javax.xml.stream.events::Attribute
	}

	[Function]
	NamespaceContext getNamespaceContext()
	Name: getNamespaceContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getNamespaceContext--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::NamespaceContext
	}

	[Function]
	String getNamespaceURI(String prefix)
	Name: getNamespaceURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/StartElement.html#getNamespaceURI-java.lang.String-
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StartElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface XMLEvent
extends XMLStreamConstants
Name: XMLEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html
Containing package: javax.xml.stream.events
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.stream.events::EntityDeclaration
	javax.xml.stream.events::EndElement
	javax.xml.stream.events::StartDocument
	javax.xml.stream.events::ProcessingInstruction
	javax.xml.stream.events::Comment
	javax.xml.stream.events::StartElement
	javax.xml.stream.events::Attribute
	javax.xml.stream.events::Characters
	javax.xml.stream.events::NotationDeclaration
	javax.xml.stream.events::DTD
	javax.xml.stream.events::EndDocument
	javax.xml.stream.events::EntityReference
}
supertypes {
	javax.xml.stream::XMLStreamConstants
}
members {

	[Function]
	int getEventType()
	Name: getEventType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#getEventType--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Location getLocation()
	Name: getLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#getLocation--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream::Location
	}

	[Function]
	boolean isStartElement()
	Name: isStartElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isStartElement--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isAttribute()
	Name: isAttribute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isAttribute--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isNamespace()
	Name: isNamespace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isNamespace--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isEndElement()
	Name: isEndElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isEndElement--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isEntityReference()
	Name: isEntityReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isEntityReference--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isProcessingInstruction()
	Name: isProcessingInstruction
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isProcessingInstruction--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isCharacters()
	Name: isCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isCharacters--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isStartDocument()
	Name: isStartDocument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isStartDocument--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean isEndDocument()
	Name: isEndDocument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#isEndDocument--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	StartElement asStartElement()
	Name: asStartElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#asStartElement--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::StartElement
	}

	[Function]
	EndElement asEndElement()
	Name: asEndElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#asEndElement--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::EndElement
	}

	[Function]
	Characters asCharacters()
	Name: asCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#asCharacters--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::Characters
	}

	[Function]
	QName getSchemaType()
	Name: getSchemaType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#getSchemaType--
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	void writeAsEncodedUnicode(Writer writer)
	                    throws XMLStreamException
	Name: writeAsEncodedUnicode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/events/XMLEvent.html#writeAsEncodedUnicode-java.io.Writer-
	Containing package: javax.xml.stream.events
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Writer
	
		[result]
		other::void
	}
}