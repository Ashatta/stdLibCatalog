[Package]
Name: javax.xml.crypto.dsig
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/package-summary.html
Containing package: javax.xml.crypto
attributes {
}

Subpackages {
	javax.xml.crypto.dsig.keyinfo
	javax.xml.crypto.dsig.dom
	javax.xml.crypto.dsig.spec
}

[Classifier]
public interface CanonicalizationMethod
extends Transform
Name: CanonicalizationMethod
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto.dsig::Transform
}
members {

	[Function]
	static final String INCLUSIVE
	Name: INCLUSIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html#INCLUSIVE
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: CanonicalizationMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String INCLUSIVE_WITH_COMMENTS
	Name: INCLUSIVE_WITH_COMMENTS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html#INCLUSIVE_WITH_COMMENTS
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: CanonicalizationMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String EXCLUSIVE
	Name: EXCLUSIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html#EXCLUSIVE
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: CanonicalizationMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String EXCLUSIVE_WITH_COMMENTS
	Name: EXCLUSIVE_WITH_COMMENTS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html#EXCLUSIVE_WITH_COMMENTS
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: CanonicalizationMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	AlgorithmParameterSpec getParameterSpec()
	Name: getParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/CanonicalizationMethod.html#getParameterSpec--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CanonicalizationMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}
}

[Classifier]
public interface DigestMethod
extends XMLStructure, AlgorithmMethod
Name: DigestMethod
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
	javax.xml.crypto::AlgorithmMethod
}
members {

	[Function]
	static final String SHA1
	Name: SHA1
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html#SHA1
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DigestMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String SHA256
	Name: SHA256
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html#SHA256
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DigestMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String SHA512
	Name: SHA512
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html#SHA512
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DigestMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String RIPEMD160
	Name: RIPEMD160
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html#RIPEMD160
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: DigestMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	AlgorithmParameterSpec getParameterSpec()
	Name: getParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/DigestMethod.html#getParameterSpec--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DigestMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}
}

[Classifier]
public interface Manifest
extends XMLStructure
Name: Manifest
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Manifest.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	static final String TYPE
	Name: TYPE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Manifest.html#TYPE
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Manifest
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Manifest.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Manifest
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	List getReferences()
	Name: getReferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Manifest.html#getReferences--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Manifest
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}
}

[Classifier]
public interface Reference
extends URIReference, XMLStructure
Name: Reference
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::URIReference
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	List getTransforms()
	Name: getTransforms
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getTransforms--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}

	[Function]
	DigestMethod getDigestMethod()
	Name: getDigestMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getDigestMethod--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::DigestMethod
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	byte[] getDigestValue()
	Name: getDigestValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getDigestValue--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	byte[] getCalculatedDigestValue()
	Name: getCalculatedDigestValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getCalculatedDigestValue--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	boolean validate(XMLValidateContext validateContext)
	          throws XMLSignatureException
	Name: validate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#validate-javax.xml.crypto.dsig.XMLValidateContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::XMLValidateContext
	
		[result]
		other::boolean
	}

	[Function]
	Data getDereferencedData()
	Name: getDereferencedData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getDereferencedData--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto::Data
	}

	[Function]
	InputStream getDigestInputStream()
	Name: getDigestInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Reference.html#getDigestInputStream--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Reference
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}
}

[Classifier]
public interface SignatureMethod
extends XMLStructure, AlgorithmMethod
Name: SignatureMethod
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureMethod.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
	javax.xml.crypto::AlgorithmMethod
}
members {

	[Function]
	static final String DSA_SHA1
	Name: DSA_SHA1
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureMethod.html#DSA_SHA1
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SignatureMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String RSA_SHA1
	Name: RSA_SHA1
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureMethod.html#RSA_SHA1
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SignatureMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String HMAC_SHA1
	Name: HMAC_SHA1
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureMethod.html#HMAC_SHA1
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SignatureMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	AlgorithmParameterSpec getParameterSpec()
	Name: getParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureMethod.html#getParameterSpec--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureMethod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}
}

[Classifier]
public interface SignatureProperties
extends XMLStructure
Name: SignatureProperties
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperties.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	static final String TYPE
	Name: TYPE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperties.html#TYPE
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SignatureProperties
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperties.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureProperties
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	List getProperties()
	Name: getProperties
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperties.html#getProperties--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureProperties
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}
}

[Classifier]
public interface SignatureProperty
extends XMLStructure
Name: SignatureProperty
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperty.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	String getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperty.html#getTarget--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureProperty
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperty.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureProperty
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	List getContent()
	Name: getContent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignatureProperty.html#getContent--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignatureProperty
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}
}

[Classifier]
public interface SignedInfo
extends XMLStructure
Name: SignedInfo
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	CanonicalizationMethod getCanonicalizationMethod()
	Name: getCanonicalizationMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html#getCanonicalizationMethod--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignedInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::CanonicalizationMethod
	}

	[Function]
	SignatureMethod getSignatureMethod()
	Name: getSignatureMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html#getSignatureMethod--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignedInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::SignatureMethod
	}

	[Function]
	List getReferences()
	Name: getReferences
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html#getReferences--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignedInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignedInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	InputStream getCanonicalizedData()
	Name: getCanonicalizedData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/SignedInfo.html#getCanonicalizedData--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SignedInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}
}

[Classifier]
public interface Transform
extends XMLStructure, AlgorithmMethod
Name: Transform
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.crypto.dsig::CanonicalizationMethod
	javax.xml.crypto.dsig::TransformService
}
supertypes {
	javax.xml.crypto::XMLStructure
	javax.xml.crypto::AlgorithmMethod
}
members {

	[Function]
	static final String BASE64
	Name: BASE64
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#BASE64
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String ENVELOPED
	Name: ENVELOPED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#ENVELOPED
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String XPATH
	Name: XPATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#XPATH
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String XPATH2
	Name: XPATH2
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#XPATH2
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String XSLT
	Name: XSLT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#XSLT
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	AlgorithmParameterSpec getParameterSpec()
	Name: getParameterSpec
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#getParameterSpec--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.spec::AlgorithmParameterSpec
	}

	[Function]
	Data transform(Data data,
	               XMLCryptoContext context)
	        throws TransformException
	Name: transform
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#transform-javax.xml.crypto.Data-javax.xml.crypto.XMLCryptoContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto::Data
		javax.xml.crypto::XMLCryptoContext
	
		[result]
		javax.xml.crypto::Data
	}

	[Function]
	Data transform(Data data,
	               XMLCryptoContext context,
	               OutputStream os)
	        throws TransformException
	Name: transform
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/Transform.html#transform-javax.xml.crypto.Data-javax.xml.crypto.XMLCryptoContext-java.io.OutputStream-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transform
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto::Data
		javax.xml.crypto::XMLCryptoContext
		java.io::OutputStream
	
		[result]
		javax.xml.crypto::Data
	}
}

[Classifier]
public interface XMLObject
extends XMLStructure
Name: XMLObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	static final String TYPE
	Name: TYPE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html#TYPE
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: XMLObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	List getContent()
	Name: getContent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html#getContent--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getMimeType()
	Name: getMimeType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html#getMimeType--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getEncoding()
	Name: getEncoding
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLObject.html#getEncoding--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface XMLSignature
extends XMLStructure
Name: XMLSignature
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	static final String XMLNS
	Name: XMLNS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#XMLNS
	Containing package: javax.xml.crypto.dsig
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean validate(XMLValidateContext validateContext)
	          throws XMLSignatureException
	Name: validate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#validate-javax.xml.crypto.dsig.XMLValidateContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::XMLValidateContext
	
		[result]
		other::boolean
	}

	[Function]
	KeyInfo getKeyInfo()
	Name: getKeyInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getKeyInfo--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig.keyinfo::KeyInfo
	}

	[Function]
	SignedInfo getSignedInfo()
	Name: getSignedInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getSignedInfo--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::SignedInfo
	}

	[Function]
	List getObjects()
	Name: getObjects
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getObjects--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	XMLSignature.SignatureValue getSignatureValue()
	Name: getSignatureValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getSignatureValue--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::XMLSignature.SignatureValue
	}

	[Function]
	void sign(XMLSignContext signContext)
	   throws MarshalException,
	          XMLSignatureException
	Name: sign
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#sign-javax.xml.crypto.dsig.XMLSignContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::XMLSignContext
	
		[result]
		other::void
	}

	[Function]
	KeySelectorResult getKeySelectorResult()
	Name: getKeySelectorResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.html#getKeySelectorResult--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto::KeySelectorResult
	}
}

[Classifier]
public static interface XMLSignature.SignatureValue
extends XMLStructure
Name: XMLSignature.SignatureValue
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.SignatureValue.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto::XMLStructure
}
members {

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.SignatureValue.html#getId--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature.SignatureValue
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	byte[] getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.SignatureValue.html#getValue--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature.SignatureValue
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	boolean validate(XMLValidateContext validateContext)
	          throws XMLSignatureException
	Name: validate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignature.SignatureValue.html#validate-javax.xml.crypto.dsig.XMLValidateContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignature.SignatureValue
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::XMLValidateContext
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface XMLSignContext
extends XMLCryptoContext
Name: XMLSignContext
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignContext.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.crypto.dsig.dom::DOMSignContext
}
supertypes {
	javax.xml.crypto::XMLCryptoContext
}
members {
}

[Classifier]
public interface XMLValidateContext
extends XMLCryptoContext
Name: XMLValidateContext
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLValidateContext.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.crypto.dsig.dom::DOMValidateContext
}
supertypes {
	javax.xml.crypto::XMLCryptoContext
}
members {
}

[Classifier]
public abstract class TransformService
extends Object
implements Transform
Name: TransformService
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.crypto.dsig::Transform
	java.lang::Object
}
members {

	[Function]
	protected TransformService()
	Name: TransformService
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#TransformService--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::TransformService
	}

	[Function]
	public static TransformService getInstance(String algorithm,
	                                           String mechanismType)
	                                    throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getInstance-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::TransformService
	}

	[Function]
	public static TransformService getInstance(String algorithm,
	                                           String mechanismType,
	                                           Provider provider)
	                                    throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getInstance-java.lang.String-java.lang.String-java.security.Provider-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.security::Provider
	
		[result]
		javax.xml.crypto.dsig::TransformService
	}

	[Function]
	public static TransformService getInstance(String algorithm,
	                                           String mechanismType,
	                                           String provider)
	                                    throws NoSuchAlgorithmException,
	                                           NoSuchProviderException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getInstance-java.lang.String-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::TransformService
	}

	[Function]
	public final String getMechanismType()
	Name: getMechanismType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getMechanismType--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getAlgorithm()
	Name: getAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getAlgorithm--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final Provider getProvider()
	Name: getProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#getProvider--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Provider
	}

	[Function]
	public abstract void init(TransformParameterSpec params)
	                   throws InvalidAlgorithmParameterException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#init-javax.xml.crypto.dsig.spec.TransformParameterSpec-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig.spec::TransformParameterSpec
	
		[result]
		other::void
	}

	[Function]
	public abstract void marshalParams(XMLStructure parent,
	                                   XMLCryptoContext context)
	                            throws MarshalException
	Name: marshalParams
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#marshalParams-javax.xml.crypto.XMLStructure-javax.xml.crypto.XMLCryptoContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto::XMLStructure
		javax.xml.crypto::XMLCryptoContext
	
		[result]
		other::void
	}

	[Function]
	public abstract void init(XMLStructure parent,
	                          XMLCryptoContext context)
	                   throws InvalidAlgorithmParameterException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformService.html#init-javax.xml.crypto.XMLStructure-javax.xml.crypto.XMLCryptoContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformService
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto::XMLStructure
		javax.xml.crypto::XMLCryptoContext
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class XMLSignatureFactory
extends Object
Name: XMLSignatureFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected XMLSignatureFactory()
	Name: XMLSignatureFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#XMLSignatureFactory--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureFactory
	}

	[Function]
	public static XMLSignatureFactory getInstance(String mechanismType)
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getInstance-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureFactory
	}

	[Function]
	public static XMLSignatureFactory getInstance(String mechanismType,
	                                              Provider provider)
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getInstance-java.lang.String-java.security.Provider-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.security::Provider
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureFactory
	}

	[Function]
	public static XMLSignatureFactory getInstance(String mechanismType,
	                                              String provider)
	                                       throws NoSuchProviderException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getInstance-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureFactory
	}

	[Function]
	public static XMLSignatureFactory getInstance()
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getInstance--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureFactory
	}

	[Function]
	public final String getMechanismType()
	Name: getMechanismType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getMechanismType--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final Provider getProvider()
	Name: getProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getProvider--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Provider
	}

	[Function]
	public abstract XMLSignature newXMLSignature(SignedInfo si,
	                                             KeyInfo ki)
	Name: newXMLSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newXMLSignature-javax.xml.crypto.dsig.SignedInfo-javax.xml.crypto.dsig.keyinfo.KeyInfo-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::SignedInfo
		javax.xml.crypto.dsig.keyinfo::KeyInfo
	
		[result]
		javax.xml.crypto.dsig::XMLSignature
	}

	[Function]
	public abstract XMLSignature newXMLSignature(SignedInfo si,
	                                             KeyInfo ki,
	                                             List objects,
	                                             String id,
	                                             String signatureValueId)
	Name: newXMLSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newXMLSignature-javax.xml.crypto.dsig.SignedInfo-javax.xml.crypto.dsig.keyinfo.KeyInfo-java.util.List-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::SignedInfo
		javax.xml.crypto.dsig.keyinfo::KeyInfo
		java.util::List
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::XMLSignature
	}

	[Function]
	public abstract Reference newReference(String uri,
	                                       DigestMethod dm)
	Name: newReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newReference-java.lang.String-javax.xml.crypto.dsig.DigestMethod-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig::DigestMethod
	
		[result]
		javax.xml.crypto.dsig::Reference
	}

	[Function]
	public abstract Reference newReference(String uri,
	                                       DigestMethod dm,
	                                       List transforms,
	                                       String type,
	                                       String id)
	Name: newReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newReference-java.lang.String-javax.xml.crypto.dsig.DigestMethod-java.util.List-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig::DigestMethod
		java.util::List
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::Reference
	}

	[Function]
	public abstract Reference newReference(String uri,
	                                       DigestMethod dm,
	                                       List transforms,
	                                       String type,
	                                       String id,
	                                       byte[] digestValue)
	Name: newReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newReference-java.lang.String-javax.xml.crypto.dsig.DigestMethod-java.util.List-java.lang.String-java.lang.String-byte:A-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig::DigestMethod
		java.util::List
		java.lang::String
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		javax.xml.crypto.dsig::Reference
	}

	[Function]
	public abstract Reference newReference(String uri,
	                                       DigestMethod dm,
	                                       List appliedTransforms,
	                                       Data result,
	                                       List transforms,
	                                       String type,
	                                       String id)
	Name: newReference
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newReference-java.lang.String-javax.xml.crypto.dsig.DigestMethod-java.util.List-javax.xml.crypto.Data-java.util.List-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig::DigestMethod
		java.util::List
		javax.xml.crypto::Data
		java.util::List
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::Reference
	}

	[Function]
	public abstract SignedInfo newSignedInfo(CanonicalizationMethod cm,
	                                         SignatureMethod sm,
	                                         List references)
	Name: newSignedInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newSignedInfo-javax.xml.crypto.dsig.CanonicalizationMethod-javax.xml.crypto.dsig.SignatureMethod-java.util.List-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::CanonicalizationMethod
		javax.xml.crypto.dsig::SignatureMethod
		java.util::List
	
		[result]
		javax.xml.crypto.dsig::SignedInfo
	}

	[Function]
	public abstract SignedInfo newSignedInfo(CanonicalizationMethod cm,
	                                         SignatureMethod sm,
	                                         List references,
	                                         String id)
	Name: newSignedInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newSignedInfo-javax.xml.crypto.dsig.CanonicalizationMethod-javax.xml.crypto.dsig.SignatureMethod-java.util.List-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::CanonicalizationMethod
		javax.xml.crypto.dsig::SignatureMethod
		java.util::List
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::SignedInfo
	}

	[Function]
	public abstract XMLObject newXMLObject(List content,
	                                       String id,
	                                       String mimeType,
	                                       String encoding)
	Name: newXMLObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newXMLObject-java.util.List-java.lang.String-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::XMLObject
	}

	[Function]
	public abstract Manifest newManifest(List references)
	Name: newManifest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newManifest-java.util.List-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List
	
		[result]
		javax.xml.crypto.dsig::Manifest
	}

	[Function]
	public abstract Manifest newManifest(List references,
	                                     String id)
	Name: newManifest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newManifest-java.util.List-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::Manifest
	}

	[Function]
	public abstract SignatureProperty newSignatureProperty(List content,
	                                                       String target,
	                                                       String id)
	Name: newSignatureProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newSignatureProperty-java.util.List-java.lang.String-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::SignatureProperty
	}

	[Function]
	public abstract SignatureProperties newSignatureProperties(List properties,
	                                                           String id)
	Name: newSignatureProperties
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newSignatureProperties-java.util.List-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::SignatureProperties
	}

	[Function]
	public abstract DigestMethod newDigestMethod(String algorithm,
	                                             DigestMethodParameterSpec params)
	                                      throws NoSuchAlgorithmException,
	                                             InvalidAlgorithmParameterException
	Name: newDigestMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newDigestMethod-java.lang.String-javax.xml.crypto.dsig.spec.DigestMethodParameterSpec-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig.spec::DigestMethodParameterSpec
	
		[result]
		javax.xml.crypto.dsig::DigestMethod
	}

	[Function]
	public abstract SignatureMethod newSignatureMethod(String algorithm,
	                                                   SignatureMethodParameterSpec params)
	                                            throws NoSuchAlgorithmException,
	                                                   InvalidAlgorithmParameterException
	Name: newSignatureMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newSignatureMethod-java.lang.String-javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig.spec::SignatureMethodParameterSpec
	
		[result]
		javax.xml.crypto.dsig::SignatureMethod
	}

	[Function]
	public abstract Transform newTransform(String algorithm,
	                                       TransformParameterSpec params)
	                                throws NoSuchAlgorithmException,
	                                       InvalidAlgorithmParameterException
	Name: newTransform
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newTransform-java.lang.String-javax.xml.crypto.dsig.spec.TransformParameterSpec-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig.spec::TransformParameterSpec
	
		[result]
		javax.xml.crypto.dsig::Transform
	}

	[Function]
	public abstract Transform newTransform(String algorithm,
	                                       XMLStructure params)
	                                throws NoSuchAlgorithmException,
	                                       InvalidAlgorithmParameterException
	Name: newTransform
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newTransform-java.lang.String-javax.xml.crypto.XMLStructure-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto::XMLStructure
	
		[result]
		javax.xml.crypto.dsig::Transform
	}

	[Function]
	public abstract CanonicalizationMethod newCanonicalizationMethod(String algorithm,
	                                                                 C14NMethodParameterSpec params)
	                                                          throws NoSuchAlgorithmException,
	                                                                 InvalidAlgorithmParameterException
	Name: newCanonicalizationMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newCanonicalizationMethod-java.lang.String-javax.xml.crypto.dsig.spec.C14NMethodParameterSpec-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto.dsig.spec::C14NMethodParameterSpec
	
		[result]
		javax.xml.crypto.dsig::CanonicalizationMethod
	}

	[Function]
	public abstract CanonicalizationMethod newCanonicalizationMethod(String algorithm,
	                                                                 XMLStructure params)
	                                                          throws NoSuchAlgorithmException,
	                                                                 InvalidAlgorithmParameterException
	Name: newCanonicalizationMethod
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#newCanonicalizationMethod-java.lang.String-javax.xml.crypto.XMLStructure-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.crypto::XMLStructure
	
		[result]
		javax.xml.crypto.dsig::CanonicalizationMethod
	}

	[Function]
	public final KeyInfoFactory getKeyInfoFactory()
	Name: getKeyInfoFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getKeyInfoFactory--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig.keyinfo::KeyInfoFactory
	}

	[Function]
	public abstract XMLSignature unmarshalXMLSignature(XMLValidateContext context)
	                                            throws MarshalException
	Name: unmarshalXMLSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#unmarshalXMLSignature-javax.xml.crypto.dsig.XMLValidateContext-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto.dsig::XMLValidateContext
	
		[result]
		javax.xml.crypto.dsig::XMLSignature
	}

	[Function]
	public abstract XMLSignature unmarshalXMLSignature(XMLStructure xmlStructure)
	                                            throws MarshalException
	Name: unmarshalXMLSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#unmarshalXMLSignature-javax.xml.crypto.XMLStructure-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.crypto::XMLStructure
	
		[result]
		javax.xml.crypto.dsig::XMLSignature
	}

	[Function]
	public abstract boolean isFeatureSupported(String feature)
	Name: isFeatureSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#isFeatureSupported-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public abstract URIDereferencer getURIDereferencer()
	Name: getURIDereferencer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureFactory.html#getURIDereferencer--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto::URIDereferencer
	}
}

[Classifier]
public class TransformException
extends Exception
Name: TransformException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public TransformException()
	Name: TransformException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#TransformException--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::TransformException
	}

	[Function]
	public TransformException(String message)
	Name: TransformException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#TransformException-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::TransformException
	}

	[Function]
	public TransformException(String message,
	                          Throwable cause)
	Name: TransformException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#TransformException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.crypto.dsig::TransformException
	}

	[Function]
	public TransformException(Throwable cause)
	Name: TransformException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#TransformException-java.lang.Throwable-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.crypto.dsig::TransformException
	}

	[Function]
	public Throwable getCause()
	Name: getCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#getCause--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public void printStackTrace()
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#printStackTrace--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace(PrintStream s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#printStackTrace-java.io.PrintStream-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintStream
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace(PrintWriter s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/TransformException.html#printStackTrace-java.io.PrintWriter-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintWriter
	
		[result]
		other::void
	}
}

[Classifier]
public class XMLSignatureException
extends Exception
Name: XMLSignatureException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html
Containing package: javax.xml.crypto.dsig
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public XMLSignatureException()
	Name: XMLSignatureException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#XMLSignatureException--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureException
	}

	[Function]
	public XMLSignatureException(String message)
	Name: XMLSignatureException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#XMLSignatureException-java.lang.String-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureException
	}

	[Function]
	public XMLSignatureException(String message,
	                             Throwable cause)
	Name: XMLSignatureException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#XMLSignatureException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureException
	}

	[Function]
	public XMLSignatureException(Throwable cause)
	Name: XMLSignatureException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#XMLSignatureException-java.lang.Throwable-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.crypto.dsig::XMLSignatureException
	}

	[Function]
	public Throwable getCause()
	Name: getCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#getCause--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public void printStackTrace()
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#printStackTrace--
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace(PrintStream s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#printStackTrace-java.io.PrintStream-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintStream
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace(PrintWriter s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/crypto/dsig/XMLSignatureException.html#printStackTrace-java.io.PrintWriter-
	Containing package: javax.xml.crypto.dsig
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLSignatureException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintWriter
	
		[result]
		other::void
	}
}