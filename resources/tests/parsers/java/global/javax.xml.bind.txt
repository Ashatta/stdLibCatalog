[Package]
Name: javax.xml.bind
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/package-summary.html
Containing package: javax.xml
attributes {
}

Subpackages {
	javax.xml.bind.attachment
	javax.xml.bind.helpers
	javax.xml.bind.util
	javax.xml.bind.annotation
}

[Classifier]
public interface DatatypeConverterInterface
Name: DatatypeConverterInterface
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	String parseString(String lexicalXSDString)
	Name: parseString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseString-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	BigInteger parseInteger(String lexicalXSDInteger)
	Name: parseInteger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseInteger-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigInteger
	}

	[Function]
	int parseInt(String lexicalXSDInt)
	Name: parseInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseInt-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	long parseLong(String lexicalXSDLong)
	Name: parseLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseLong-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	short parseShort(String lexicalXSDShort)
	Name: parseShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseShort-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::short
	}

	[Function]
	BigDecimal parseDecimal(String lexicalXSDDecimal)
	Name: parseDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseDecimal-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	float parseFloat(String lexicalXSDFloat)
	Name: parseFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseFloat-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::float
	}

	[Function]
	double parseDouble(String lexicalXSDDouble)
	Name: parseDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseDouble-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::double
	}

	[Function]
	boolean parseBoolean(String lexicalXSDBoolean)
	Name: parseBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseBoolean-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	byte parseByte(String lexicalXSDByte)
	Name: parseByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseByte-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::byte
	}

	[Function]
	QName parseQName(String lexicalXSDQName,
	                 NamespaceContext nsc)
	Name: parseQName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseQName-java.lang.String-javax.xml.namespace.NamespaceContext-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.namespace::NamespaceContext
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	Calendar parseDateTime(String lexicalXSDDateTime)
	Name: parseDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseDateTime-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	byte[] parseBase64Binary(String lexicalXSDBase64Binary)
	Name: parseBase64Binary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseBase64Binary-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	byte[] parseHexBinary(String lexicalXSDHexBinary)
	Name: parseHexBinary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseHexBinary-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	long parseUnsignedInt(String lexicalXSDUnsignedInt)
	Name: parseUnsignedInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseUnsignedInt-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	int parseUnsignedShort(String lexicalXSDUnsignedShort)
	Name: parseUnsignedShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseUnsignedShort-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	Calendar parseTime(String lexicalXSDTime)
	Name: parseTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseTime-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	Calendar parseDate(String lexicalXSDDate)
	Name: parseDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseDate-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	String parseAnySimpleType(String lexicalXSDAnySimpleType)
	Name: parseAnySimpleType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#parseAnySimpleType-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	String printString(String val)
	Name: printString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printString-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	String printInteger(BigInteger val)
	Name: printInteger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printInteger-java.math.BigInteger-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
	
		[result]
		java.lang::String
	}

	[Function]
	String printInt(int val)
	Name: printInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printInt-int-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String printLong(long val)
	Name: printLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printLong-long-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.lang::String
	}

	[Function]
	String printShort(short val)
	Name: printShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printShort-short-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::short
	
		[result]
		java.lang::String
	}

	[Function]
	String printDecimal(BigDecimal val)
	Name: printDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printDecimal-java.math.BigDecimal-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigDecimal
	
		[result]
		java.lang::String
	}

	[Function]
	String printFloat(float val)
	Name: printFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printFloat-float-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		java.lang::String
	}

	[Function]
	String printDouble(double val)
	Name: printDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printDouble-double-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::double
	
		[result]
		java.lang::String
	}

	[Function]
	String printBoolean(boolean val)
	Name: printBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printBoolean-boolean-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.lang::String
	}

	[Function]
	String printByte(byte val)
	Name: printByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printByte-byte-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::byte
	
		[result]
		java.lang::String
	}

	[Function]
	String printQName(QName val,
	                  NamespaceContext nsc)
	Name: printQName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printQName-javax.xml.namespace.QName-javax.xml.namespace.NamespaceContext-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.namespace::QName
		javax.xml.namespace::NamespaceContext
	
		[result]
		java.lang::String
	}

	[Function]
	String printDateTime(Calendar val)
	Name: printDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printDateTime-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	String printBase64Binary(byte[] val)
	Name: printBase64Binary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printBase64Binary-byte:A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		java.lang::String
	}

	[Function]
	String printHexBinary(byte[] val)
	Name: printHexBinary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printHexBinary-byte:A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		java.lang::String
	}

	[Function]
	String printUnsignedInt(long val)
	Name: printUnsignedInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printUnsignedInt-long-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.lang::String
	}

	[Function]
	String printUnsignedShort(int val)
	Name: printUnsignedShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printUnsignedShort-int-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	String printTime(Calendar val)
	Name: printTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printTime-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	String printDate(Calendar val)
	Name: printDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printDate-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	String printAnySimpleType(String val)
	Name: printAnySimpleType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverterInterface.html#printAnySimpleType-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverterInterface
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface Element
Name: Element
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Element.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Classifier]
public interface Marshaller
Name: Marshaller
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::AbstractMarshallerImpl
}
supertypes {
}
members {

	[Function]
	static final String JAXB_ENCODING
	Name: JAXB_ENCODING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#JAXB_ENCODING
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String JAXB_FORMATTED_OUTPUT
	Name: JAXB_FORMATTED_OUTPUT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#JAXB_FORMATTED_OUTPUT
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String JAXB_SCHEMA_LOCATION
	Name: JAXB_SCHEMA_LOCATION
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#JAXB_SCHEMA_LOCATION
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String JAXB_NO_NAMESPACE_SCHEMA_LOCATION
	Name: JAXB_NO_NAMESPACE_SCHEMA_LOCATION
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#JAXB_NO_NAMESPACE_SCHEMA_LOCATION
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	static final String JAXB_FRAGMENT
	Name: JAXB_FRAGMENT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#JAXB_FRAGMENT
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void marshal(Object jaxbElement,
	             Result result)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-javax.xml.transform.Result-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		javax.xml.transform::Result
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             OutputStream os)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-java.io.OutputStream-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             File output)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-java.io.File-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::File
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             Writer writer)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-java.io.Writer-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::Writer
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             ContentHandler handler)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-org.xml.sax.ContentHandler-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		org.xml.sax::ContentHandler
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             Node node)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-org.w3c.dom.Node-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		org.w3c.dom::Node
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             XMLStreamWriter writer)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-javax.xml.stream.XMLStreamWriter-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		javax.xml.stream::XMLStreamWriter
	
		[result]
		other::void
	}

	[Function]
	void marshal(Object jaxbElement,
	             XMLEventWriter writer)
	      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#marshal-java.lang.Object-javax.xml.stream.XMLEventWriter-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		javax.xml.stream::XMLEventWriter
	
		[result]
		other::void
	}

	[Function]
	Node getNode(Object contentTree)
	      throws JAXBException
	Name: getNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getNode-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		org.w3c.dom::Node
	}

	[Function]
	void setProperty(String name,
	                 Object value)
	          throws PropertyException
	Name: setProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setProperty-java.lang.String-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	Object getProperty(String name)
	            throws PropertyException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getProperty-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void setEventHandler(ValidationEventHandler handler)
	              throws JAXBException
	Name: setEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setEventHandler-javax.xml.bind.ValidationEventHandler-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::ValidationEventHandler
	
		[result]
		other::void
	}

	[Function]
	ValidationEventHandler getEventHandler()
	                                throws JAXBException
	Name: getEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getEventHandler--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::ValidationEventHandler
	}

	[Function]
	void setAdapter(XmlAdapter adapter)
	Name: setAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setAdapter-javax.xml.bind.annotation.adapters.XmlAdapter-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind.annotation.adapters::XmlAdapter
	
		[result]
		other::void
	}

	[Function]
	<A extends XmlAdapter> void setAdapter(Class<A> type,
	                                       A adapter)
	Name: setAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setAdapter-java.lang.Class-A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
		A: (A extends XmlAdapter; A; javax.xml.bind.annotation.adapters::XmlAdapter)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::A
		}
		null::A
	
		[result]
		other::void
	}

	[Function]
	<A extends XmlAdapter> A getAdapter(Class<A> type)
	Name: getAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getAdapter-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
		A: (A extends XmlAdapter; A; javax.xml.bind.annotation.adapters::XmlAdapter)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::A
		}
	
		[result]
		null::A
	}

	[Function]
	void setAttachmentMarshaller(AttachmentMarshaller am)
	Name: setAttachmentMarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setAttachmentMarshaller-javax.xml.bind.attachment.AttachmentMarshaller-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind.attachment::AttachmentMarshaller
	
		[result]
		other::void
	}

	[Function]
	AttachmentMarshaller getAttachmentMarshaller()
	Name: getAttachmentMarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getAttachmentMarshaller--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind.attachment::AttachmentMarshaller
	}

	[Function]
	void setSchema(Schema schema)
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setSchema-javax.xml.validation.Schema-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.validation::Schema
	
		[result]
		other::void
	}

	[Function]
	Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getSchema--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	void setListener(Marshaller.Listener listener)
	Name: setListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#setListener-javax.xml.bind.Marshaller.Listener-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::Marshaller.Listener
	
		[result]
		other::void
	}

	[Function]
	Marshaller.Listener getListener()
	Name: getListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.html#getListener--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Marshaller.Listener
	}
}

[Classifier]
public abstract static class Marshaller.Listener
extends Object
Name: Marshaller.Listener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.Listener.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public Listener()
	Name: Listener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.Listener.html#Listener--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Marshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Marshaller.Listener
	}

	[Function]
	public void beforeMarshal(Object source)
	Name: beforeMarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.Listener.html#beforeMarshal-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void afterMarshal(Object source)
	Name: afterMarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Marshaller.Listener.html#afterMarshal-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Marshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::void
	}
}

[Classifier]
public interface NotIdentifiableEvent
extends ValidationEvent
Name: NotIdentifiableEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/NotIdentifiableEvent.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::NotIdentifiableEventImpl
}
supertypes {
	javax.xml.bind::ValidationEvent
}
members {
}

[Classifier]
public interface ParseConversionEvent
extends ValidationEvent
Name: ParseConversionEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ParseConversionEvent.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::ParseConversionEventImpl
}
supertypes {
	javax.xml.bind::ValidationEvent
}
members {
}

[Classifier]
public interface PrintConversionEvent
extends ValidationEvent
Name: PrintConversionEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PrintConversionEvent.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::PrintConversionEventImpl
}
supertypes {
	javax.xml.bind::ValidationEvent
}
members {
}

[Classifier]
public interface Unmarshaller
Name: Unmarshaller
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::AbstractUnmarshallerImpl
}
supertypes {
}
members {

	[Function]
	Object unmarshal(File f)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-java.io.File-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		java.lang::Object
	}

	[Function]
	Object unmarshal(InputStream is)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-java.io.InputStream-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		java.lang::Object
	}

	[Function]
	Object unmarshal(Reader reader)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-java.io.Reader-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Reader
	
		[result]
		java.lang::Object
	}

	[Function]
	Object unmarshal(URL url)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-java.net.URL-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		java.lang::Object
	}

	[Function]
	Object unmarshal(InputSource source)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-org.xml.sax.InputSource-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
	
		[result]
		java.lang::Object
	}

	[Function]
	Object unmarshal(Node node)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-org.w3c.dom.Node-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.w3c.dom::Node
	
		[result]
		java.lang::Object
	}

	[Function]
	<T> JAXBElement<T> unmarshal(Node node,
	                             Class<T> declaredType)
	                      throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-org.w3c.dom.Node-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		org.w3c.dom::Node
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::JAXBElement {
			null::T
		}
	}

	[Function]
	Object unmarshal(Source source)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.transform.Source-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
	
		[result]
		java.lang::Object
	}

	[Function]
	<T> JAXBElement<T> unmarshal(Source source,
	                             Class<T> declaredType)
	                      throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.transform.Source-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::JAXBElement {
			null::T
		}
	}

	[Function]
	Object unmarshal(XMLStreamReader reader)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.stream.XMLStreamReader-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
	
		[result]
		java.lang::Object
	}

	[Function]
	<T> JAXBElement<T> unmarshal(XMLStreamReader reader,
	                             Class<T> declaredType)
	                      throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.stream.XMLStreamReader-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::JAXBElement {
			null::T
		}
	}

	[Function]
	Object unmarshal(XMLEventReader reader)
	          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.stream.XMLEventReader-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLEventReader
	
		[result]
		java.lang::Object
	}

	[Function]
	<T> JAXBElement<T> unmarshal(XMLEventReader reader,
	                             Class<T> declaredType)
	                      throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#unmarshal-javax.xml.stream.XMLEventReader-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLEventReader
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::JAXBElement {
			null::T
		}
	}

	[Function]
	UnmarshallerHandler getUnmarshallerHandler()
	Name: getUnmarshallerHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getUnmarshallerHandler--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::UnmarshallerHandler
	}

	[Function]
	void setValidating(boolean validating)
	            throws JAXBException
	Name: setValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setValidating-boolean-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean isValidating()
	              throws JAXBException
	Name: isValidating
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#isValidating--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setEventHandler(ValidationEventHandler handler)
	              throws JAXBException
	Name: setEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setEventHandler-javax.xml.bind.ValidationEventHandler-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::ValidationEventHandler
	
		[result]
		other::void
	}

	[Function]
	ValidationEventHandler getEventHandler()
	                                throws JAXBException
	Name: getEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getEventHandler--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::ValidationEventHandler
	}

	[Function]
	void setProperty(String name,
	                 Object value)
	          throws PropertyException
	Name: setProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setProperty-java.lang.String-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	Object getProperty(String name)
	            throws PropertyException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getProperty-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void setSchema(Schema schema)
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setSchema-javax.xml.validation.Schema-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.validation::Schema
	
		[result]
		other::void
	}

	[Function]
	Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getSchema--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	void setAdapter(XmlAdapter adapter)
	Name: setAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setAdapter-javax.xml.bind.annotation.adapters.XmlAdapter-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind.annotation.adapters::XmlAdapter
	
		[result]
		other::void
	}

	[Function]
	<A extends XmlAdapter> void setAdapter(Class<A> type,
	                                       A adapter)
	Name: setAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setAdapter-java.lang.Class-A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		A: (A extends XmlAdapter; A; javax.xml.bind.annotation.adapters::XmlAdapter)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::A
		}
		null::A
	
		[result]
		other::void
	}

	[Function]
	<A extends XmlAdapter> A getAdapter(Class<A> type)
	Name: getAdapter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getAdapter-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
		A: (A extends XmlAdapter; A; javax.xml.bind.annotation.adapters::XmlAdapter)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::A
		}
	
		[result]
		null::A
	}

	[Function]
	void setAttachmentUnmarshaller(AttachmentUnmarshaller au)
	Name: setAttachmentUnmarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setAttachmentUnmarshaller-javax.xml.bind.attachment.AttachmentUnmarshaller-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind.attachment::AttachmentUnmarshaller
	
		[result]
		other::void
	}

	[Function]
	AttachmentUnmarshaller getAttachmentUnmarshaller()
	Name: getAttachmentUnmarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getAttachmentUnmarshaller--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind.attachment::AttachmentUnmarshaller
	}

	[Function]
	void setListener(Unmarshaller.Listener listener)
	Name: setListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#setListener-javax.xml.bind.Unmarshaller.Listener-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::Unmarshaller.Listener
	
		[result]
		other::void
	}

	[Function]
	Unmarshaller.Listener getListener()
	Name: getListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.html#getListener--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Unmarshaller.Listener
	}
}

[Classifier]
public abstract static class Unmarshaller.Listener
extends Object
Name: Unmarshaller.Listener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.Listener.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public Listener()
	Name: Listener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.Listener.html#Listener--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Unmarshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Unmarshaller.Listener
	}

	[Function]
	public void beforeUnmarshal(Object target,
	                            Object parent)
	Name: beforeUnmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.Listener.html#beforeUnmarshal-java.lang.Object-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void afterUnmarshal(Object target,
	                           Object parent)
	Name: afterUnmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Unmarshaller.Listener.html#afterUnmarshal-java.lang.Object-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Unmarshaller.Listener
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.lang::Object
	
		[result]
		other::void
	}
}

[Classifier]
public interface UnmarshallerHandler
extends ContentHandler
Name: UnmarshallerHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshallerHandler.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.xml.sax::ContentHandler
}
members {

	[Function]
	Object getResult()
	          throws JAXBException,
	                 IllegalStateException
	Name: getResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshallerHandler.html#getResult--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: UnmarshallerHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public interface ValidationEvent
Name: ValidationEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::ValidationEventImpl
	javax.xml.bind::NotIdentifiableEvent
	javax.xml.bind::ParseConversionEvent
	javax.xml.bind::PrintConversionEvent
}
supertypes {
}
members {

	[Function]
	static final int WARNING
	Name: WARNING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#WARNING
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int ERROR
	Name: ERROR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#ERROR
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int FATAL_ERROR
	Name: FATAL_ERROR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#FATAL_ERROR
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getSeverity()
	Name: getSeverity
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#getSeverity--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String getMessage()
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#getMessage--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Throwable getLinkedException()
	Name: getLinkedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#getLinkedException--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	ValidationEventLocator getLocator()
	Name: getLocator
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEvent.html#getLocator--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::ValidationEventLocator
	}
}

[Classifier]
public interface ValidationEventHandler
Name: ValidationEventHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventHandler.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.util::ValidationEventCollector
	javax.xml.bind.helpers::DefaultValidationEventHandler
}
supertypes {
}
members {

	[Function]
	boolean handleEvent(ValidationEvent event)
	Name: handleEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventHandler.html#handleEvent-javax.xml.bind.ValidationEvent-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::ValidationEvent
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface ValidationEventLocator
Name: ValidationEventLocator
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.helpers::ValidationEventLocatorImpl
}
supertypes {
}
members {

	[Function]
	URL getURL()
	Name: getURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getURL--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URL
	}

	[Function]
	int getOffset()
	Name: getOffset
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getOffset--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getLineNumber()
	Name: getLineNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getLineNumber--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getColumnNumber()
	Name: getColumnNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getColumnNumber--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Object getObject()
	Name: getObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getObject--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	Node getNode()
	Name: getNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationEventLocator.html#getNode--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ValidationEventLocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.w3c.dom::Node
	}
}

[Classifier]
public interface Validator
Name: Validator
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	void setEventHandler(ValidationEventHandler handler)
	              throws JAXBException
	Name: setEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#setEventHandler-javax.xml.bind.ValidationEventHandler-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::ValidationEventHandler
	
		[result]
		other::void
	}

	[Function]
	ValidationEventHandler getEventHandler()
	                                throws JAXBException
	Name: getEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#getEventHandler--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::ValidationEventHandler
	}

	[Function]
	boolean validate(Object subrootObj)
	          throws JAXBException
	Name: validate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#validate-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	boolean validateRoot(Object rootObj)
	              throws JAXBException
	Name: validateRoot
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#validateRoot-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	void setProperty(String name,
	                 Object value)
	          throws PropertyException
	Name: setProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#setProperty-java.lang.String-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	Object getProperty(String name)
	            throws PropertyException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Validator.html#getProperty-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Validator
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public abstract class Binder<XmlNode>
extends Object
Name: Binder
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	XmlNode
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public Binder()
	Name: Binder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#Binder--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Binder
	}

	[Function]
	public abstract Object unmarshal(XmlNode xmlNode)
	                          throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#unmarshal-XmlNode-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::XmlNode
	
		[result]
		java.lang::Object
	}

	[Function]
	public abstract <T> JAXBElement<T> unmarshal(XmlNode xmlNode,
	                                             Class<T> declaredType)
	                                      throws JAXBException
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#unmarshal-XmlNode-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		null::XmlNode
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::JAXBElement {
			null::T
		}
	}

	[Function]
	public abstract void marshal(Object jaxbObject,
	                             XmlNode xmlNode)
	                      throws JAXBException
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#marshal-java.lang.Object-XmlNode-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		null::XmlNode
	
		[result]
		other::void
	}

	[Function]
	public abstract XmlNode getXMLNode(Object jaxbObject)
	Name: getXMLNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#getXMLNode-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		null::XmlNode
	}

	[Function]
	public abstract Object getJAXBNode(XmlNode xmlNode)
	Name: getJAXBNode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#getJAXBNode-XmlNode-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::XmlNode
	
		[result]
		java.lang::Object
	}

	[Function]
	public abstract XmlNode updateXML(Object jaxbObject)
	                           throws JAXBException
	Name: updateXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#updateXML-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		null::XmlNode
	}

	[Function]
	public abstract XmlNode updateXML(Object jaxbObject,
	                                  XmlNode xmlNode)
	                           throws JAXBException
	Name: updateXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#updateXML-java.lang.Object-XmlNode-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		null::XmlNode
	
		[result]
		null::XmlNode
	}

	[Function]
	public abstract Object updateJAXB(XmlNode xmlNode)
	                           throws JAXBException
	Name: updateJAXB
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#updateJAXB-XmlNode-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::XmlNode
	
		[result]
		java.lang::Object
	}

	[Function]
	public abstract void setSchema(Schema schema)
	Name: setSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#setSchema-javax.xml.validation.Schema-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.validation::Schema
	
		[result]
		other::void
	}

	[Function]
	public abstract Schema getSchema()
	Name: getSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#getSchema--
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.validation::Schema
	}

	[Function]
	public abstract void setEventHandler(ValidationEventHandler handler)
	                              throws JAXBException
	Name: setEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#setEventHandler-javax.xml.bind.ValidationEventHandler-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::ValidationEventHandler
	
		[result]
		other::void
	}

	[Function]
	public abstract ValidationEventHandler getEventHandler()
	                                                throws JAXBException
	Name: getEventHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#getEventHandler--
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::ValidationEventHandler
	}

	[Function]
	public abstract void setProperty(String name,
	                                 Object value)
	                          throws PropertyException
	Name: setProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#setProperty-java.lang.String-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public abstract Object getProperty(String name)
	                            throws PropertyException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/Binder.html#getProperty-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Binder
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public final class DatatypeConverter
extends Object
Name: DatatypeConverter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static void setDatatypeConverter(DatatypeConverterInterface converter)
	Name: setDatatypeConverter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#setDatatypeConverter-javax.xml.bind.DatatypeConverterInterface-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::DatatypeConverterInterface
	
		[result]
		other::void
	}

	[Function]
	public static String parseString(String lexicalXSDString)
	Name: parseString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseString-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public static BigInteger parseInteger(String lexicalXSDInteger)
	Name: parseInteger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseInteger-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigInteger
	}

	[Function]
	public static int parseInt(String lexicalXSDInt)
	Name: parseInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseInt-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	public static long parseLong(String lexicalXSDLong)
	Name: parseLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseLong-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	public static short parseShort(String lexicalXSDShort)
	Name: parseShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseShort-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::short
	}

	[Function]
	public static BigDecimal parseDecimal(String lexicalXSDDecimal)
	Name: parseDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseDecimal-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.math::BigDecimal
	}

	[Function]
	public static float parseFloat(String lexicalXSDFloat)
	Name: parseFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseFloat-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::float
	}

	[Function]
	public static double parseDouble(String lexicalXSDDouble)
	Name: parseDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseDouble-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::double
	}

	[Function]
	public static boolean parseBoolean(String lexicalXSDBoolean)
	Name: parseBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseBoolean-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::boolean
	}

	[Function]
	public static byte parseByte(String lexicalXSDByte)
	Name: parseByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseByte-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::byte
	}

	[Function]
	public static QName parseQName(String lexicalXSDQName,
	                               NamespaceContext nsc)
	Name: parseQName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseQName-java.lang.String-javax.xml.namespace.NamespaceContext-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.xml.namespace::NamespaceContext
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	public static Calendar parseDateTime(String lexicalXSDDateTime)
	Name: parseDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseDateTime-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	public static byte[] parseBase64Binary(String lexicalXSDBase64Binary)
	Name: parseBase64Binary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseBase64Binary-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public static byte[] parseHexBinary(String lexicalXSDHexBinary)
	Name: parseHexBinary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseHexBinary-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public static long parseUnsignedInt(String lexicalXSDUnsignedInt)
	Name: parseUnsignedInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseUnsignedInt-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::long
	}

	[Function]
	public static int parseUnsignedShort(String lexicalXSDUnsignedShort)
	Name: parseUnsignedShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseUnsignedShort-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	public static Calendar parseTime(String lexicalXSDTime)
	Name: parseTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseTime-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	public static Calendar parseDate(String lexicalXSDDate)
	Name: parseDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseDate-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util::Calendar
	}

	[Function]
	public static String parseAnySimpleType(String lexicalXSDAnySimpleType)
	Name: parseAnySimpleType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#parseAnySimpleType-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printString(String val)
	Name: printString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printString-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printInteger(BigInteger val)
	Name: printInteger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printInteger-java.math.BigInteger-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigInteger
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printInt(int val)
	Name: printInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printInt-int-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printLong(long val)
	Name: printLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printLong-long-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printShort(short val)
	Name: printShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printShort-short-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::short
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printDecimal(BigDecimal val)
	Name: printDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printDecimal-java.math.BigDecimal-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.math::BigDecimal
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printFloat(float val)
	Name: printFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printFloat-float-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printDouble(double val)
	Name: printDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printDouble-double-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::double
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printBoolean(boolean val)
	Name: printBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printBoolean-boolean-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printByte(byte val)
	Name: printByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printByte-byte-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::byte
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printQName(QName val,
	                                NamespaceContext nsc)
	Name: printQName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printQName-javax.xml.namespace.QName-javax.xml.namespace.NamespaceContext-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.namespace::QName
		javax.xml.namespace::NamespaceContext
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printDateTime(Calendar val)
	Name: printDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printDateTime-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printBase64Binary(byte[] val)
	Name: printBase64Binary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printBase64Binary-byte:A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printHexBinary(byte[] val)
	Name: printHexBinary
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printHexBinary-byte:A-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printUnsignedInt(long val)
	Name: printUnsignedInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printUnsignedInt-long-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printUnsignedShort(int val)
	Name: printUnsignedShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printUnsignedShort-int-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printTime(Calendar val)
	Name: printTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printTime-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printDate(Calendar val)
	Name: printDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printDate-java.util.Calendar-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Calendar
	
		[result]
		java.lang::String
	}

	[Function]
	public static String printAnySimpleType(String val)
	Name: printAnySimpleType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html#printAnySimpleType-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DatatypeConverter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class JAXB
extends Object
Name: JAXB
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static <T> T unmarshal(File xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.io.File-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.io::File
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(URL xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.net.URL-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.net::URL
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(URI xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.net.URI-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.net::URI
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(String xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.lang.String-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(InputStream xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.io.InputStream-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(Reader xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-java.io.Reader-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.io::Reader
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static <T> T unmarshal(Source xml,
	                              Class<T> type)
	Name: unmarshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#unmarshal-javax.xml.transform.Source-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
		java.lang::Class {
			null::T
		}
	
		[result]
		null::T
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           File xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.io.File-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::File
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           URL xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.net.URL-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.net::URL
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           URI xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.net.URI-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.net::URI
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           String xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           OutputStream xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.io.OutputStream-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           Writer xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-java.io.Writer-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.io::Writer
	
		[result]
		other::void
	}

	[Function]
	public static void marshal(Object jaxbObject,
	                           Result xml)
	Name: marshal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXB.html#marshal-java.lang.Object-javax.xml.transform.Result-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXB
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		javax.xml.transform::Result
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class JAXBContext
extends Object
Name: JAXBContext
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final String JAXB_CONTEXT_FACTORY
	Name: JAXB_CONTEXT_FACTORY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#JAXB_CONTEXT_FACTORY
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	protected JAXBContext()
	Name: JAXBContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#JAXBContext--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public static JAXBContext newInstance(String contextPath)
	                               throws JAXBException
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#newInstance-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public static JAXBContext newInstance(String contextPath,
	                                      ClassLoader classLoader)
	                               throws JAXBException
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#newInstance-java.lang.String-java.lang.ClassLoader-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::ClassLoader
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public static JAXBContext newInstance(String contextPath,
	                                      ClassLoader classLoader,
	                                      Map<String,?> properties)
	                               throws JAXBException
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#newInstance-java.lang.String-java.lang.ClassLoader-java.util.Map-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::ClassLoader
		java.util::Map {
			java.lang::String
			?
		}
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public static JAXBContext newInstance(Class... classesToBeBound)
	                               throws JAXBException
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#newInstance-java.lang.Class...-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::Class
		}
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public static JAXBContext newInstance(Class[] classesToBeBound,
	                                      Map<String,?> properties)
	                               throws JAXBException
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#newInstance-java.lang.Class:A-java.util.Map-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::Class
		}
		java.util::Map {
			java.lang::String
			?
		}
	
		[result]
		javax.xml.bind::JAXBContext
	}

	[Function]
	public abstract Unmarshaller createUnmarshaller()
	                                         throws JAXBException
	Name: createUnmarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createUnmarshaller--
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Unmarshaller
	}

	[Function]
	public abstract Marshaller createMarshaller()
	                                     throws JAXBException
	Name: createMarshaller
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createMarshaller--
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Marshaller
	}

	[Function]
	public abstract Validator createValidator()
	                                   throws JAXBException
	Name: createValidator
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createValidator--
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Validator
	}

	[Function]
	public <T> Binder<T> createBinder(Class<T> domType)
	Name: createBinder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createBinder-java.lang.Class-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
	
		[result]
		javax.xml.bind::Binder {
			null::T
		}
	}

	[Function]
	public Binder<Node> createBinder()
	Name: createBinder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createBinder--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::Binder {
			org.w3c.dom::Node
		}
	}

	[Function]
	public JAXBIntrospector createJAXBIntrospector()
	Name: createJAXBIntrospector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createJAXBIntrospector--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::JAXBIntrospector
	}

	[Function]
	public void generateSchema(SchemaOutputResolver outputResolver)
	                    throws IOException
	Name: generateSchema
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#generateSchema-javax.xml.bind.SchemaOutputResolver-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.bind::SchemaOutputResolver
	
		[result]
		other::void
	}
}

[Classifier]
public class JAXBElement<T>
extends Object
implements Serializable
Name: JAXBElement
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	T
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	protected final QName name
	Name: name
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#name
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	protected final Class<T> declaredType
	Name: declaredType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#declaredType
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			null::T
		}
	}

	[Function]
	protected final Class scope
	Name: scope
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#scope
	Containing package: javax.xml.bind
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class
	}

	[Function]
	protected T value
	Name: value
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#value
	Containing package: javax.xml.bind
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::T
	}

	[Function]
	protected boolean nil
	Name: nil
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#nil
	Containing package: javax.xml.bind
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public JAXBElement(QName name,
	                   Class<T> declaredType,
	                   Class scope,
	                   T value)
	Name: JAXBElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#JAXBElement-javax.xml.namespace.QName-java.lang.Class-java.lang.Class-T-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.namespace::QName
		java.lang::Class {
			null::T
		}
		java.lang::Class
		null::T
	
		[result]
		javax.xml.bind::JAXBElement
	}

	[Function]
	public JAXBElement(QName name,
	                   Class<T> declaredType,
	                   T value)
	Name: JAXBElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#JAXBElement-javax.xml.namespace.QName-java.lang.Class-T-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.namespace::QName
		java.lang::Class {
			null::T
		}
		null::T
	
		[result]
		javax.xml.bind::JAXBElement
	}

	[Function]
	public Class<T> getDeclaredType()
	Name: getDeclaredType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#getDeclaredType--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			null::T
		}
	}

	[Function]
	public QName getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#getName--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	public void setValue(T t)
	Name: setValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#setValue-T-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::T
	
		[result]
		other::void
	}

	[Function]
	public T getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#getValue--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::T
	}

	[Function]
	public Class getScope()
	Name: getScope
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#getScope--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class
	}

	[Function]
	public boolean isNil()
	Name: isNil
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#isNil--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void setNil(boolean value)
	Name: setNil
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#setNil-boolean-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isGlobalScope()
	Name: isGlobalScope
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#isGlobalScope--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isTypeSubstituted()
	Name: isTypeSubstituted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.html#isTypeSubstituted--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBElement
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public static final class JAXBElement.GlobalScope
extends Object
Name: JAXBElement.GlobalScope
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.GlobalScope.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=true
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public GlobalScope()
	Name: GlobalScope
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBElement.GlobalScope.html#GlobalScope--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBElement.GlobalScope
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::JAXBElement.GlobalScope
	}
}

[Classifier]
public abstract class JAXBIntrospector
extends Object
Name: JAXBIntrospector
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBIntrospector.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public JAXBIntrospector()
	Name: JAXBIntrospector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBIntrospector.html#JAXBIntrospector--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBIntrospector
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::JAXBIntrospector
	}

	[Function]
	public abstract boolean isElement(Object object)
	Name: isElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBIntrospector.html#isElement-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBIntrospector
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public abstract QName getElementName(Object jaxbElement)
	Name: getElementName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBIntrospector.html#getElementName-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBIntrospector
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	public static Object getValue(Object jaxbElement)
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBIntrospector.html#getValue-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JAXBIntrospector
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public final class JAXBPermission
extends BasicPermission
Name: JAXBPermission
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBPermission.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security::BasicPermission
}
members {

	[Function]
	public JAXBPermission(String name)
	Name: JAXBPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBPermission.html#JAXBPermission-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::JAXBPermission
	}
}

[Classifier]
public abstract class SchemaOutputResolver
extends Object
Name: SchemaOutputResolver
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/SchemaOutputResolver.html
Containing package: javax.xml.bind
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public SchemaOutputResolver()
	Name: SchemaOutputResolver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/SchemaOutputResolver.html#SchemaOutputResolver--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SchemaOutputResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.bind::SchemaOutputResolver
	}

	[Function]
	public abstract Result createOutput(String namespaceUri,
	                                    String suggestedFileName)
	                             throws IOException
	Name: createOutput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/SchemaOutputResolver.html#createOutput-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SchemaOutputResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.transform::Result
	}
}

[Classifier]
public class DataBindingException
extends RuntimeException
Name: DataBindingException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DataBindingException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::RuntimeException
}
members {

	[Function]
	public DataBindingException(String message,
	                            Throwable cause)
	Name: DataBindingException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DataBindingException.html#DataBindingException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DataBindingException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::DataBindingException
	}

	[Function]
	public DataBindingException(Throwable cause)
	Name: DataBindingException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DataBindingException.html#DataBindingException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DataBindingException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::DataBindingException
	}
}

[Classifier]
public class JAXBException
extends Exception
Name: JAXBException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind::ValidationException
	javax.xml.bind::PropertyException
	javax.xml.bind::MarshalException
	javax.xml.bind::UnmarshalException
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public JAXBException(String message)
	Name: JAXBException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#JAXBException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::JAXBException
	}

	[Function]
	public JAXBException(String message,
	                     String errorCode)
	Name: JAXBException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#JAXBException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::JAXBException
	}

	[Function]
	public JAXBException(Throwable exception)
	Name: JAXBException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#JAXBException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::JAXBException
	}

	[Function]
	public JAXBException(String message,
	                     Throwable exception)
	Name: JAXBException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#JAXBException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::JAXBException
	}

	[Function]
	public JAXBException(String message,
	                     String errorCode,
	                     Throwable exception)
	Name: JAXBException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#JAXBException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::JAXBException
	}

	[Function]
	public String getErrorCode()
	Name: getErrorCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#getErrorCode--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Throwable getLinkedException()
	Name: getLinkedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#getLinkedException--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public void setLinkedException(Throwable exception)
	Name: setLinkedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#setLinkedException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#toString--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void printStackTrace(PrintStream s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#printStackTrace-java.io.PrintStream-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintStream
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace()
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#printStackTrace--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace(PrintWriter s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#printStackTrace-java.io.PrintWriter-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintWriter
	
		[result]
		other::void
	}

	[Function]
	public Throwable getCause()
	Name: getCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBException.html#getCause--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JAXBException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}
}

[Classifier]
public class MarshalException
extends JAXBException
Name: MarshalException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.bind::JAXBException
}
members {

	[Function]
	public MarshalException(String message)
	Name: MarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html#MarshalException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::MarshalException
	}

	[Function]
	public MarshalException(String message,
	                        String errorCode)
	Name: MarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html#MarshalException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::MarshalException
	}

	[Function]
	public MarshalException(Throwable exception)
	Name: MarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html#MarshalException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::MarshalException
	}

	[Function]
	public MarshalException(String message,
	                        Throwable exception)
	Name: MarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html#MarshalException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::MarshalException
	}

	[Function]
	public MarshalException(String message,
	                        String errorCode,
	                        Throwable exception)
	Name: MarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/MarshalException.html#MarshalException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::MarshalException
	}
}

[Classifier]
public class PropertyException
extends JAXBException
Name: PropertyException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.bind::JAXBException
}
members {

	[Function]
	public PropertyException(String message)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::PropertyException
	}

	[Function]
	public PropertyException(String message,
	                         String errorCode)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::PropertyException
	}

	[Function]
	public PropertyException(Throwable exception)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::PropertyException
	}

	[Function]
	public PropertyException(String message,
	                         Throwable exception)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::PropertyException
	}

	[Function]
	public PropertyException(String message,
	                         String errorCode,
	                         Throwable exception)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::PropertyException
	}

	[Function]
	public PropertyException(String name,
	                         Object value)
	Name: PropertyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/PropertyException.html#PropertyException-java.lang.String-java.lang.Object-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PropertyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		javax.xml.bind::PropertyException
	}
}

[Classifier]
public class TypeConstraintException
extends RuntimeException
Name: TypeConstraintException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::RuntimeException
}
members {

	[Function]
	public TypeConstraintException(String message)
	Name: TypeConstraintException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#TypeConstraintException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::TypeConstraintException
	}

	[Function]
	public TypeConstraintException(String message,
	                               String errorCode)
	Name: TypeConstraintException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#TypeConstraintException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::TypeConstraintException
	}

	[Function]
	public TypeConstraintException(Throwable exception)
	Name: TypeConstraintException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#TypeConstraintException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::TypeConstraintException
	}

	[Function]
	public TypeConstraintException(String message,
	                               Throwable exception)
	Name: TypeConstraintException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#TypeConstraintException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::TypeConstraintException
	}

	[Function]
	public TypeConstraintException(String message,
	                               String errorCode,
	                               Throwable exception)
	Name: TypeConstraintException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#TypeConstraintException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::TypeConstraintException
	}

	[Function]
	public String getErrorCode()
	Name: getErrorCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#getErrorCode--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Throwable getLinkedException()
	Name: getLinkedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#getLinkedException--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public void setLinkedException(Throwable exception)
	Name: setLinkedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#setLinkedException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#toString--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void printStackTrace(PrintStream s)
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#printStackTrace-java.io.PrintStream-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintStream
	
		[result]
		other::void
	}

	[Function]
	public void printStackTrace()
	Name: printStackTrace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/TypeConstraintException.html#printStackTrace--
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TypeConstraintException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public class UnmarshalException
extends JAXBException
Name: UnmarshalException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.bind::JAXBException
}
members {

	[Function]
	public UnmarshalException(String message)
	Name: UnmarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html#UnmarshalException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: UnmarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::UnmarshalException
	}

	[Function]
	public UnmarshalException(String message,
	                          String errorCode)
	Name: UnmarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html#UnmarshalException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: UnmarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::UnmarshalException
	}

	[Function]
	public UnmarshalException(Throwable exception)
	Name: UnmarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html#UnmarshalException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: UnmarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::UnmarshalException
	}

	[Function]
	public UnmarshalException(String message,
	                          Throwable exception)
	Name: UnmarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html#UnmarshalException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: UnmarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::UnmarshalException
	}

	[Function]
	public UnmarshalException(String message,
	                          String errorCode,
	                          Throwable exception)
	Name: UnmarshalException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/UnmarshalException.html#UnmarshalException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: UnmarshalException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::UnmarshalException
	}
}

[Classifier]
public class ValidationException
extends JAXBException
Name: ValidationException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html
Containing package: javax.xml.bind
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.bind::JAXBException
}
members {

	[Function]
	public ValidationException(String message)
	Name: ValidationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html#ValidationException-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ValidationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.xml.bind::ValidationException
	}

	[Function]
	public ValidationException(String message,
	                           String errorCode)
	Name: ValidationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html#ValidationException-java.lang.String-java.lang.String-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ValidationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.xml.bind::ValidationException
	}

	[Function]
	public ValidationException(Throwable exception)
	Name: ValidationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html#ValidationException-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ValidationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.xml.bind::ValidationException
	}

	[Function]
	public ValidationException(String message,
	                           Throwable exception)
	Name: ValidationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html#ValidationException-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ValidationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::ValidationException
	}

	[Function]
	public ValidationException(String message,
	                           String errorCode,
	                           Throwable exception)
	Name: ValidationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/ValidationException.html#ValidationException-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: javax.xml.bind
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ValidationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.xml.bind::ValidationException
	}
}