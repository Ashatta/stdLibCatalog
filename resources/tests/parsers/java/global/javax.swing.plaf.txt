[Package]
Name: javax.swing.plaf
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/package-summary.html
Containing package: javax.swing
attributes {
}

Subpackages {
	javax.swing.plaf.multi
	javax.swing.plaf.basic
	javax.swing.plaf.metal
	javax.swing.plaf.nimbus
	javax.swing.plaf.synth
}

[Classifier]
public interface UIResource
Name: UIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/UIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf::ActionMapUIResource
	javax.swing.plaf.metal::MetalBorders.InternalFrameBorder
	javax.swing.plaf.metal::MetalBorders.MenuBarBorder
	javax.swing.plaf::BorderUIResource.EtchedBorderUIResource
	javax.swing.plaf.basic::BasicComboBoxRenderer.UIResource
	javax.swing.plaf::BorderUIResource.LineBorderUIResource
	javax.swing.plaf.metal::MetalBorders.ScrollPaneBorder
	javax.swing.plaf::IconUIResource
	javax.swing.plaf::ComponentInputMapUIResource
	javax.swing.plaf.basic::BasicComboBoxEditor.UIResource
	javax.swing.plaf::BorderUIResource.BevelBorderUIResource
	javax.swing.plaf.metal::MetalBorders.PaletteBorder
	javax.swing.plaf.basic::BasicTextUI.BasicCaret
	javax.swing.plaf.metal::MetalBorders.Flush3DBorder
	javax.swing.plaf.basic::BasicBorders.MenuBarBorder
	javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	javax.swing.plaf::InsetsUIResource
	javax.swing.plaf::DimensionUIResource
	javax.swing::DefaultListCellRenderer.UIResource
	javax.swing.plaf.basic::BasicBorders.SplitPaneBorder
	javax.swing.plaf.metal::MetalBorders.ToolBarBorder
	javax.swing.plaf.basic::BasicBorders.ButtonBorder
	javax.swing::JScrollPane.ScrollBar
	javax.swing.plaf::InputMapUIResource
	javax.swing.plaf.metal::MetalComboBoxEditor.UIResource
	javax.swing::ScrollPaneLayout.UIResource
	javax.swing.plaf::BorderUIResource.CompoundBorderUIResource
	javax.swing.plaf.metal::MetalBorders.OptionDialogBorder
	javax.swing.plaf.metal::MetalBorders.MenuItemBorder
	javax.swing.plaf.basic::BasicBorders.MarginBorder
	javax.swing.plaf.basic::BasicBorders.FieldBorder
	javax.swing.plaf::BorderUIResource.EmptyBorderUIResource
	javax.swing.plaf::BorderUIResource.MatteBorderUIResource
	javax.swing.plaf.basic::DefaultMenuLayout
	javax.swing.plaf.basic::BasicTextUI.BasicHighlighter
	javax.swing.plaf::ColorUIResource
	javax.swing.plaf::BorderUIResource
	javax.swing.plaf.metal::MetalCheckBoxIcon
	javax.swing.plaf.metal::MetalBorders.ButtonBorder
	javax.swing.plaf.metal::MetalBorders.PopupMenuBorder
	javax.swing.plaf.metal::MetalIconFactory.PaletteCloseIcon
	javax.swing.table::DefaultTableCellRenderer.UIResource
	javax.swing.plaf::FontUIResource
}
supertypes {
}
members {
}

[Classifier]
public class ActionMapUIResource
extends ActionMap
implements UIResource
Name: ActionMapUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ActionMapUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing::ActionMap
}
members {

	[Function]
	public ActionMapUIResource()
	Name: ActionMapUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ActionMapUIResource.html#ActionMapUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ActionMapUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ActionMapUIResource
	}
}

[Classifier]
public class BorderUIResource
extends Object
implements Border, UIResource, Serializable
Name: BorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.border::Border
	javax.swing.plaf::UIResource
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public BorderUIResource(Border delegate)
	Name: BorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#BorderUIResource-javax.swing.border.Border-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
	
		[result]
		javax.swing.plaf::BorderUIResource
	}

	[Function]
	public static Border getEtchedBorderUIResource()
	Name: getEtchedBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#getEtchedBorderUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.border::Border
	}

	[Function]
	public static Border getLoweredBevelBorderUIResource()
	Name: getLoweredBevelBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#getLoweredBevelBorderUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.border::Border
	}

	[Function]
	public static Border getRaisedBevelBorderUIResource()
	Name: getRaisedBevelBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#getRaisedBevelBorderUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.border::Border
	}

	[Function]
	public static Border getBlackLineBorderUIResource()
	Name: getBlackLineBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#getBlackLineBorderUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.border::Border
	}

	[Function]
	public void paintBorder(Component c,
	                        Graphics g,
	                        int x,
	                        int y,
	                        int width,
	                        int height)
	Name: paintBorder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#paintBorder-java.awt.Component-java.awt.Graphics-int-int-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Component
		java.awt::Graphics
		other::int
		other::int
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public Insets getBorderInsets(Component c)
	Name: getBorderInsets
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#getBorderInsets-java.awt.Component-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Component
	
		[result]
		java.awt::Insets
	}

	[Function]
	public boolean isBorderOpaque()
	Name: isBorderOpaque
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.html#isBorderOpaque--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: BorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public static class BorderUIResource.BevelBorderUIResource
extends BevelBorder
implements UIResource
Name: BorderUIResource.BevelBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.BevelBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::BevelBorder
}
members {

	[Function]
	public BevelBorderUIResource(int bevelType)
	Name: BevelBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.BevelBorderUIResource.html#BevelBorderUIResource-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.BevelBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.swing.plaf::BorderUIResource.BevelBorderUIResource
	}

	[Function]
	public BevelBorderUIResource(int bevelType,
	                             Color highlight,
	                             Color shadow)
	Name: BevelBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.BevelBorderUIResource.html#BevelBorderUIResource-int-java.awt.Color-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.BevelBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.awt::Color
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.BevelBorderUIResource
	}

	[Function]
	@ConstructorProperties(value={"bevelType","highlightOuterColor","highlightInnerColor","shadowOuterColor","shadowInnerColor"})
	public BevelBorderUIResource(int bevelType,
	                                                                                                                                                           Color highlightOuter,
	                                                                                                                                                           Color highlightInner,
	                                                                                                                                                           Color shadowOuter,
	                                                                                                                                                           Color shadowInner)
	Name: BevelBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.BevelBorderUIResource.html#BevelBorderUIResource-int-java.awt.Color-java.awt.Color-java.awt.Color-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.BevelBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.awt::Color
		java.awt::Color
		java.awt::Color
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.BevelBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.CompoundBorderUIResource
extends CompoundBorder
implements UIResource
Name: BorderUIResource.CompoundBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.CompoundBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::CompoundBorder
}
members {

	[Function]
	@ConstructorProperties(value={"outsideBorder","insideBorder"})
	public CompoundBorderUIResource(Border outsideBorder,
	                                                                                               Border insideBorder)
	Name: CompoundBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.CompoundBorderUIResource.html#CompoundBorderUIResource-javax.swing.border.Border-javax.swing.border.Border-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.CompoundBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
		javax.swing.border::Border
	
		[result]
		javax.swing.plaf::BorderUIResource.CompoundBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.EmptyBorderUIResource
extends EmptyBorder
implements UIResource
Name: BorderUIResource.EmptyBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EmptyBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::EmptyBorder
}
members {

	[Function]
	public EmptyBorderUIResource(int top,
	                             int left,
	                             int bottom,
	                             int right)
	Name: EmptyBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EmptyBorderUIResource.html#EmptyBorderUIResource-int-int-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EmptyBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
	
		[result]
		javax.swing.plaf::BorderUIResource.EmptyBorderUIResource
	}

	[Function]
	@ConstructorProperties(value="borderInsets")
	public EmptyBorderUIResource(Insets insets)
	Name: EmptyBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EmptyBorderUIResource.html#EmptyBorderUIResource-java.awt.Insets-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EmptyBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Insets
	
		[result]
		javax.swing.plaf::BorderUIResource.EmptyBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.EtchedBorderUIResource
extends EtchedBorder
implements UIResource
Name: BorderUIResource.EtchedBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EtchedBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::EtchedBorder
}
members {

	[Function]
	public EtchedBorderUIResource()
	Name: EtchedBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EtchedBorderUIResource.html#EtchedBorderUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EtchedBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::BorderUIResource.EtchedBorderUIResource
	}

	[Function]
	public EtchedBorderUIResource(int etchType)
	Name: EtchedBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EtchedBorderUIResource.html#EtchedBorderUIResource-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EtchedBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.swing.plaf::BorderUIResource.EtchedBorderUIResource
	}

	[Function]
	public EtchedBorderUIResource(Color highlight,
	                              Color shadow)
	Name: EtchedBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EtchedBorderUIResource.html#EtchedBorderUIResource-java.awt.Color-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EtchedBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Color
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.EtchedBorderUIResource
	}

	[Function]
	@ConstructorProperties(value={"etchType","highlightColor","shadowColor"})
	public EtchedBorderUIResource(int etchType,
	                                                                                                        Color highlight,
	                                                                                                        Color shadow)
	Name: EtchedBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.EtchedBorderUIResource.html#EtchedBorderUIResource-int-java.awt.Color-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.EtchedBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.awt::Color
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.EtchedBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.LineBorderUIResource
extends LineBorder
implements UIResource
Name: BorderUIResource.LineBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.LineBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::LineBorder
}
members {

	[Function]
	public LineBorderUIResource(Color color)
	Name: LineBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.LineBorderUIResource.html#LineBorderUIResource-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.LineBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.LineBorderUIResource
	}

	[Function]
	@ConstructorProperties(value={"lineColor","thickness"})
	public LineBorderUIResource(Color color,
	                                                                                    int thickness)
	Name: LineBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.LineBorderUIResource.html#LineBorderUIResource-java.awt.Color-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.LineBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Color
		other::int
	
		[result]
		javax.swing.plaf::BorderUIResource.LineBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.MatteBorderUIResource
extends MatteBorder
implements UIResource
Name: BorderUIResource.MatteBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.MatteBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::MatteBorder
}
members {

	[Function]
	public MatteBorderUIResource(int top,
	                             int left,
	                             int bottom,
	                             int right,
	                             Color color)
	Name: MatteBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.MatteBorderUIResource.html#MatteBorderUIResource-int-int-int-int-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.MatteBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.MatteBorderUIResource
	}

	[Function]
	public MatteBorderUIResource(int top,
	                             int left,
	                             int bottom,
	                             int right,
	                             Icon tileIcon)
	Name: MatteBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.MatteBorderUIResource.html#MatteBorderUIResource-int-int-int-int-javax.swing.Icon-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.MatteBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
		javax.swing::Icon
	
		[result]
		javax.swing.plaf::BorderUIResource.MatteBorderUIResource
	}

	[Function]
	public MatteBorderUIResource(Icon tileIcon)
	Name: MatteBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.MatteBorderUIResource.html#MatteBorderUIResource-javax.swing.Icon-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.MatteBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::Icon
	
		[result]
		javax.swing.plaf::BorderUIResource.MatteBorderUIResource
	}
}

[Classifier]
public static class BorderUIResource.TitledBorderUIResource
extends TitledBorder
implements UIResource
Name: BorderUIResource.TitledBorderUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing.border::TitledBorder
}
members {

	[Function]
	public TitledBorderUIResource(String title)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-java.lang.String-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}

	[Function]
	public TitledBorderUIResource(Border border)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-javax.swing.border.Border-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}

	[Function]
	public TitledBorderUIResource(Border border,
	                              String title)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-javax.swing.border.Border-java.lang.String-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
		java.lang::String
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}

	[Function]
	public TitledBorderUIResource(Border border,
	                              String title,
	                              int titleJustification,
	                              int titlePosition)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-javax.swing.border.Border-java.lang.String-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
		java.lang::String
		other::int
		other::int
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}

	[Function]
	public TitledBorderUIResource(Border border,
	                              String title,
	                              int titleJustification,
	                              int titlePosition,
	                              Font titleFont)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-javax.swing.border.Border-java.lang.String-int-int-java.awt.Font-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
		java.lang::String
		other::int
		other::int
		java.awt::Font
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}

	[Function]
	@ConstructorProperties(value={"border","title","titleJustification","titlePosition","titleFont","titleColor"})
	public TitledBorderUIResource(Border border,
	                                                                                                                                             String title,
	                                                                                                                                             int titleJustification,
	                                                                                                                                             int titlePosition,
	                                                                                                                                             Font titleFont,
	                                                                                                                                             Color titleColor)
	Name: TitledBorderUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/BorderUIResource.TitledBorderUIResource.html#TitledBorderUIResource-javax.swing.border.Border-java.lang.String-int-int-java.awt.Font-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: BorderUIResource.TitledBorderUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.border::Border
		java.lang::String
		other::int
		other::int
		java.awt::Font
		java.awt::Color
	
		[result]
		javax.swing.plaf::BorderUIResource.TitledBorderUIResource
	}
}

[Classifier]
public abstract class ButtonUI
extends ComponentUI
Name: ButtonUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ButtonUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf::MenuItemUI
	javax.swing.plaf.basic::BasicButtonUI
	javax.swing.plaf.multi::MultiButtonUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ButtonUI()
	Name: ButtonUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ButtonUI.html#ButtonUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ButtonUI
	}
}

[Classifier]
public abstract class ColorChooserUI
extends ComponentUI
Name: ColorChooserUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorChooserUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicColorChooserUI
	javax.swing.plaf.multi::MultiColorChooserUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ColorChooserUI()
	Name: ColorChooserUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorChooserUI.html#ColorChooserUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ColorChooserUI
	}
}

[Classifier]
public class ColorUIResource
extends Color
implements UIResource
Name: ColorUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	java.awt::Color
}
members {

	[Function]
	@ConstructorProperties(value={"red","green","blue"})
	public ColorUIResource(int r,
	                                                                            int g,
	                                                                            int b)
	Name: ColorUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorUIResource.html#ColorUIResource-int-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ColorUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		javax.swing.plaf::ColorUIResource
	}

	[Function]
	public ColorUIResource(int rgb)
	Name: ColorUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorUIResource.html#ColorUIResource-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ColorUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.swing.plaf::ColorUIResource
	}

	[Function]
	public ColorUIResource(float r,
	                       float g,
	                       float b)
	Name: ColorUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorUIResource.html#ColorUIResource-float-float-float-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ColorUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
		other::float
		other::float
	
		[result]
		javax.swing.plaf::ColorUIResource
	}

	[Function]
	public ColorUIResource(Color c)
	Name: ColorUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ColorUIResource.html#ColorUIResource-java.awt.Color-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ColorUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Color
	
		[result]
		javax.swing.plaf::ColorUIResource
	}
}

[Classifier]
public abstract class ComboBoxUI
extends ComponentUI
Name: ComboBoxUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComboBoxUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiComboBoxUI
	javax.swing.plaf.basic::BasicComboBoxUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ComboBoxUI()
	Name: ComboBoxUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComboBoxUI.html#ComboBoxUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ComboBoxUI
	}

	[Function]
	public abstract void setPopupVisible(JComboBox c,
	                                     boolean v)
	Name: setPopupVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComboBoxUI.html#setPopupVisible-javax.swing.JComboBox-boolean-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean isPopupVisible(JComboBox c)
	Name: isPopupVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComboBoxUI.html#isPopupVisible-javax.swing.JComboBox-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
	
		[result]
		other::boolean
	}

	[Function]
	public abstract boolean isFocusTraversable(JComboBox c)
	Name: isFocusTraversable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComboBoxUI.html#isFocusTraversable-javax.swing.JComboBox-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
	
		[result]
		other::boolean
	}
}

[Classifier]
public class ComponentInputMapUIResource
extends ComponentInputMap
implements UIResource
Name: ComponentInputMapUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentInputMapUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing::ComponentInputMap
}
members {

	[Function]
	public ComponentInputMapUIResource(JComponent component)
	Name: ComponentInputMapUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentInputMapUIResource.html#ComponentInputMapUIResource-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ComponentInputMapUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentInputMapUIResource
	}
}

[Classifier]
public abstract class ComponentUI
extends Object
Name: ComponentUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf::SliderUI
	javax.swing.plaf::ToolTipUI
	javax.swing.plaf::TextUI
	javax.swing.plaf::ScrollBarUI
	javax.swing.plaf::ScrollPaneUI
	javax.swing.plaf::SpinnerUI
	javax.swing.plaf::MenuBarUI
	javax.swing.plaf::TableHeaderUI
	javax.swing.plaf::PanelUI
	javax.swing.plaf::OptionPaneUI
	javax.swing.plaf::InternalFrameUI
	javax.swing.plaf::ButtonUI
	javax.swing.plaf::TabbedPaneUI
	javax.swing.plaf::ColorChooserUI
	javax.swing.plaf::ProgressBarUI
	javax.swing.plaf::DesktopIconUI
	javax.swing.plaf::SplitPaneUI
	javax.swing.plaf::ComboBoxUI
	javax.swing.plaf::LabelUI
	javax.swing.plaf::DesktopPaneUI
	javax.swing.plaf::ToolBarUI
	javax.swing.plaf::PopupMenuUI
	javax.swing.plaf::ListUI
	javax.swing.plaf::TreeUI
	javax.swing.plaf::FileChooserUI
	javax.swing.plaf::TableUI
	javax.swing.plaf::ViewportUI
	javax.swing.plaf::SeparatorUI
	javax.swing.plaf::RootPaneUI
	javax.swing.plaf::LayerUI
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public ComponentUI()
	Name: ComponentUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#ComponentUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent c)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent c)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics g,
	                  JComponent c)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void update(Graphics g,
	                   JComponent c)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent c)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent c)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent c)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public boolean contains(JComponent c,
	                        int x,
	                        int y)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public static ComponentUI createUI(JComponent c)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public int getBaseline(JComponent c,
	                       int width,
	                       int height)
	Name: getBaseline
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getBaseline-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)
	Name: getBaselineResizeBehavior
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getBaselineResizeBehavior-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Component.BaselineResizeBehavior
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent c)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent c,
	                                     int i)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ComponentUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ComponentUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public abstract class DesktopIconUI
extends ComponentUI
Name: DesktopIconUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DesktopIconUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiDesktopIconUI
	javax.swing.plaf.basic::BasicDesktopIconUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public DesktopIconUI()
	Name: DesktopIconUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DesktopIconUI.html#DesktopIconUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::DesktopIconUI
	}
}

[Classifier]
public abstract class DesktopPaneUI
extends ComponentUI
Name: DesktopPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DesktopPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicDesktopPaneUI
	javax.swing.plaf.multi::MultiDesktopPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public DesktopPaneUI()
	Name: DesktopPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DesktopPaneUI.html#DesktopPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::DesktopPaneUI
	}
}

[Classifier]
public class DimensionUIResource
extends Dimension
implements UIResource
Name: DimensionUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DimensionUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	java.awt::Dimension
}
members {

	[Function]
	public DimensionUIResource(int width,
	                           int height)
	Name: DimensionUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/DimensionUIResource.html#DimensionUIResource-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DimensionUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		javax.swing.plaf::DimensionUIResource
	}
}

[Classifier]
public abstract class FileChooserUI
extends ComponentUI
Name: FileChooserUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicFileChooserUI
	javax.swing.plaf.multi::MultiFileChooserUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public FileChooserUI()
	Name: FileChooserUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#FileChooserUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::FileChooserUI
	}

	[Function]
	public abstract FileFilter getAcceptAllFileFilter(JFileChooser fc)
	Name: getAcceptAllFileFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#getAcceptAllFileFilter-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		javax.swing.filechooser::FileFilter
	}

	[Function]
	public abstract FileView getFileView(JFileChooser fc)
	Name: getFileView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#getFileView-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		javax.swing.filechooser::FileView
	}

	[Function]
	public abstract String getApproveButtonText(JFileChooser fc)
	Name: getApproveButtonText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#getApproveButtonText-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract String getDialogTitle(JFileChooser fc)
	Name: getDialogTitle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#getDialogTitle-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract void rescanCurrentDirectory(JFileChooser fc)
	Name: rescanCurrentDirectory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#rescanCurrentDirectory-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		other::void
	}

	[Function]
	public abstract void ensureFileIsVisible(JFileChooser fc,
	                                         File f)
	Name: ensureFileIsVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#ensureFileIsVisible-javax.swing.JFileChooser-java.io.File-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
		java.io::File
	
		[result]
		other::void
	}

	[Function]
	public JButton getDefaultButton(JFileChooser fc)
	Name: getDefaultButton
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FileChooserUI.html#getDefaultButton-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		javax.swing::JButton
	}
}

[Classifier]
public class FontUIResource
extends Font
implements UIResource
Name: FontUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FontUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	java.awt::Font
}
members {

	[Function]
	public FontUIResource(String name,
	                      int style,
	                      int size)
	Name: FontUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FontUIResource.html#FontUIResource-java.lang.String-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FontUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
	
		[result]
		javax.swing.plaf::FontUIResource
	}

	[Function]
	public FontUIResource(Font font)
	Name: FontUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/FontUIResource.html#FontUIResource-java.awt.Font-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FontUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Font
	
		[result]
		javax.swing.plaf::FontUIResource
	}
}

[Classifier]
public class IconUIResource
extends Object
implements Icon, UIResource, Serializable
Name: IconUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/IconUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing::Icon
	javax.swing.plaf::UIResource
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public IconUIResource(Icon delegate)
	Name: IconUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/IconUIResource.html#IconUIResource-javax.swing.Icon-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: IconUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::Icon
	
		[result]
		javax.swing.plaf::IconUIResource
	}

	[Function]
	public void paintIcon(Component c,
	                      Graphics g,
	                      int x,
	                      int y)
	Name: paintIcon
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/IconUIResource.html#paintIcon-java.awt.Component-java.awt.Graphics-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IconUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Component
		java.awt::Graphics
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public int getIconWidth()
	Name: getIconWidth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/IconUIResource.html#getIconWidth--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IconUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getIconHeight()
	Name: getIconHeight
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/IconUIResource.html#getIconHeight--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IconUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class InputMapUIResource
extends InputMap
implements UIResource
Name: InputMapUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InputMapUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	javax.swing::InputMap
}
members {

	[Function]
	public InputMapUIResource()
	Name: InputMapUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InputMapUIResource.html#InputMapUIResource--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InputMapUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::InputMapUIResource
	}
}

[Classifier]
public class InsetsUIResource
extends Insets
implements UIResource
Name: InsetsUIResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InsetsUIResource.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::UIResource
	java.awt::Insets
}
members {

	[Function]
	public InsetsUIResource(int top,
	                        int left,
	                        int bottom,
	                        int right)
	Name: InsetsUIResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InsetsUIResource.html#InsetsUIResource-int-int-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InsetsUIResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
	
		[result]
		javax.swing.plaf::InsetsUIResource
	}
}

[Classifier]
public abstract class InternalFrameUI
extends ComponentUI
Name: InternalFrameUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InternalFrameUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiInternalFrameUI
	javax.swing.plaf.basic::BasicInternalFrameUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public InternalFrameUI()
	Name: InternalFrameUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/InternalFrameUI.html#InternalFrameUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::InternalFrameUI
	}
}

[Classifier]
public abstract class LabelUI
extends ComponentUI
Name: LabelUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LabelUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicLabelUI
	javax.swing.plaf.multi::MultiLabelUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public LabelUI()
	Name: LabelUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LabelUI.html#LabelUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::LabelUI
	}
}

[Classifier]
public class LayerUI<V extends Component>
extends ComponentUI
implements Serializable
Name: LayerUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	V: (V extends Component; V; java.awt::Component)
}
derived {
}
supertypes {
	java.io::Serializable
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public LayerUI()
	Name: LayerUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#LayerUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::LayerUI
	}

	[Function]
	public void paint(Graphics g,
	                  JComponent c)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void eventDispatched(AWTEvent e,
	                            JLayer<? extends V> l)
	Name: eventDispatched
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#eventDispatched-java.awt.AWTEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::AWTEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processComponentEvent(ComponentEvent e,
	                                     JLayer<? extends V> l)
	Name: processComponentEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processComponentEvent-java.awt.event.ComponentEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::ComponentEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processFocusEvent(FocusEvent e,
	                                 JLayer<? extends V> l)
	Name: processFocusEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processFocusEvent-java.awt.event.FocusEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::FocusEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processKeyEvent(KeyEvent e,
	                               JLayer<? extends V> l)
	Name: processKeyEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processKeyEvent-java.awt.event.KeyEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::KeyEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processMouseEvent(MouseEvent e,
	                                 JLayer<? extends V> l)
	Name: processMouseEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processMouseEvent-java.awt.event.MouseEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::MouseEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processMouseMotionEvent(MouseEvent e,
	                                       JLayer<? extends V> l)
	Name: processMouseMotionEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processMouseMotionEvent-java.awt.event.MouseEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::MouseEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processMouseWheelEvent(MouseWheelEvent e,
	                                      JLayer<? extends V> l)
	Name: processMouseWheelEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processMouseWheelEvent-java.awt.event.MouseWheelEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::MouseWheelEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processInputMethodEvent(InputMethodEvent e,
	                                       JLayer<? extends V> l)
	Name: processInputMethodEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processInputMethodEvent-java.awt.event.InputMethodEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::InputMethodEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processHierarchyEvent(HierarchyEvent e,
	                                     JLayer<? extends V> l)
	Name: processHierarchyEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processHierarchyEvent-java.awt.event.HierarchyEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::HierarchyEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	protected void processHierarchyBoundsEvent(HierarchyEvent e,
	                                           JLayer<? extends V> l)
	Name: processHierarchyBoundsEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#processHierarchyBoundsEvent-java.awt.event.HierarchyEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::HierarchyEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	public void updateUI(JLayer<? extends V> l)
	Name: updateUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#updateUI-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	public void installUI(JComponent c)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent c)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void addPropertyChangeListener(PropertyChangeListener listener)
	Name: addPropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#addPropertyChangeListener-java.beans.PropertyChangeListener-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	public void removePropertyChangeListener(PropertyChangeListener listener)
	Name: removePropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#removePropertyChangeListener-java.beans.PropertyChangeListener-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	public PropertyChangeListener[] getPropertyChangeListeners()
	Name: getPropertyChangeListeners
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.beans::PropertyChangeListener
		}
	}

	[Function]
	public void addPropertyChangeListener(String propertyName,
	                                      PropertyChangeListener listener)
	Name: addPropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#addPropertyChangeListener-java.lang.String-java.beans.PropertyChangeListener-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	public void removePropertyChangeListener(String propertyName,
	                                         PropertyChangeListener listener)
	Name: removePropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#removePropertyChangeListener-java.lang.String-java.beans.PropertyChangeListener-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	public PropertyChangeListener[] getPropertyChangeListeners(String propertyName)
	Name: getPropertyChangeListeners
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners-java.lang.String-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			java.beans::PropertyChangeListener
		}
	}

	[Function]
	protected void firePropertyChange(String propertyName,
	                                  Object oldValue,
	                                  Object newValue)
	Name: firePropertyChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void applyPropertyChange(PropertyChangeEvent evt,
	                                JLayer<? extends V> l)
	Name: applyPropertyChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#applyPropertyChange-java.beans.PropertyChangeEvent-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.beans::PropertyChangeEvent
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	public int getBaseline(JComponent c,
	                       int width,
	                       int height)
	Name: getBaseline
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getBaseline-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public Component.BaselineResizeBehavior getBaselineResizeBehavior(JComponent c)
	Name: getBaselineResizeBehavior
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getBaselineResizeBehavior-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Component.BaselineResizeBehavior
	}

	[Function]
	public void doLayout(JLayer<? extends V> l)
	Name: doLayout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#doLayout-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent c)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent c)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent c)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public void paintImmediately(int x,
	                             int y,
	                             int width,
	                             int height,
	                             JLayer<? extends V> l)
	Name: paintImmediately
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/LayerUI.html#paintImmediately-int-int-int-int-javax.swing.JLayer-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LayerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
		javax.swing::JLayer {
			? {
				extends null::V
			}
		}
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class ListUI
extends ComponentUI
Name: ListUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ListUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiListUI
	javax.swing.plaf.basic::BasicListUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ListUI()
	Name: ListUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ListUI.html#ListUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ListUI
	}

	[Function]
	public abstract int locationToIndex(JList list,
	                                    Point location)
	Name: locationToIndex
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ListUI.html#locationToIndex-javax.swing.JList-java.awt.Point-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		java.awt::Point
	
		[result]
		other::int
	}

	[Function]
	public abstract Point indexToLocation(JList list,
	                                      int index)
	Name: indexToLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ListUI.html#indexToLocation-javax.swing.JList-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		other::int
	
		[result]
		java.awt::Point
	}

	[Function]
	public abstract Rectangle getCellBounds(JList list,
	                                        int index1,
	                                        int index2)
	Name: getCellBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ListUI.html#getCellBounds-javax.swing.JList-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		other::int
		other::int
	
		[result]
		java.awt::Rectangle
	}
}

[Classifier]
public abstract class MenuBarUI
extends ComponentUI
Name: MenuBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/MenuBarUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiMenuBarUI
	javax.swing.plaf.basic::BasicMenuBarUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public MenuBarUI()
	Name: MenuBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/MenuBarUI.html#MenuBarUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::MenuBarUI
	}
}

[Classifier]
public abstract class MenuItemUI
extends ButtonUI
Name: MenuItemUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/MenuItemUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiMenuItemUI
	javax.swing.plaf.basic::BasicMenuItemUI
}
supertypes {
	javax.swing.plaf::ButtonUI
}
members {

	[Function]
	public MenuItemUI()
	Name: MenuItemUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/MenuItemUI.html#MenuItemUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::MenuItemUI
	}
}

[Classifier]
public abstract class OptionPaneUI
extends ComponentUI
Name: OptionPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/OptionPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiOptionPaneUI
	javax.swing.plaf.basic::BasicOptionPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public OptionPaneUI()
	Name: OptionPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/OptionPaneUI.html#OptionPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: OptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::OptionPaneUI
	}

	[Function]
	public abstract void selectInitialValue(JOptionPane op)
	Name: selectInitialValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/OptionPaneUI.html#selectInitialValue-javax.swing.JOptionPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JOptionPane
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean containsCustomComponents(JOptionPane op)
	Name: containsCustomComponents
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/OptionPaneUI.html#containsCustomComponents-javax.swing.JOptionPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JOptionPane
	
		[result]
		other::boolean
	}
}

[Classifier]
public abstract class PanelUI
extends ComponentUI
Name: PanelUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PanelUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiPanelUI
	javax.swing.plaf.basic::BasicPanelUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public PanelUI()
	Name: PanelUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PanelUI.html#PanelUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::PanelUI
	}
}

[Classifier]
public abstract class PopupMenuUI
extends ComponentUI
Name: PopupMenuUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PopupMenuUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicPopupMenuUI
	javax.swing.plaf.multi::MultiPopupMenuUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public PopupMenuUI()
	Name: PopupMenuUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PopupMenuUI.html#PopupMenuUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: PopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::PopupMenuUI
	}

	[Function]
	public boolean isPopupTrigger(MouseEvent e)
	Name: isPopupTrigger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PopupMenuUI.html#isPopupTrigger-java.awt.event.MouseEvent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::MouseEvent
	
		[result]
		other::boolean
	}

	[Function]
	public Popup getPopup(JPopupMenu popup,
	                      int x,
	                      int y)
	Name: getPopup
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/PopupMenuUI.html#getPopup-javax.swing.JPopupMenu-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JPopupMenu
		other::int
		other::int
	
		[result]
		javax.swing::Popup
	}
}

[Classifier]
public abstract class ProgressBarUI
extends ComponentUI
Name: ProgressBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ProgressBarUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicProgressBarUI
	javax.swing.plaf.multi::MultiProgressBarUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ProgressBarUI()
	Name: ProgressBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ProgressBarUI.html#ProgressBarUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ProgressBarUI
	}
}

[Classifier]
public abstract class RootPaneUI
extends ComponentUI
Name: RootPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/RootPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicRootPaneUI
	javax.swing.plaf.multi::MultiRootPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public RootPaneUI()
	Name: RootPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/RootPaneUI.html#RootPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::RootPaneUI
	}
}

[Classifier]
public abstract class ScrollBarUI
extends ComponentUI
Name: ScrollBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ScrollBarUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicScrollBarUI
	javax.swing.plaf.multi::MultiScrollBarUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ScrollBarUI()
	Name: ScrollBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ScrollBarUI.html#ScrollBarUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ScrollBarUI
	}
}

[Classifier]
public abstract class ScrollPaneUI
extends ComponentUI
Name: ScrollPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ScrollPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicScrollPaneUI
	javax.swing.plaf.multi::MultiScrollPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ScrollPaneUI()
	Name: ScrollPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ScrollPaneUI.html#ScrollPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ScrollPaneUI
	}
}

[Classifier]
public abstract class SeparatorUI
extends ComponentUI
Name: SeparatorUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SeparatorUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicSeparatorUI
	javax.swing.plaf.multi::MultiSeparatorUI
	javax.swing.plaf.synth::SynthSeparatorUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public SeparatorUI()
	Name: SeparatorUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SeparatorUI.html#SeparatorUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::SeparatorUI
	}
}

[Classifier]
public abstract class SliderUI
extends ComponentUI
Name: SliderUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SliderUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicSliderUI
	javax.swing.plaf.multi::MultiSliderUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public SliderUI()
	Name: SliderUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SliderUI.html#SliderUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::SliderUI
	}
}

[Classifier]
public abstract class SpinnerUI
extends ComponentUI
Name: SpinnerUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SpinnerUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiSpinnerUI
	javax.swing.plaf.basic::BasicSpinnerUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public SpinnerUI()
	Name: SpinnerUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SpinnerUI.html#SpinnerUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::SpinnerUI
	}
}

[Classifier]
public abstract class SplitPaneUI
extends ComponentUI
Name: SplitPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicSplitPaneUI
	javax.swing.plaf.multi::MultiSplitPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public SplitPaneUI()
	Name: SplitPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#SplitPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::SplitPaneUI
	}

	[Function]
	public abstract void resetToPreferredSizes(JSplitPane jc)
	Name: resetToPreferredSizes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#resetToPreferredSizes-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::void
	}

	[Function]
	public abstract void setDividerLocation(JSplitPane jc,
	                                        int location)
	Name: setDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#setDividerLocation-javax.swing.JSplitPane-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
		other::int
	
		[result]
		other::void
	}

	[Function]
	public abstract int getDividerLocation(JSplitPane jc)
	Name: getDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#getDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public abstract int getMinimumDividerLocation(JSplitPane jc)
	Name: getMinimumDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#getMinimumDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public abstract int getMaximumDividerLocation(JSplitPane jc)
	Name: getMaximumDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#getMaximumDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public abstract void finishedPaintingChildren(JSplitPane jc,
	                                              Graphics g)
	Name: finishedPaintingChildren
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/SplitPaneUI.html#finishedPaintingChildren-javax.swing.JSplitPane-java.awt.Graphics-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
		java.awt::Graphics
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class TabbedPaneUI
extends ComponentUI
Name: TabbedPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TabbedPaneUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicTabbedPaneUI
	javax.swing.plaf.multi::MultiTabbedPaneUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public TabbedPaneUI()
	Name: TabbedPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TabbedPaneUI.html#TabbedPaneUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::TabbedPaneUI
	}

	[Function]
	public abstract int tabForCoordinate(JTabbedPane pane,
	                                     int x,
	                                     int y)
	Name: tabForCoordinate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TabbedPaneUI.html#tabForCoordinate-javax.swing.JTabbedPane-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public abstract Rectangle getTabBounds(JTabbedPane pane,
	                                       int index)
	Name: getTabBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TabbedPaneUI.html#getTabBounds-javax.swing.JTabbedPane-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
		other::int
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public abstract int getTabRunCount(JTabbedPane pane)
	Name: getTabRunCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TabbedPaneUI.html#getTabRunCount-javax.swing.JTabbedPane-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
	
		[result]
		other::int
	}
}

[Classifier]
public abstract class TableHeaderUI
extends ComponentUI
Name: TableHeaderUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TableHeaderUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiTableHeaderUI
	javax.swing.plaf.basic::BasicTableHeaderUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public TableHeaderUI()
	Name: TableHeaderUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TableHeaderUI.html#TableHeaderUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::TableHeaderUI
	}
}

[Classifier]
public abstract class TableUI
extends ComponentUI
Name: TableUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TableUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicTableUI
	javax.swing.plaf.multi::MultiTableUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public TableUI()
	Name: TableUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TableUI.html#TableUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::TableUI
	}
}

[Classifier]
public abstract class TextUI
extends ComponentUI
Name: TextUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicTextUI
	javax.swing.plaf.multi::MultiTextUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public TextUI()
	Name: TextUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#TextUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::TextUI
	}

	[Function]
	public abstract Rectangle modelToView(JTextComponent t,
	                                      int pos)
	                               throws BadLocationException
	Name: modelToView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#modelToView-javax.swing.text.JTextComponent-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public abstract Rectangle modelToView(JTextComponent t,
	                                      int pos,
	                                      Position.Bias bias)
	                               throws BadLocationException
	Name: modelToView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#modelToView-javax.swing.text.JTextComponent-int-javax.swing.text.Position.Bias-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		javax.swing.text::Position.Bias
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public abstract int viewToModel(JTextComponent t,
	                                Point pt)
	Name: viewToModel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#viewToModel-javax.swing.text.JTextComponent-java.awt.Point-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
	
		[result]
		other::int
	}

	[Function]
	public abstract int viewToModel(JTextComponent t,
	                                Point pt,
	                                Position.Bias[] biasReturn)
	Name: viewToModel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#viewToModel-javax.swing.text.JTextComponent-java.awt.Point-javax.swing.text.Position.Bias:A-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
		other::[] {
			javax.swing.text::Position.Bias
		}
	
		[result]
		other::int
	}

	[Function]
	public abstract int getNextVisualPositionFrom(JTextComponent t,
	                                              int pos,
	                                              Position.Bias b,
	                                              int direction,
	                                              Position.Bias[] biasRet)
	                                       throws BadLocationException
	Name: getNextVisualPositionFrom
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#getNextVisualPositionFrom-javax.swing.text.JTextComponent-int-javax.swing.text.Position.Bias-int-javax.swing.text.Position.Bias:A-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		javax.swing.text::Position.Bias
		other::int
		other::[] {
			javax.swing.text::Position.Bias
		}
	
		[result]
		other::int
	}

	[Function]
	public abstract void damageRange(JTextComponent t,
	                                 int p0,
	                                 int p1)
	Name: damageRange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#damageRange-javax.swing.text.JTextComponent-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public abstract void damageRange(JTextComponent t,
	                                 int p0,
	                                 int p1,
	                                 Position.Bias firstBias,
	                                 Position.Bias secondBias)
	Name: damageRange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#damageRange-javax.swing.text.JTextComponent-int-int-javax.swing.text.Position.Bias-javax.swing.text.Position.Bias-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		other::int
		javax.swing.text::Position.Bias
		javax.swing.text::Position.Bias
	
		[result]
		other::void
	}

	[Function]
	public abstract EditorKit getEditorKit(JTextComponent t)
	Name: getEditorKit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#getEditorKit-javax.swing.text.JTextComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
	
		[result]
		javax.swing.text::EditorKit
	}

	[Function]
	public abstract View getRootView(JTextComponent t)
	Name: getRootView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#getRootView-javax.swing.text.JTextComponent-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
	
		[result]
		javax.swing.text::View
	}

	[Function]
	public String getToolTipText(JTextComponent t,
	                             Point pt)
	Name: getToolTipText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TextUI.html#getToolTipText-javax.swing.text.JTextComponent-java.awt.Point-
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class ToolBarUI
extends ComponentUI
Name: ToolBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ToolBarUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiToolBarUI
	javax.swing.plaf.basic::BasicToolBarUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ToolBarUI()
	Name: ToolBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ToolBarUI.html#ToolBarUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ToolBarUI
	}
}

[Classifier]
public abstract class ToolTipUI
extends ComponentUI
Name: ToolTipUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ToolTipUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.multi::MultiToolTipUI
	javax.swing.plaf.basic::BasicToolTipUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ToolTipUI()
	Name: ToolTipUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ToolTipUI.html#ToolTipUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ToolTipUI
	}
}

[Classifier]
public abstract class TreeUI
extends ComponentUI
Name: TreeUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.basic::BasicTreeUI
	javax.swing.plaf.multi::MultiTreeUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public TreeUI()
	Name: TreeUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#TreeUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::TreeUI
	}

	[Function]
	public abstract Rectangle getPathBounds(JTree tree,
	                                        TreePath path)
	Name: getPathBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getPathBounds-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public abstract TreePath getPathForRow(JTree tree,
	                                       int row)
	Name: getPathForRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getPathForRow-javax.swing.JTree-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		other::int
	
		[result]
		javax.swing.tree::TreePath
	}

	[Function]
	public abstract int getRowForPath(JTree tree,
	                                  TreePath path)
	Name: getRowForPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getRowForPath-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		other::int
	}

	[Function]
	public abstract int getRowCount(JTree tree)
	Name: getRowCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getRowCount-javax.swing.JTree-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::int
	}

	[Function]
	public abstract TreePath getClosestPathForLocation(JTree tree,
	                                                   int x,
	                                                   int y)
	Name: getClosestPathForLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getClosestPathForLocation-javax.swing.JTree-int-int-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		other::int
		other::int
	
		[result]
		javax.swing.tree::TreePath
	}

	[Function]
	public abstract boolean isEditing(JTree tree)
	Name: isEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#isEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::boolean
	}

	[Function]
	public abstract boolean stopEditing(JTree tree)
	Name: stopEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#stopEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void cancelEditing(JTree tree)
	Name: cancelEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#cancelEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::void
	}

	[Function]
	public abstract void startEditingAtPath(JTree tree,
	                                        TreePath path)
	Name: startEditingAtPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#startEditingAtPath-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		other::void
	}

	[Function]
	public abstract TreePath getEditingPath(JTree tree)
	Name: getEditingPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/TreeUI.html#getEditingPath-javax.swing.JTree-
	Containing package: javax.swing.plaf
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		javax.swing.tree::TreePath
	}
}

[Classifier]
public abstract class ViewportUI
extends ComponentUI
Name: ViewportUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ViewportUI.html
Containing package: javax.swing.plaf
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.swing.plaf.synth::SynthViewportUI
	javax.swing.plaf.multi::MultiViewportUI
	javax.swing.plaf.basic::BasicViewportUI
}
supertypes {
	javax.swing.plaf::ComponentUI
}
members {

	[Function]
	public ViewportUI()
	Name: ViewportUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/ViewportUI.html#ViewportUI--
	Containing package: javax.swing.plaf
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf::ViewportUI
	}
}