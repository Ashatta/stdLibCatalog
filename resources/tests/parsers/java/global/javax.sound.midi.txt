[Package]
Name: javax.sound.midi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/package-summary.html
Containing package: null
attributes {
}

Subpackages {
	javax.sound.midi.spi
}

[Classifier]
public interface ControllerEventListener
extends EventListener
Name: ControllerEventListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ControllerEventListener.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void controlChange(ShortMessage event)
	Name: controlChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ControllerEventListener.html#controlChange-javax.sound.midi.ShortMessage-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ControllerEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::ShortMessage
	
		[result]
		other::void
	}
}

[Classifier]
public interface MetaEventListener
extends EventListener
Name: MetaEventListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaEventListener.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void meta(MetaMessage meta)
	Name: meta
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaEventListener.html#meta-javax.sound.midi.MetaMessage-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MetaEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MetaMessage
	
		[result]
		other::void
	}
}

[Classifier]
public interface MidiChannel
Name: MidiChannel
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	void noteOn(int noteNumber,
	            int velocity)
	Name: noteOn
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#noteOn-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void noteOff(int noteNumber,
	             int velocity)
	Name: noteOff
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#noteOff-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void noteOff(int noteNumber)
	Name: noteOff
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#noteOff-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setPolyPressure(int noteNumber,
	                     int pressure)
	Name: setPolyPressure
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setPolyPressure-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getPolyPressure(int noteNumber)
	Name: getPolyPressure
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getPolyPressure-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	void setChannelPressure(int pressure)
	Name: setChannelPressure
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setChannelPressure-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getChannelPressure()
	Name: getChannelPressure
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getChannelPressure--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void controlChange(int controller,
	                   int value)
	Name: controlChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#controlChange-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getController(int controller)
	Name: getController
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getController-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}

	[Function]
	void programChange(int program)
	Name: programChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#programChange-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void programChange(int bank,
	                   int program)
	Name: programChange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#programChange-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getProgram()
	Name: getProgram
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getProgram--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setPitchBend(int bend)
	Name: setPitchBend
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setPitchBend-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getPitchBend()
	Name: getPitchBend
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getPitchBend--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void resetAllControllers()
	Name: resetAllControllers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#resetAllControllers--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void allNotesOff()
	Name: allNotesOff
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#allNotesOff--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void allSoundOff()
	Name: allSoundOff
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#allSoundOff--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean localControl(boolean on)
	Name: localControl
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#localControl-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::boolean
	}

	[Function]
	void setMono(boolean on)
	Name: setMono
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setMono-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getMono()
	Name: getMono
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getMono--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setOmni(boolean on)
	Name: setOmni
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setOmni-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getOmni()
	Name: getOmni
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getOmni--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setMute(boolean mute)
	Name: setMute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setMute-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getMute()
	Name: getMute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getMute--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setSolo(boolean soloState)
	Name: setSolo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#setSolo-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getSolo()
	Name: getSolo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiChannel.html#getSolo--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiChannel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface MidiDevice
extends AutoCloseable
Name: MidiDevice
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sound.midi::Sequencer
	javax.sound.midi::Synthesizer
}
supertypes {
	java.lang::AutoCloseable
}
members {

	[Function]
	MidiDevice.Info getDeviceInfo()
	Name: getDeviceInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getDeviceInfo--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MidiDevice.Info
	}

	[Function]
	void open()
	   throws MidiUnavailableException
	Name: open
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#open--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void close()
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#close--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isOpen()
	Name: isOpen
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#isOpen--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	long getMicrosecondPosition()
	Name: getMicrosecondPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getMicrosecondPosition--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	int getMaxReceivers()
	Name: getMaxReceivers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getMaxReceivers--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getMaxTransmitters()
	Name: getMaxTransmitters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getMaxTransmitters--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Receiver getReceiver()
	              throws MidiUnavailableException
	Name: getReceiver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getReceiver--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Receiver
	}

	[Function]
	List<Receiver> getReceivers()
	Name: getReceivers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getReceivers--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			javax.sound.midi::Receiver
		}
	}

	[Function]
	Transmitter getTransmitter()
	                    throws MidiUnavailableException
	Name: getTransmitter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getTransmitter--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Transmitter
	}

	[Function]
	List<Transmitter> getTransmitters()
	Name: getTransmitters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.html#getTransmitters--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			javax.sound.midi::Transmitter
		}
	}
}

[Classifier]
public static class MidiDevice.Info
extends Object
Name: MidiDevice.Info
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected Info(String name,
	               String vendor,
	               String description,
	               String version)
	Name: Info
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#Info-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		javax.sound.midi::MidiDevice.Info
	}

	[Function]
	public final boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#equals-java.lang.Object-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public final int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#hashCode--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#getName--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getVendor()
	Name: getVendor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#getVendor--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getDescription()
	Name: getDescription
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#getDescription--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#getVersion--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDevice.Info.html#toString--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDevice.Info
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface MidiDeviceReceiver
extends Receiver
Name: MidiDeviceReceiver
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDeviceReceiver.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::Receiver
}
members {

	[Function]
	MidiDevice getMidiDevice()
	Name: getMidiDevice
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDeviceReceiver.html#getMidiDevice--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDeviceReceiver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MidiDevice
	}
}

[Classifier]
public interface MidiDeviceTransmitter
extends Transmitter
Name: MidiDeviceTransmitter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDeviceTransmitter.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::Transmitter
}
members {

	[Function]
	MidiDevice getMidiDevice()
	Name: getMidiDevice
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiDeviceTransmitter.html#getMidiDevice--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiDeviceTransmitter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MidiDevice
	}
}

[Classifier]
public interface Receiver
extends AutoCloseable
Name: Receiver
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Receiver.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sound.midi::MidiDeviceReceiver
}
supertypes {
	java.lang::AutoCloseable
}
members {

	[Function]
	void send(MidiMessage message,
	          long timeStamp)
	Name: send
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Receiver.html#send-javax.sound.midi.MidiMessage-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Receiver
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MidiMessage
		other::long
	
		[result]
		other::void
	}

	[Function]
	void close()
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Receiver.html#close--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Receiver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public interface Sequencer
extends MidiDevice
Name: Sequencer
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::MidiDevice
}
members {

	[Function]
	static final int LOOP_CONTINUOUSLY
	Name: LOOP_CONTINUOUSLY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#LOOP_CONTINUOUSLY
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setSequence(Sequence sequence)
	          throws InvalidMidiDataException
	Name: setSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setSequence-javax.sound.midi.Sequence-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequence
	
		[result]
		other::void
	}

	[Function]
	void setSequence(InputStream stream)
	          throws IOException,
	                 InvalidMidiDataException
	Name: setSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setSequence-java.io.InputStream-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	Sequence getSequence()
	Name: getSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getSequence--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	void start()
	Name: start
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#start--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void stop()
	Name: stop
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#stop--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isRunning()
	Name: isRunning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#isRunning--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void startRecording()
	Name: startRecording
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#startRecording--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void stopRecording()
	Name: stopRecording
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#stopRecording--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isRecording()
	Name: isRecording
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#isRecording--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void recordEnable(Track track,
	                  int channel)
	Name: recordEnable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#recordEnable-javax.sound.midi.Track-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Track
		other::int
	
		[result]
		other::void
	}

	[Function]
	void recordDisable(Track track)
	Name: recordDisable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#recordDisable-javax.sound.midi.Track-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Track
	
		[result]
		other::void
	}

	[Function]
	float getTempoInBPM()
	Name: getTempoInBPM
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTempoInBPM--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	void setTempoInBPM(float bpm)
	Name: setTempoInBPM
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTempoInBPM-float-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		other::void
	}

	[Function]
	float getTempoInMPQ()
	Name: getTempoInMPQ
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTempoInMPQ--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	void setTempoInMPQ(float mpq)
	Name: setTempoInMPQ
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTempoInMPQ-float-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		other::void
	}

	[Function]
	void setTempoFactor(float factor)
	Name: setTempoFactor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTempoFactor-float-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
	
		[result]
		other::void
	}

	[Function]
	float getTempoFactor()
	Name: getTempoFactor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTempoFactor--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	long getTickLength()
	Name: getTickLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTickLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getTickPosition()
	Name: getTickPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTickPosition--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	void setTickPosition(long tick)
	Name: setTickPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTickPosition-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	long getMicrosecondLength()
	Name: getMicrosecondLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getMicrosecondLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getMicrosecondPosition()
	Name: getMicrosecondPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getMicrosecondPosition--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	void setMicrosecondPosition(long microseconds)
	Name: setMicrosecondPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setMicrosecondPosition-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setMasterSyncMode(Sequencer.SyncMode sync)
	Name: setMasterSyncMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setMasterSyncMode-javax.sound.midi.Sequencer.SyncMode-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequencer.SyncMode
	
		[result]
		other::void
	}

	[Function]
	Sequencer.SyncMode getMasterSyncMode()
	Name: getMasterSyncMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getMasterSyncMode--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	Sequencer.SyncMode[] getMasterSyncModes()
	Name: getMasterSyncModes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getMasterSyncModes--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Sequencer.SyncMode
		}
	}

	[Function]
	void setSlaveSyncMode(Sequencer.SyncMode sync)
	Name: setSlaveSyncMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setSlaveSyncMode-javax.sound.midi.Sequencer.SyncMode-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequencer.SyncMode
	
		[result]
		other::void
	}

	[Function]
	Sequencer.SyncMode getSlaveSyncMode()
	Name: getSlaveSyncMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getSlaveSyncMode--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	Sequencer.SyncMode[] getSlaveSyncModes()
	Name: getSlaveSyncModes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getSlaveSyncModes--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Sequencer.SyncMode
		}
	}

	[Function]
	void setTrackMute(int track,
	                  boolean mute)
	Name: setTrackMute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTrackMute-int-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getTrackMute(int track)
	Name: getTrackMute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTrackMute-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	void setTrackSolo(int track,
	                  boolean solo)
	Name: setTrackSolo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setTrackSolo-int-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	boolean getTrackSolo(int track)
	Name: getTrackSolo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getTrackSolo-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	boolean addMetaEventListener(MetaEventListener listener)
	Name: addMetaEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#addMetaEventListener-javax.sound.midi.MetaEventListener-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MetaEventListener
	
		[result]
		other::boolean
	}

	[Function]
	void removeMetaEventListener(MetaEventListener listener)
	Name: removeMetaEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#removeMetaEventListener-javax.sound.midi.MetaEventListener-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MetaEventListener
	
		[result]
		other::void
	}

	[Function]
	int[] addControllerEventListener(ControllerEventListener listener,
	                                 int[] controllers)
	Name: addControllerEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::ControllerEventListener
		other::[] {
			other::int
		}
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	int[] removeControllerEventListener(ControllerEventListener listener,
	                                    int[] controllers)
	Name: removeControllerEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#removeControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::ControllerEventListener
		other::[] {
			other::int
		}
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	void setLoopStartPoint(long tick)
	Name: setLoopStartPoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setLoopStartPoint-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	long getLoopStartPoint()
	Name: getLoopStartPoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getLoopStartPoint--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	void setLoopEndPoint(long tick)
	Name: setLoopEndPoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setLoopEndPoint-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	long getLoopEndPoint()
	Name: getLoopEndPoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getLoopEndPoint--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	void setLoopCount(int count)
	Name: setLoopCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#setLoopCount-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getLoopCount()
	Name: getLoopCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.html#getLoopCount--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public static class Sequencer.SyncMode
extends Object
Name: Sequencer.SyncMode
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final Sequencer.SyncMode INTERNAL_CLOCK
	Name: INTERNAL_CLOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#INTERNAL_CLOCK
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	public static final Sequencer.SyncMode MIDI_SYNC
	Name: MIDI_SYNC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#MIDI_SYNC
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	public static final Sequencer.SyncMode MIDI_TIME_CODE
	Name: MIDI_TIME_CODE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#MIDI_TIME_CODE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	public static final Sequencer.SyncMode NO_SYNC
	Name: NO_SYNC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#NO_SYNC
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	protected SyncMode(String name)
	Name: SyncMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#SyncMode-java.lang.String-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sound.midi::Sequencer.SyncMode
	}

	[Function]
	public final boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#equals-java.lang.Object-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public final int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#hashCode--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequencer.SyncMode.html#toString--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequencer.SyncMode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface Soundbank
Name: Soundbank
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getName--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getVersion--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getVendor()
	Name: getVendor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getVendor--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getDescription()
	Name: getDescription
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getDescription--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	SoundbankResource[] getResources()
	Name: getResources
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getResources--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::SoundbankResource
		}
	}

	[Function]
	Instrument[] getInstruments()
	Name: getInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getInstruments--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Instrument
		}
	}

	[Function]
	Instrument getInstrument(Patch patch)
	Name: getInstrument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Soundbank.html#getInstrument-javax.sound.midi.Patch-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Soundbank
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Patch
	
		[result]
		javax.sound.midi::Instrument
	}
}

[Classifier]
public interface Synthesizer
extends MidiDevice
Name: Synthesizer
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::MidiDevice
}
members {

	[Function]
	int getMaxPolyphony()
	Name: getMaxPolyphony
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getMaxPolyphony--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	long getLatency()
	Name: getLatency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getLatency--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	MidiChannel[] getChannels()
	Name: getChannels
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getChannels--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::MidiChannel
		}
	}

	[Function]
	VoiceStatus[] getVoiceStatus()
	Name: getVoiceStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getVoiceStatus--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::VoiceStatus
		}
	}

	[Function]
	boolean isSoundbankSupported(Soundbank soundbank)
	Name: isSoundbankSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#isSoundbankSupported-javax.sound.midi.Soundbank-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
	
		[result]
		other::boolean
	}

	[Function]
	boolean loadInstrument(Instrument instrument)
	Name: loadInstrument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#loadInstrument-javax.sound.midi.Instrument-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Instrument
	
		[result]
		other::boolean
	}

	[Function]
	void unloadInstrument(Instrument instrument)
	Name: unloadInstrument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#unloadInstrument-javax.sound.midi.Instrument-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Instrument
	
		[result]
		other::void
	}

	[Function]
	boolean remapInstrument(Instrument from,
	                        Instrument to)
	Name: remapInstrument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#remapInstrument-javax.sound.midi.Instrument-javax.sound.midi.Instrument-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Instrument
		javax.sound.midi::Instrument
	
		[result]
		other::boolean
	}

	[Function]
	Soundbank getDefaultSoundbank()
	Name: getDefaultSoundbank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getDefaultSoundbank--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Soundbank
	}

	[Function]
	Instrument[] getAvailableInstruments()
	Name: getAvailableInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getAvailableInstruments--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Instrument
		}
	}

	[Function]
	Instrument[] getLoadedInstruments()
	Name: getLoadedInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#getLoadedInstruments--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Instrument
		}
	}

	[Function]
	boolean loadAllInstruments(Soundbank soundbank)
	Name: loadAllInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#loadAllInstruments-javax.sound.midi.Soundbank-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
	
		[result]
		other::boolean
	}

	[Function]
	void unloadAllInstruments(Soundbank soundbank)
	Name: unloadAllInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#unloadAllInstruments-javax.sound.midi.Soundbank-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
	
		[result]
		other::void
	}

	[Function]
	boolean loadInstruments(Soundbank soundbank,
	                        Patch[] patchList)
	Name: loadInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
		other::[] {
			javax.sound.midi::Patch
		}
	
		[result]
		other::boolean
	}

	[Function]
	void unloadInstruments(Soundbank soundbank,
	                       Patch[] patchList)
	Name: unloadInstruments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Synthesizer.html#unloadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Synthesizer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
		other::[] {
			javax.sound.midi::Patch
		}
	
		[result]
		other::void
	}
}

[Classifier]
public interface Transmitter
extends AutoCloseable
Name: Transmitter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Transmitter.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sound.midi::MidiDeviceTransmitter
}
supertypes {
	java.lang::AutoCloseable
}
members {

	[Function]
	void setReceiver(Receiver receiver)
	Name: setReceiver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Transmitter.html#setReceiver-javax.sound.midi.Receiver-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transmitter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Receiver
	
		[result]
		other::void
	}

	[Function]
	Receiver getReceiver()
	Name: getReceiver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Transmitter.html#getReceiver--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transmitter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Receiver
	}

	[Function]
	void close()
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Transmitter.html#close--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Transmitter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class Instrument
extends SoundbankResource
Name: Instrument
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Instrument.html
Containing package: javax.sound.midi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::SoundbankResource
}
members {

	[Function]
	protected Instrument(Soundbank soundbank,
	                     Patch patch,
	                     String name,
	                     Class<?> dataClass)
	Name: Instrument
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Instrument.html#Instrument-javax.sound.midi.Soundbank-javax.sound.midi.Patch-java.lang.String-java.lang.Class-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Instrument
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
		javax.sound.midi::Patch
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		javax.sound.midi::Instrument
	}

	[Function]
	public Patch getPatch()
	Name: getPatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Instrument.html#getPatch--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Instrument
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Patch
	}
}

[Classifier]
public class MetaMessage
extends MidiMessage
Name: MetaMessage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::MidiMessage
}
members {

	[Function]
	public static final int META
	Name: META
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#META
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public MetaMessage()
	Name: MetaMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#MetaMessage--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MetaMessage
	}

	[Function]
	public MetaMessage(int type,
	                   byte[] data,
	                   int length)
	            throws InvalidMidiDataException
	Name: MetaMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#MetaMessage-int-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.sound.midi::MetaMessage
	}

	[Function]
	protected MetaMessage(byte[] data)
	Name: MetaMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#MetaMessage-byte:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.sound.midi::MetaMessage
	}

	[Function]
	public void setMessage(int type,
	                       byte[] data,
	                       int length)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#setMessage-int-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::void
	}

	[Function]
	public int getType()
	Name: getType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#getType--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public byte[] getData()
	Name: getData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#getData--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MetaMessage.html#clone--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MetaMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class MidiEvent
extends Object
Name: MidiEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiEvent.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public MidiEvent(MidiMessage message,
	                 long tick)
	Name: MidiEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiEvent.html#MidiEvent-javax.sound.midi.MidiMessage-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MidiMessage
		other::long
	
		[result]
		javax.sound.midi::MidiEvent
	}

	[Function]
	public MidiMessage getMessage()
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiEvent.html#getMessage--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MidiMessage
	}

	[Function]
	public void setTick(long tick)
	Name: setTick
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiEvent.html#setTick-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public long getTick()
	Name: getTick
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiEvent.html#getTick--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}
}

[Classifier]
public class MidiFileFormat
extends Object
Name: MidiFileFormat
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int UNKNOWN_LENGTH
	Name: UNKNOWN_LENGTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#UNKNOWN_LENGTH
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected int type
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#type
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected float divisionType
	Name: divisionType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#divisionType
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	protected int resolution
	Name: resolution
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#resolution
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected int byteLength
	Name: byteLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#byteLength
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected long microsecondLength
	Name: microsecondLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#microsecondLength
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public MidiFileFormat(int type,
	                      float divisionType,
	                      int resolution,
	                      int bytes,
	                      long microseconds)
	Name: MidiFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#MidiFileFormat-int-float-int-int-long-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::float
		other::int
		other::int
		other::long
	
		[result]
		javax.sound.midi::MidiFileFormat
	}

	[Function]
	public MidiFileFormat(int type,
	                      float divisionType,
	                      int resolution,
	                      int bytes,
	                      long microseconds,
	                      Map<String,Object> properties)
	Name: MidiFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#MidiFileFormat-int-float-int-int-long-java.util.Map-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::float
		other::int
		other::int
		other::long
		java.util::Map {
			java.lang::String
			java.lang::Object
		}
	
		[result]
		javax.sound.midi::MidiFileFormat
	}

	[Function]
	public int getType()
	Name: getType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getType--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public float getDivisionType()
	Name: getDivisionType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getDivisionType--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public int getResolution()
	Name: getResolution
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getResolution--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getByteLength()
	Name: getByteLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getByteLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long getMicrosecondLength()
	Name: getMicrosecondLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getMicrosecondLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public Map<String,Object> properties()
	Name: properties
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#properties--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Map {
			java.lang::String
			java.lang::Object
		}
	}

	[Function]
	public Object getProperty(String key)
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiFileFormat.html#getProperty-java.lang.String-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiFileFormat
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public abstract class MidiMessage
extends Object
implements Cloneable
Name: MidiMessage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html
Containing package: javax.sound.midi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sound.midi::MetaMessage
	javax.sound.midi::SysexMessage
	javax.sound.midi::ShortMessage
}
supertypes {
	java.lang::Cloneable
	java.lang::Object
}
members {

	[Function]
	protected byte[] data
	Name: data
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#data
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	protected int length
	Name: length
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#length
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected MidiMessage(byte[] data)
	Name: MidiMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#MidiMessage-byte:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.sound.midi::MidiMessage
	}

	[Function]
	protected void setMessage(byte[] data,
	                          int length)
	                   throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#setMessage-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::void
	}

	[Function]
	public byte[] getMessage()
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#getMessage--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public int getStatus()
	Name: getStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#getStatus--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getLength()
	Name: getLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#getLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public abstract Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiMessage.html#clone--
	Containing package: javax.sound.midi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MidiMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class MidiSystem
extends Object
Name: MidiSystem
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static MidiDevice.Info[] getMidiDeviceInfo()
	Name: getMidiDeviceInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiDeviceInfo--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::MidiDevice.Info
		}
	}

	[Function]
	public static MidiDevice getMidiDevice(MidiDevice.Info info)
	                                throws MidiUnavailableException
	Name: getMidiDevice
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiDevice-javax.sound.midi.MidiDevice.Info-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MidiDevice.Info
	
		[result]
		javax.sound.midi::MidiDevice
	}

	[Function]
	public static Receiver getReceiver()
	                            throws MidiUnavailableException
	Name: getReceiver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getReceiver--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Receiver
	}

	[Function]
	public static Transmitter getTransmitter()
	                                  throws MidiUnavailableException
	Name: getTransmitter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getTransmitter--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Transmitter
	}

	[Function]
	public static Synthesizer getSynthesizer()
	                                  throws MidiUnavailableException
	Name: getSynthesizer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSynthesizer--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Synthesizer
	}

	[Function]
	public static Sequencer getSequencer()
	                              throws MidiUnavailableException
	Name: getSequencer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSequencer--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Sequencer
	}

	[Function]
	public static Sequencer getSequencer(boolean connected)
	                              throws MidiUnavailableException
	Name: getSequencer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSequencer-boolean-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		javax.sound.midi::Sequencer
	}

	[Function]
	public static Soundbank getSoundbank(InputStream stream)
	                              throws InvalidMidiDataException,
	                                     IOException
	Name: getSoundbank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSoundbank-java.io.InputStream-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		javax.sound.midi::Soundbank
	}

	[Function]
	public static Soundbank getSoundbank(URL url)
	                              throws InvalidMidiDataException,
	                                     IOException
	Name: getSoundbank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSoundbank-java.net.URL-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sound.midi::Soundbank
	}

	[Function]
	public static Soundbank getSoundbank(File file)
	                              throws InvalidMidiDataException,
	                                     IOException
	Name: getSoundbank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSoundbank-java.io.File-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		javax.sound.midi::Soundbank
	}

	[Function]
	public static MidiFileFormat getMidiFileFormat(InputStream stream)
	                                        throws InvalidMidiDataException,
	                                               IOException
	Name: getMidiFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiFileFormat-java.io.InputStream-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		javax.sound.midi::MidiFileFormat
	}

	[Function]
	public static MidiFileFormat getMidiFileFormat(URL url)
	                                        throws InvalidMidiDataException,
	                                               IOException
	Name: getMidiFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiFileFormat-java.net.URL-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sound.midi::MidiFileFormat
	}

	[Function]
	public static MidiFileFormat getMidiFileFormat(File file)
	                                        throws InvalidMidiDataException,
	                                               IOException
	Name: getMidiFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiFileFormat-java.io.File-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		javax.sound.midi::MidiFileFormat
	}

	[Function]
	public static Sequence getSequence(InputStream stream)
	                            throws InvalidMidiDataException,
	                                   IOException
	Name: getSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSequence-java.io.InputStream-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	public static Sequence getSequence(URL url)
	                            throws InvalidMidiDataException,
	                                   IOException
	Name: getSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSequence-java.net.URL-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	public static Sequence getSequence(File file)
	                            throws InvalidMidiDataException,
	                                   IOException
	Name: getSequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getSequence-java.io.File-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	public static int[] getMidiFileTypes()
	Name: getMidiFileTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiFileTypes--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	public static boolean isFileTypeSupported(int fileType)
	Name: isFileTypeSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#isFileTypeSupported-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public static int[] getMidiFileTypes(Sequence sequence)
	Name: getMidiFileTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#getMidiFileTypes-javax.sound.midi.Sequence-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequence
	
		[result]
		other::[] {
			other::int
		}
	}

	[Function]
	public static boolean isFileTypeSupported(int fileType,
	                                          Sequence sequence)
	Name: isFileTypeSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#isFileTypeSupported-int-javax.sound.midi.Sequence-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		javax.sound.midi::Sequence
	
		[result]
		other::boolean
	}

	[Function]
	public static int write(Sequence in,
	                        int fileType,
	                        OutputStream out)
	                 throws IOException
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#write-javax.sound.midi.Sequence-int-java.io.OutputStream-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequence
		other::int
		java.io::OutputStream
	
		[result]
		other::int
	}

	[Function]
	public static int write(Sequence in,
	                        int type,
	                        File out)
	                 throws IOException
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiSystem.html#write-javax.sound.midi.Sequence-int-java.io.File-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MidiSystem
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Sequence
		other::int
		java.io::File
	
		[result]
		other::int
	}
}

[Classifier]
public class Patch
extends Object
Name: Patch
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Patch.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public Patch(int bank,
	             int program)
	Name: Patch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Patch.html#Patch-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Patch
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		javax.sound.midi::Patch
	}

	[Function]
	public int getBank()
	Name: getBank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Patch.html#getBank--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Patch
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getProgram()
	Name: getProgram
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Patch.html#getProgram--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Patch
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class Sequence
extends Object
Name: Sequence
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final float PPQ
	Name: PPQ
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#PPQ
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public static final float SMPTE_24
	Name: SMPTE_24
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#SMPTE_24
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public static final float SMPTE_25
	Name: SMPTE_25
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#SMPTE_25
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public static final float SMPTE_30DROP
	Name: SMPTE_30DROP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#SMPTE_30DROP
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public static final float SMPTE_30
	Name: SMPTE_30
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#SMPTE_30
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	protected float divisionType
	Name: divisionType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#divisionType
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	protected int resolution
	Name: resolution
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#resolution
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	protected Vector<Track> tracks
	Name: tracks
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#tracks
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector {
			javax.sound.midi::Track
		}
	}

	[Function]
	public Sequence(float divisionType,
	                int resolution)
	         throws InvalidMidiDataException
	Name: Sequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#Sequence-float-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
		other::int
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	public Sequence(float divisionType,
	                int resolution,
	                int numTracks)
	         throws InvalidMidiDataException
	Name: Sequence
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#Sequence-float-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::float
		other::int
		other::int
	
		[result]
		javax.sound.midi::Sequence
	}

	[Function]
	public float getDivisionType()
	Name: getDivisionType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getDivisionType--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::float
	}

	[Function]
	public int getResolution()
	Name: getResolution
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getResolution--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Track createTrack()
	Name: createTrack
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#createTrack--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Track
	}

	[Function]
	public boolean deleteTrack(Track track)
	Name: deleteTrack
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#deleteTrack-javax.sound.midi.Track-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Track
	
		[result]
		other::boolean
	}

	[Function]
	public Track[] getTracks()
	Name: getTracks
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getTracks--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Track
		}
	}

	[Function]
	public long getMicrosecondLength()
	Name: getMicrosecondLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getMicrosecondLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public long getTickLength()
	Name: getTickLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getTickLength--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public Patch[] getPatchList()
	Name: getPatchList
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Sequence.html#getPatchList--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Sequence
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.midi::Patch
		}
	}
}

[Classifier]
public class ShortMessage
extends MidiMessage
Name: ShortMessage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::MidiMessage
}
members {

	[Function]
	public static final int MIDI_TIME_CODE
	Name: MIDI_TIME_CODE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#MIDI_TIME_CODE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SONG_POSITION_POINTER
	Name: SONG_POSITION_POINTER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#SONG_POSITION_POINTER
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SONG_SELECT
	Name: SONG_SELECT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#SONG_SELECT
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TUNE_REQUEST
	Name: TUNE_REQUEST
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#TUNE_REQUEST
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int END_OF_EXCLUSIVE
	Name: END_OF_EXCLUSIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#END_OF_EXCLUSIVE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int TIMING_CLOCK
	Name: TIMING_CLOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#TIMING_CLOCK
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int START
	Name: START
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#START
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CONTINUE
	Name: CONTINUE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#CONTINUE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int STOP
	Name: STOP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#STOP
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int ACTIVE_SENSING
	Name: ACTIVE_SENSING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ACTIVE_SENSING
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SYSTEM_RESET
	Name: SYSTEM_RESET
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#SYSTEM_RESET
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NOTE_OFF
	Name: NOTE_OFF
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#NOTE_OFF
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NOTE_ON
	Name: NOTE_ON
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#NOTE_ON
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int POLY_PRESSURE
	Name: POLY_PRESSURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#POLY_PRESSURE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CONTROL_CHANGE
	Name: CONTROL_CHANGE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#CONTROL_CHANGE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int PROGRAM_CHANGE
	Name: PROGRAM_CHANGE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#PROGRAM_CHANGE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CHANNEL_PRESSURE
	Name: CHANNEL_PRESSURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#CHANNEL_PRESSURE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int PITCH_BEND
	Name: PITCH_BEND
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#PITCH_BEND
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ShortMessage()
	Name: ShortMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ShortMessage--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::ShortMessage
	}

	[Function]
	public ShortMessage(int status)
	             throws InvalidMidiDataException
	Name: ShortMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ShortMessage-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.sound.midi::ShortMessage
	}

	[Function]
	public ShortMessage(int status,
	                    int data1,
	                    int data2)
	             throws InvalidMidiDataException
	Name: ShortMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ShortMessage-int-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		javax.sound.midi::ShortMessage
	}

	[Function]
	public ShortMessage(int command,
	                    int channel,
	                    int data1,
	                    int data2)
	             throws InvalidMidiDataException
	Name: ShortMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ShortMessage-int-int-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
	
		[result]
		javax.sound.midi::ShortMessage
	}

	[Function]
	protected ShortMessage(byte[] data)
	Name: ShortMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#ShortMessage-byte:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.sound.midi::ShortMessage
	}

	[Function]
	public void setMessage(int status)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#setMessage-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void setMessage(int status,
	                       int data1,
	                       int data2)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#setMessage-int-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void setMessage(int command,
	                       int channel,
	                       int data1,
	                       int data2)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#setMessage-int-int-int-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public int getChannel()
	Name: getChannel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#getChannel--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getCommand()
	Name: getCommand
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#getCommand--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getData1()
	Name: getData1
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#getData1--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getData2()
	Name: getData2
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#getData2--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#clone--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	protected final int getDataLength(int status)
	                           throws InvalidMidiDataException
	Name: getDataLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/ShortMessage.html#getDataLength-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=true
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ShortMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::int
	}
}

[Classifier]
public abstract class SoundbankResource
extends Object
Name: SoundbankResource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html
Containing package: javax.sound.midi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sound.midi::Instrument
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SoundbankResource(Soundbank soundBank,
	                            String name,
	                            Class<?> dataClass)
	Name: SoundbankResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html#SoundbankResource-javax.sound.midi.Soundbank-java.lang.String-java.lang.Class-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SoundbankResource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::Soundbank
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		javax.sound.midi::SoundbankResource
	}

	[Function]
	public Soundbank getSoundbank()
	Name: getSoundbank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html#getSoundbank--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SoundbankResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::Soundbank
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html#getName--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SoundbankResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Class<?> getDataClass()
	Name: getDataClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html#getDataClass--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SoundbankResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	public abstract Object getData()
	Name: getData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SoundbankResource.html#getData--
	Containing package: javax.sound.midi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SoundbankResource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class SysexMessage
extends MidiMessage
Name: SysexMessage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sound.midi::MidiMessage
}
members {

	[Function]
	public static final int SYSTEM_EXCLUSIVE
	Name: SYSTEM_EXCLUSIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SYSTEM_EXCLUSIVE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int SPECIAL_SYSTEM_EXCLUSIVE
	Name: SPECIAL_SYSTEM_EXCLUSIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SPECIAL_SYSTEM_EXCLUSIVE
	Containing package: javax.sound.midi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public SysexMessage()
	Name: SysexMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SysexMessage--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::SysexMessage
	}

	[Function]
	public SysexMessage(byte[] data,
	                    int length)
	             throws InvalidMidiDataException
	Name: SysexMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SysexMessage-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.sound.midi::SysexMessage
	}

	[Function]
	public SysexMessage(int status,
	                    byte[] data,
	                    int length)
	             throws InvalidMidiDataException
	Name: SysexMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SysexMessage-int-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		javax.sound.midi::SysexMessage
	}

	[Function]
	protected SysexMessage(byte[] data)
	Name: SysexMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#SysexMessage-byte:A-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.sound.midi::SysexMessage
	}

	[Function]
	public void setMessage(byte[] data,
	                       int length)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#setMessage-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void setMessage(int status,
	                       byte[] data,
	                       int length)
	                throws InvalidMidiDataException
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#setMessage-int-byte:A-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
		other::int
	
		[result]
		other::void
	}

	[Function]
	public byte[] getData()
	Name: getData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#getData--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public Object clone()
	Name: clone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/SysexMessage.html#clone--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SysexMessage
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}
}

[Classifier]
public class Track
extends Object
Name: Track
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public boolean add(MidiEvent event)
	Name: add
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html#add-javax.sound.midi.MidiEvent-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Track
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MidiEvent
	
		[result]
		other::boolean
	}

	[Function]
	public boolean remove(MidiEvent event)
	Name: remove
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html#remove-javax.sound.midi.MidiEvent-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Track
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.midi::MidiEvent
	
		[result]
		other::boolean
	}

	[Function]
	public MidiEvent get(int index)
	              throws ArrayIndexOutOfBoundsException
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html#get-int-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Track
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.sound.midi::MidiEvent
	}

	[Function]
	public int size()
	Name: size
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html#size--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Track
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long ticks()
	Name: ticks
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/Track.html#ticks--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Track
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}
}

[Classifier]
public class VoiceStatus
extends Object
Name: VoiceStatus
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public boolean active
	Name: active
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#active
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public int channel
	Name: channel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#channel
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int bank
	Name: bank
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#bank
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int program
	Name: program
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#program
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int note
	Name: note
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#note
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int volume
	Name: volume
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#volume
	Containing package: javax.sound.midi
	attributes {
		final=false
		scope=public
		static=false
		memberType=field
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public VoiceStatus()
	Name: VoiceStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/VoiceStatus.html#VoiceStatus--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: VoiceStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::VoiceStatus
	}
}

[Classifier]
public class InvalidMidiDataException
extends Exception
Name: InvalidMidiDataException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/InvalidMidiDataException.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public InvalidMidiDataException()
	Name: InvalidMidiDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/InvalidMidiDataException.html#InvalidMidiDataException--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidMidiDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::InvalidMidiDataException
	}

	[Function]
	public InvalidMidiDataException(String message)
	Name: InvalidMidiDataException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/InvalidMidiDataException.html#InvalidMidiDataException-java.lang.String-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidMidiDataException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sound.midi::InvalidMidiDataException
	}
}

[Classifier]
public class MidiUnavailableException
extends Exception
Name: MidiUnavailableException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiUnavailableException.html
Containing package: javax.sound.midi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public MidiUnavailableException()
	Name: MidiUnavailableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiUnavailableException.html#MidiUnavailableException--
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiUnavailableException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.midi::MidiUnavailableException
	}

	[Function]
	public MidiUnavailableException(String message)
	Name: MidiUnavailableException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/midi/MidiUnavailableException.html#MidiUnavailableException-java.lang.String-
	Containing package: javax.sound.midi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MidiUnavailableException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sound.midi::MidiUnavailableException
	}
}