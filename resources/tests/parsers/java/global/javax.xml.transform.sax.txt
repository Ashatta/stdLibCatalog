[Package]
Name: javax.xml.transform.sax
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/package-summary.html
Containing package: javax.xml.transform
attributes {
}

Subpackages {
}

[Classifier]
public interface TemplatesHandler
extends ContentHandler
Name: TemplatesHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TemplatesHandler.html
Containing package: javax.xml.transform.sax
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.xml.sax::ContentHandler
}
members {

	[Function]
	Templates getTemplates()
	Name: getTemplates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TemplatesHandler.html#getTemplates--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TemplatesHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform::Templates
	}

	[Function]
	void setSystemId(String systemID)
	Name: setSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TemplatesHandler.html#setSystemId-java.lang.String-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TemplatesHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TemplatesHandler.html#getSystemId--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TemplatesHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface TransformerHandler
extends ContentHandler, LexicalHandler, DTDHandler
Name: TransformerHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TransformerHandler.html
Containing package: javax.xml.transform.sax
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.xml.sax::ContentHandler
	org.xml.sax.ext::LexicalHandler
	org.xml.sax::DTDHandler
}
members {

	[Function]
	void setResult(Result result)
	        throws IllegalArgumentException
	Name: setResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TransformerHandler.html#setResult-javax.xml.transform.Result-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformerHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Result
	
		[result]
		other::void
	}

	[Function]
	void setSystemId(String systemID)
	Name: setSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TransformerHandler.html#setSystemId-java.lang.String-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformerHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TransformerHandler.html#getSystemId--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformerHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	Transformer getTransformer()
	Name: getTransformer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/TransformerHandler.html#getTransformer--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransformerHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform::Transformer
	}
}

[Classifier]
public class SAXResult
extends Object
implements Result
Name: SAXResult
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html
Containing package: javax.xml.transform.sax
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.util::JAXBResult
}
supertypes {
	javax.xml.transform::Result
	java.lang::Object
}
members {

	[Function]
	public static final String FEATURE
	Name: FEATURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#FEATURE
	Containing package: javax.xml.transform.sax
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public SAXResult()
	Name: SAXResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#SAXResult--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform.sax::SAXResult
	}

	[Function]
	public SAXResult(ContentHandler handler)
	Name: SAXResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#SAXResult-org.xml.sax.ContentHandler-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::ContentHandler
	
		[result]
		javax.xml.transform.sax::SAXResult
	}

	[Function]
	public void setHandler(ContentHandler handler)
	Name: setHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#setHandler-org.xml.sax.ContentHandler-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::ContentHandler
	
		[result]
		other::void
	}

	[Function]
	public ContentHandler getHandler()
	Name: getHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#getHandler--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax::ContentHandler
	}

	[Function]
	public void setLexicalHandler(LexicalHandler handler)
	Name: setLexicalHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#setLexicalHandler-org.xml.sax.ext.LexicalHandler-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax.ext::LexicalHandler
	
		[result]
		other::void
	}

	[Function]
	public LexicalHandler getLexicalHandler()
	Name: getLexicalHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#getLexicalHandler--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax.ext::LexicalHandler
	}

	[Function]
	public void setSystemId(String systemId)
	Name: setSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#setSystemId-java.lang.String-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXResult.html#getSystemId--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class SAXSource
extends Object
implements Source
Name: SAXSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html
Containing package: javax.xml.transform.sax
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.bind.util::JAXBSource
}
supertypes {
	javax.xml.transform::Source
	java.lang::Object
}
members {

	[Function]
	public static final String FEATURE
	Name: FEATURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#FEATURE
	Containing package: javax.xml.transform.sax
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public SAXSource()
	Name: SAXSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#SAXSource--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform.sax::SAXSource
	}

	[Function]
	public SAXSource(XMLReader reader,
	                 InputSource inputSource)
	Name: SAXSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#SAXSource-org.xml.sax.XMLReader-org.xml.sax.InputSource-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::XMLReader
		org.xml.sax::InputSource
	
		[result]
		javax.xml.transform.sax::SAXSource
	}

	[Function]
	public SAXSource(InputSource inputSource)
	Name: SAXSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#SAXSource-org.xml.sax.InputSource-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
	
		[result]
		javax.xml.transform.sax::SAXSource
	}

	[Function]
	public void setXMLReader(XMLReader reader)
	Name: setXMLReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#setXMLReader-org.xml.sax.XMLReader-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::XMLReader
	
		[result]
		other::void
	}

	[Function]
	public XMLReader getXMLReader()
	Name: getXMLReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#getXMLReader--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax::XMLReader
	}

	[Function]
	public void setInputSource(InputSource inputSource)
	Name: setInputSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#setInputSource-org.xml.sax.InputSource-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.xml.sax::InputSource
	
		[result]
		other::void
	}

	[Function]
	public InputSource getInputSource()
	Name: getInputSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#getInputSource--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.xml.sax::InputSource
	}

	[Function]
	public void setSystemId(String systemId)
	Name: setSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#setSystemId-java.lang.String-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String getSystemId()
	Name: getSystemId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#getSystemId--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static InputSource sourceToInputSource(Source source)
	Name: sourceToInputSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXSource.html#sourceToInputSource-javax.xml.transform.Source-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SAXSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
	
		[result]
		org.xml.sax::InputSource
	}
}

[Classifier]
public abstract class SAXTransformerFactory
extends TransformerFactory
Name: SAXTransformerFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html
Containing package: javax.xml.transform.sax
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.transform::TransformerFactory
}
members {

	[Function]
	public static final String FEATURE
	Name: FEATURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#FEATURE
	Containing package: javax.xml.transform.sax
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String FEATURE_XMLFILTER
	Name: FEATURE_XMLFILTER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#FEATURE_XMLFILTER
	Containing package: javax.xml.transform.sax
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	protected SAXTransformerFactory()
	Name: SAXTransformerFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#SAXTransformerFactory--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform.sax::SAXTransformerFactory
	}

	[Function]
	public abstract TransformerHandler newTransformerHandler(Source src)
	                                                  throws TransformerConfigurationException
	Name: newTransformerHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler-javax.xml.transform.Source-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
	
		[result]
		javax.xml.transform.sax::TransformerHandler
	}

	[Function]
	public abstract TransformerHandler newTransformerHandler(Templates templates)
	                                                  throws TransformerConfigurationException
	Name: newTransformerHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler-javax.xml.transform.Templates-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Templates
	
		[result]
		javax.xml.transform.sax::TransformerHandler
	}

	[Function]
	public abstract TransformerHandler newTransformerHandler()
	                                                  throws TransformerConfigurationException
	Name: newTransformerHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform.sax::TransformerHandler
	}

	[Function]
	public abstract TemplatesHandler newTemplatesHandler()
	                                              throws TransformerConfigurationException
	Name: newTemplatesHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newTemplatesHandler--
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.transform.sax::TemplatesHandler
	}

	[Function]
	public abstract XMLFilter newXMLFilter(Source src)
	                                throws TransformerConfigurationException
	Name: newXMLFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newXMLFilter-javax.xml.transform.Source-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Source
	
		[result]
		org.xml.sax::XMLFilter
	}

	[Function]
	public abstract XMLFilter newXMLFilter(Templates templates)
	                                throws TransformerConfigurationException
	Name: newXMLFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/transform/sax/SAXTransformerFactory.html#newXMLFilter-javax.xml.transform.Templates-
	Containing package: javax.xml.transform.sax
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SAXTransformerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.transform::Templates
	
		[result]
		org.xml.sax::XMLFilter
	}
}