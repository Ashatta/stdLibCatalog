[Package]
Name: javax.security.sasl
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/package-summary.html
Containing package: null
attributes {
}

Subpackages {
}

[Classifier]
public interface SaslClient
Name: SaslClient
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	String getMechanismName()
	Name: getMechanismName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#getMechanismName--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean hasInitialResponse()
	Name: hasInitialResponse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#hasInitialResponse--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	byte[] evaluateChallenge(byte[] challenge)
	                  throws SaslException
	Name: evaluateChallenge
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#evaluateChallenge-byte:A-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	boolean isComplete()
	Name: isComplete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#isComplete--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	byte[] unwrap(byte[] incoming,
	              int offset,
	              int len)
	       throws SaslException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#unwrap-byte:A-int-int-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	byte[] wrap(byte[] outgoing,
	            int offset,
	            int len)
	     throws SaslException
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#wrap-byte:A-int-int-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Object getNegotiatedProperty(String propName)
	Name: getNegotiatedProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#getNegotiatedProperty-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void dispose()
	      throws SaslException
	Name: dispose
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClient.html#dispose--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClient
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public interface SaslClientFactory
Name: SaslClientFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClientFactory.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	SaslClient createSaslClient(String[] mechanisms,
	                            String authorizationId,
	                            String protocol,
	                            String serverName,
	                            Map<String,?> props,
	                            CallbackHandler cbh)
	                     throws SaslException
	Name: createSaslClient
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClientFactory.html#createSaslClient-java.lang.String:A-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClientFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
		java.lang::String
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			?
		}
		javax.security.auth.callback::CallbackHandler
	
		[result]
		javax.security.sasl::SaslClient
	}

	[Function]
	String[] getMechanismNames(Map<String,?> props)
	Name: getMechanismNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClientFactory.html#getMechanismNames-java.util.Map-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslClientFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			?
		}
	
		[result]
		other::[] {
			java.lang::String
		}
	}
}

[Classifier]
public interface SaslServer
Name: SaslServer
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	String getMechanismName()
	Name: getMechanismName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#getMechanismName--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	byte[] evaluateResponse(byte[] response)
	                 throws SaslException
	Name: evaluateResponse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#evaluateResponse-byte:A-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	boolean isComplete()
	Name: isComplete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#isComplete--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	String getAuthorizationID()
	Name: getAuthorizationID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#getAuthorizationID--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	byte[] unwrap(byte[] incoming,
	              int offset,
	              int len)
	       throws SaslException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#unwrap-byte:A-int-int-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	byte[] wrap(byte[] outgoing,
	            int offset,
	            int len)
	     throws SaslException
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#wrap-byte:A-int-int-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
		other::int
		other::int
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	Object getNegotiatedProperty(String propName)
	Name: getNegotiatedProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#getNegotiatedProperty-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void dispose()
	      throws SaslException
	Name: dispose
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#dispose--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServer
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public interface SaslServerFactory
Name: SaslServerFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServerFactory.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	SaslServer createSaslServer(String mechanism,
	                            String protocol,
	                            String serverName,
	                            Map<String,?> props,
	                            CallbackHandler cbh)
	                     throws SaslException
	Name: createSaslServer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServerFactory.html#createSaslServer-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			?
		}
		javax.security.auth.callback::CallbackHandler
	
		[result]
		javax.security.sasl::SaslServer
	}

	[Function]
	String[] getMechanismNames(Map<String,?> props)
	Name: getMechanismNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServerFactory.html#getMechanismNames-java.util.Map-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslServerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			?
		}
	
		[result]
		other::[] {
			java.lang::String
		}
	}
}

[Classifier]
public class AuthorizeCallback
extends Object
implements Callback, Serializable
Name: AuthorizeCallback
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.security.auth.callback::Callback
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public AuthorizeCallback(String authnID,
	                         String authzID)
	Name: AuthorizeCallback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#AuthorizeCallback-java.lang.String-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.security.sasl::AuthorizeCallback
	}

	[Function]
	public String getAuthenticationID()
	Name: getAuthenticationID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#getAuthenticationID--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getAuthorizationID()
	Name: getAuthorizationID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#getAuthorizationID--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isAuthorized()
	Name: isAuthorized
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#isAuthorized--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void setAuthorized(boolean ok)
	Name: setAuthorized
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#setAuthorized-boolean-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public String getAuthorizedID()
	Name: getAuthorizedID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#getAuthorizedID--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setAuthorizedID(String id)
	Name: setAuthorizedID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthorizeCallback.html#setAuthorizedID-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AuthorizeCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}
}

[Classifier]
public class RealmCallback
extends TextInputCallback
Name: RealmCallback
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/RealmCallback.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.security.auth.callback::TextInputCallback
}
members {

	[Function]
	public RealmCallback(String prompt)
	Name: RealmCallback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/RealmCallback.html#RealmCallback-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RealmCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.security.sasl::RealmCallback
	}

	[Function]
	public RealmCallback(String prompt,
	                     String defaultRealmInfo)
	Name: RealmCallback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/RealmCallback.html#RealmCallback-java.lang.String-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RealmCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.security.sasl::RealmCallback
	}
}

[Classifier]
public class RealmChoiceCallback
extends ChoiceCallback
Name: RealmChoiceCallback
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/RealmChoiceCallback.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.security.auth.callback::ChoiceCallback
}
members {

	[Function]
	public RealmChoiceCallback(String prompt,
	                           String[] choices,
	                           int defaultChoice,
	                           boolean multiple)
	Name: RealmChoiceCallback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/RealmChoiceCallback.html#RealmChoiceCallback-java.lang.String-java.lang.String:A-int-boolean-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RealmChoiceCallback
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.lang::String
		}
		other::int
		other::boolean
	
		[result]
		javax.security.sasl::RealmChoiceCallback
	}
}

[Classifier]
public class Sasl
extends Object
Name: Sasl
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final String QOP
	Name: QOP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#QOP
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String STRENGTH
	Name: STRENGTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#STRENGTH
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String SERVER_AUTH
	Name: SERVER_AUTH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#SERVER_AUTH
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String BOUND_SERVER_NAME
	Name: BOUND_SERVER_NAME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#BOUND_SERVER_NAME
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String MAX_BUFFER
	Name: MAX_BUFFER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#MAX_BUFFER
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String RAW_SEND_SIZE
	Name: RAW_SEND_SIZE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#RAW_SEND_SIZE
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String REUSE
	Name: REUSE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#REUSE
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_NOPLAINTEXT
	Name: POLICY_NOPLAINTEXT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_NOPLAINTEXT
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_NOACTIVE
	Name: POLICY_NOACTIVE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_NOACTIVE
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_NODICTIONARY
	Name: POLICY_NODICTIONARY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_NODICTIONARY
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_NOANONYMOUS
	Name: POLICY_NOANONYMOUS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_NOANONYMOUS
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_FORWARD_SECRECY
	Name: POLICY_FORWARD_SECRECY
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_FORWARD_SECRECY
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String POLICY_PASS_CREDENTIALS
	Name: POLICY_PASS_CREDENTIALS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#POLICY_PASS_CREDENTIALS
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String CREDENTIALS
	Name: CREDENTIALS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#CREDENTIALS
	Containing package: javax.security.sasl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static SaslClient createSaslClient(String[] mechanisms,
	                                          String authorizationId,
	                                          String protocol,
	                                          String serverName,
	                                          Map<String,?> props,
	                                          CallbackHandler cbh)
	                                   throws SaslException
	Name: createSaslClient
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#createSaslClient-java.lang.String:A-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
		java.lang::String
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			?
		}
		javax.security.auth.callback::CallbackHandler
	
		[result]
		javax.security.sasl::SaslClient
	}

	[Function]
	public static SaslServer createSaslServer(String mechanism,
	                                          String protocol,
	                                          String serverName,
	                                          Map<String,?> props,
	                                          CallbackHandler cbh)
	                                   throws SaslException
	Name: createSaslServer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#createSaslServer-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::String
		java.util::Map {
			java.lang::String
			?
		}
		javax.security.auth.callback::CallbackHandler
	
		[result]
		javax.security.sasl::SaslServer
	}

	[Function]
	public static Enumeration<SaslClientFactory> getSaslClientFactories()
	Name: getSaslClientFactories
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#getSaslClientFactories--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			javax.security.sasl::SaslClientFactory
		}
	}

	[Function]
	public static Enumeration<SaslServerFactory> getSaslServerFactories()
	Name: getSaslServerFactories
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/Sasl.html#getSaslServerFactories--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Sasl
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			javax.security.sasl::SaslServerFactory
		}
	}
}

[Classifier]
public class AuthenticationException
extends SaslException
Name: AuthenticationException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthenticationException.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.security.sasl::SaslException
}
members {

	[Function]
	public AuthenticationException()
	Name: AuthenticationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthenticationException.html#AuthenticationException--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AuthenticationException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.security.sasl::AuthenticationException
	}

	[Function]
	public AuthenticationException(String detail)
	Name: AuthenticationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthenticationException.html#AuthenticationException-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AuthenticationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.security.sasl::AuthenticationException
	}

	[Function]
	public AuthenticationException(String detail,
	                               Throwable ex)
	Name: AuthenticationException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/AuthenticationException.html#AuthenticationException-java.lang.String-java.lang.Throwable-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AuthenticationException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.security.sasl::AuthenticationException
	}
}

[Classifier]
public class SaslException
extends IOException
Name: SaslException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html
Containing package: javax.security.sasl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.security.sasl::AuthenticationException
}
supertypes {
	java.io::IOException
}
members {

	[Function]
	public SaslException()
	Name: SaslException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#SaslException--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.security.sasl::SaslException
	}

	[Function]
	public SaslException(String detail)
	Name: SaslException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#SaslException-java.lang.String-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.security.sasl::SaslException
	}

	[Function]
	public SaslException(String detail,
	                     Throwable ex)
	Name: SaslException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#SaslException-java.lang.String-java.lang.Throwable-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.security.sasl::SaslException
	}

	[Function]
	public Throwable getCause()
	Name: getCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#getCause--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public Throwable initCause(Throwable cause)
	Name: initCause
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#initCause-java.lang.Throwable-
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslException.html#toString--
	Containing package: javax.security.sasl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SaslException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}