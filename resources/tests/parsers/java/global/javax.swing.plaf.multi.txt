[Package]
Name: javax.swing.plaf.multi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/package-summary.html
Containing package: javax.swing.plaf
attributes {
}

Subpackages {
}

[Classifier]
public class MultiButtonUI
extends ButtonUI
Name: MultiButtonUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ButtonUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiButtonUI()
	Name: MultiButtonUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#MultiButtonUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiButtonUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiButtonUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiButtonUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiColorChooserUI
extends ColorChooserUI
Name: MultiColorChooserUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ColorChooserUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiColorChooserUI()
	Name: MultiColorChooserUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#MultiColorChooserUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiColorChooserUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiColorChooserUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiColorChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiComboBoxUI
extends ComboBoxUI
Name: MultiComboBoxUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ComboBoxUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiComboBoxUI()
	Name: MultiComboBoxUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#MultiComboBoxUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiComboBoxUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean isFocusTraversable(JComboBox a)
	Name: isFocusTraversable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#isFocusTraversable-javax.swing.JComboBox-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
	
		[result]
		other::boolean
	}

	[Function]
	public void setPopupVisible(JComboBox a,
	                            boolean b)
	Name: setPopupVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#setPopupVisible-javax.swing.JComboBox-boolean-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean isPopupVisible(JComboBox a)
	Name: isPopupVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#isPopupVisible-javax.swing.JComboBox-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComboBox
	
		[result]
		other::boolean
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiComboBoxUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiComboBoxUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiDesktopIconUI
extends DesktopIconUI
Name: MultiDesktopIconUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::DesktopIconUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiDesktopIconUI()
	Name: MultiDesktopIconUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#MultiDesktopIconUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiDesktopIconUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopIconUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopIconUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiDesktopPaneUI
extends DesktopPaneUI
Name: MultiDesktopPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::DesktopPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiDesktopPaneUI()
	Name: MultiDesktopPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#MultiDesktopPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiDesktopPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiDesktopPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiDesktopPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiFileChooserUI
extends FileChooserUI
Name: MultiFileChooserUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::FileChooserUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiFileChooserUI()
	Name: MultiFileChooserUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#MultiFileChooserUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiFileChooserUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public FileFilter getAcceptAllFileFilter(JFileChooser a)
	Name: getAcceptAllFileFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getAcceptAllFileFilter-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		javax.swing.filechooser::FileFilter
	}

	[Function]
	public FileView getFileView(JFileChooser a)
	Name: getFileView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getFileView-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		javax.swing.filechooser::FileView
	}

	[Function]
	public String getApproveButtonText(JFileChooser a)
	Name: getApproveButtonText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getApproveButtonText-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		java.lang::String
	}

	[Function]
	public String getDialogTitle(JFileChooser a)
	Name: getDialogTitle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getDialogTitle-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		java.lang::String
	}

	[Function]
	public void rescanCurrentDirectory(JFileChooser a)
	Name: rescanCurrentDirectory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#rescanCurrentDirectory-javax.swing.JFileChooser-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
	
		[result]
		other::void
	}

	[Function]
	public void ensureFileIsVisible(JFileChooser a,
	                                File b)
	Name: ensureFileIsVisible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#ensureFileIsVisible-javax.swing.JFileChooser-java.io.File-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JFileChooser
		java.io::File
	
		[result]
		other::void
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiFileChooserUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiFileChooserUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiInternalFrameUI
extends InternalFrameUI
Name: MultiInternalFrameUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::InternalFrameUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiInternalFrameUI()
	Name: MultiInternalFrameUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#MultiInternalFrameUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiInternalFrameUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiInternalFrameUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiInternalFrameUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiLabelUI
extends LabelUI
Name: MultiLabelUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::LabelUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiLabelUI()
	Name: MultiLabelUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#MultiLabelUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiLabelUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLabelUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLabelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiListUI
extends ListUI
Name: MultiListUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ListUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiListUI()
	Name: MultiListUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#MultiListUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiListUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public int locationToIndex(JList a,
	                           Point b)
	Name: locationToIndex
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#locationToIndex-javax.swing.JList-java.awt.Point-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		java.awt::Point
	
		[result]
		other::int
	}

	[Function]
	public Point indexToLocation(JList a,
	                             int b)
	Name: indexToLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#indexToLocation-javax.swing.JList-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		other::int
	
		[result]
		java.awt::Point
	}

	[Function]
	public Rectangle getCellBounds(JList a,
	                               int b,
	                               int c)
	Name: getCellBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getCellBounds-javax.swing.JList-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JList
		other::int
		other::int
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiListUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiListUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiLookAndFeel
extends LookAndFeel
Name: MultiLookAndFeel
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing::LookAndFeel
}
members {

	[Function]
	public MultiLookAndFeel()
	Name: MultiLookAndFeel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#MultiLookAndFeel--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiLookAndFeel
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#getName--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getID()
	Name: getID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#getID--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getDescription()
	Name: getDescription
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#getDescription--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isNativeLookAndFeel()
	Name: isNativeLookAndFeel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#isNativeLookAndFeel--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isSupportedLookAndFeel()
	Name: isSupportedLookAndFeel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#isSupportedLookAndFeel--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public UIDefaults getDefaults()
	Name: getDefaults
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#getDefaults--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing::UIDefaults
	}

	[Function]
	public static ComponentUI createUIs(ComponentUI mui,
	                                    Vector uis,
	                                    JComponent target)
	Name: createUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#createUIs-javax.swing.plaf.ComponentUI-java.util.Vector-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.plaf::ComponentUI
		java.util::Vector
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	protected static ComponentUI[] uisToArray(Vector uis)
	Name: uisToArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiLookAndFeel.html#uisToArray-java.util.Vector-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiLookAndFeel
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Vector
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}
}

[Classifier]
public class MultiMenuBarUI
extends MenuBarUI
Name: MultiMenuBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::MenuBarUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiMenuBarUI()
	Name: MultiMenuBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#MultiMenuBarUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiMenuBarUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuBarUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiMenuItemUI
extends MenuItemUI
Name: MultiMenuItemUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::MenuItemUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiMenuItemUI()
	Name: MultiMenuItemUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#MultiMenuItemUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiMenuItemUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiMenuItemUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiMenuItemUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiOptionPaneUI
extends OptionPaneUI
Name: MultiOptionPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::OptionPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiOptionPaneUI()
	Name: MultiOptionPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#MultiOptionPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiOptionPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public void selectInitialValue(JOptionPane a)
	Name: selectInitialValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#selectInitialValue-javax.swing.JOptionPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JOptionPane
	
		[result]
		other::void
	}

	[Function]
	public boolean containsCustomComponents(JOptionPane a)
	Name: containsCustomComponents
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#containsCustomComponents-javax.swing.JOptionPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JOptionPane
	
		[result]
		other::boolean
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiOptionPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiOptionPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiPanelUI
extends PanelUI
Name: MultiPanelUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::PanelUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiPanelUI()
	Name: MultiPanelUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#MultiPanelUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiPanelUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPanelUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPanelUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiPopupMenuUI
extends PopupMenuUI
Name: MultiPopupMenuUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::PopupMenuUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiPopupMenuUI()
	Name: MultiPopupMenuUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#MultiPopupMenuUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiPopupMenuUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean isPopupTrigger(MouseEvent a)
	Name: isPopupTrigger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#isPopupTrigger-java.awt.event.MouseEvent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt.event::MouseEvent
	
		[result]
		other::boolean
	}

	[Function]
	public Popup getPopup(JPopupMenu a,
	                      int b,
	                      int c)
	Name: getPopup
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getPopup-javax.swing.JPopupMenu-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JPopupMenu
		other::int
		other::int
	
		[result]
		javax.swing::Popup
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiPopupMenuUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiPopupMenuUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiProgressBarUI
extends ProgressBarUI
Name: MultiProgressBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ProgressBarUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiProgressBarUI()
	Name: MultiProgressBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#MultiProgressBarUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiProgressBarUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiProgressBarUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiProgressBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiRootPaneUI
extends RootPaneUI
Name: MultiRootPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::RootPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiRootPaneUI()
	Name: MultiRootPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#MultiRootPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiRootPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiRootPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiRootPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiScrollBarUI
extends ScrollBarUI
Name: MultiScrollBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ScrollBarUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiScrollBarUI()
	Name: MultiScrollBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#MultiScrollBarUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiScrollBarUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollBarUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiScrollPaneUI
extends ScrollPaneUI
Name: MultiScrollPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ScrollPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiScrollPaneUI()
	Name: MultiScrollPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#MultiScrollPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiScrollPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiScrollPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiScrollPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiSeparatorUI
extends SeparatorUI
Name: MultiSeparatorUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::SeparatorUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiSeparatorUI()
	Name: MultiSeparatorUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#MultiSeparatorUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiSeparatorUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSeparatorUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSeparatorUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiSliderUI
extends SliderUI
Name: MultiSliderUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::SliderUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiSliderUI()
	Name: MultiSliderUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#MultiSliderUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiSliderUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSliderUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSliderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiSpinnerUI
extends SpinnerUI
Name: MultiSpinnerUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::SpinnerUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiSpinnerUI()
	Name: MultiSpinnerUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#MultiSpinnerUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiSpinnerUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSpinnerUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSpinnerUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiSplitPaneUI
extends SplitPaneUI
Name: MultiSplitPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::SplitPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiSplitPaneUI()
	Name: MultiSplitPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#MultiSplitPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiSplitPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public void resetToPreferredSizes(JSplitPane a)
	Name: resetToPreferredSizes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#resetToPreferredSizes-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::void
	}

	[Function]
	public void setDividerLocation(JSplitPane a,
	                               int b)
	Name: setDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#setDividerLocation-javax.swing.JSplitPane-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
		other::int
	
		[result]
		other::void
	}

	[Function]
	public int getDividerLocation(JSplitPane a)
	Name: getDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public int getMinimumDividerLocation(JSplitPane a)
	Name: getMinimumDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getMinimumDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public int getMaximumDividerLocation(JSplitPane a)
	Name: getMaximumDividerLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getMaximumDividerLocation-javax.swing.JSplitPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
	
		[result]
		other::int
	}

	[Function]
	public void finishedPaintingChildren(JSplitPane a,
	                                     Graphics b)
	Name: finishedPaintingChildren
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#finishedPaintingChildren-javax.swing.JSplitPane-java.awt.Graphics-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JSplitPane
		java.awt::Graphics
	
		[result]
		other::void
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiSplitPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiSplitPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiTabbedPaneUI
extends TabbedPaneUI
Name: MultiTabbedPaneUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::TabbedPaneUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiTabbedPaneUI()
	Name: MultiTabbedPaneUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#MultiTabbedPaneUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiTabbedPaneUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public int tabForCoordinate(JTabbedPane a,
	                            int b,
	                            int c)
	Name: tabForCoordinate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#tabForCoordinate-javax.swing.JTabbedPane-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public Rectangle getTabBounds(JTabbedPane a,
	                              int b)
	Name: getTabBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getTabBounds-javax.swing.JTabbedPane-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
		other::int
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public int getTabRunCount(JTabbedPane a)
	Name: getTabRunCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getTabRunCount-javax.swing.JTabbedPane-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTabbedPane
	
		[result]
		other::int
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTabbedPaneUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTabbedPaneUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiTableHeaderUI
extends TableHeaderUI
Name: MultiTableHeaderUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::TableHeaderUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiTableHeaderUI()
	Name: MultiTableHeaderUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#MultiTableHeaderUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiTableHeaderUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableHeaderUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableHeaderUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiTableUI
extends TableUI
Name: MultiTableUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::TableUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiTableUI()
	Name: MultiTableUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#MultiTableUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiTableUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTableUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTableUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiTextUI
extends TextUI
Name: MultiTextUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::TextUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiTextUI()
	Name: MultiTextUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#MultiTextUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiTextUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public String getToolTipText(JTextComponent a,
	                             Point b)
	Name: getToolTipText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getToolTipText-javax.swing.text.JTextComponent-java.awt.Point-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
	
		[result]
		java.lang::String
	}

	[Function]
	public Rectangle modelToView(JTextComponent a,
	                             int b)
	                      throws BadLocationException
	Name: modelToView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#modelToView-javax.swing.text.JTextComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public Rectangle modelToView(JTextComponent a,
	                             int b,
	                             Position.Bias c)
	                      throws BadLocationException
	Name: modelToView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#modelToView-javax.swing.text.JTextComponent-int-javax.swing.text.Position.Bias-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		javax.swing.text::Position.Bias
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public int viewToModel(JTextComponent a,
	                       Point b)
	Name: viewToModel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#viewToModel-javax.swing.text.JTextComponent-java.awt.Point-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
	
		[result]
		other::int
	}

	[Function]
	public int viewToModel(JTextComponent a,
	                       Point b,
	                       Position.Bias[] c)
	Name: viewToModel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#viewToModel-javax.swing.text.JTextComponent-java.awt.Point-javax.swing.text.Position.Bias:A-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		java.awt::Point
		other::[] {
			javax.swing.text::Position.Bias
		}
	
		[result]
		other::int
	}

	[Function]
	public int getNextVisualPositionFrom(JTextComponent a,
	                                     int b,
	                                     Position.Bias c,
	                                     int d,
	                                     Position.Bias[] e)
	                              throws BadLocationException
	Name: getNextVisualPositionFrom
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getNextVisualPositionFrom-javax.swing.text.JTextComponent-int-javax.swing.text.Position.Bias-int-javax.swing.text.Position.Bias:A-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		javax.swing.text::Position.Bias
		other::int
		other::[] {
			javax.swing.text::Position.Bias
		}
	
		[result]
		other::int
	}

	[Function]
	public void damageRange(JTextComponent a,
	                        int b,
	                        int c)
	Name: damageRange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#damageRange-javax.swing.text.JTextComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void damageRange(JTextComponent a,
	                        int b,
	                        int c,
	                        Position.Bias d,
	                        Position.Bias e)
	Name: damageRange
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#damageRange-javax.swing.text.JTextComponent-int-int-javax.swing.text.Position.Bias-javax.swing.text.Position.Bias-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
		other::int
		other::int
		javax.swing.text::Position.Bias
		javax.swing.text::Position.Bias
	
		[result]
		other::void
	}

	[Function]
	public EditorKit getEditorKit(JTextComponent a)
	Name: getEditorKit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getEditorKit-javax.swing.text.JTextComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
	
		[result]
		javax.swing.text::EditorKit
	}

	[Function]
	public View getRootView(JTextComponent a)
	Name: getRootView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getRootView-javax.swing.text.JTextComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing.text::JTextComponent
	
		[result]
		javax.swing.text::View
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTextUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTextUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiToolBarUI
extends ToolBarUI
Name: MultiToolBarUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ToolBarUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiToolBarUI()
	Name: MultiToolBarUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#MultiToolBarUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiToolBarUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolBarUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolBarUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiToolTipUI
extends ToolTipUI
Name: MultiToolTipUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ToolTipUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiToolTipUI()
	Name: MultiToolTipUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#MultiToolTipUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiToolTipUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiToolTipUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiToolTipUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiTreeUI
extends TreeUI
Name: MultiTreeUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::TreeUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiTreeUI()
	Name: MultiTreeUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#MultiTreeUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiTreeUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public Rectangle getPathBounds(JTree a,
	                               TreePath b)
	Name: getPathBounds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getPathBounds-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		java.awt::Rectangle
	}

	[Function]
	public TreePath getPathForRow(JTree a,
	                              int b)
	Name: getPathForRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getPathForRow-javax.swing.JTree-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		other::int
	
		[result]
		javax.swing.tree::TreePath
	}

	[Function]
	public int getRowForPath(JTree a,
	                         TreePath b)
	Name: getRowForPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getRowForPath-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		other::int
	}

	[Function]
	public int getRowCount(JTree a)
	Name: getRowCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getRowCount-javax.swing.JTree-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::int
	}

	[Function]
	public TreePath getClosestPathForLocation(JTree a,
	                                          int b,
	                                          int c)
	Name: getClosestPathForLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getClosestPathForLocation-javax.swing.JTree-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		other::int
		other::int
	
		[result]
		javax.swing.tree::TreePath
	}

	[Function]
	public boolean isEditing(JTree a)
	Name: isEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#isEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::boolean
	}

	[Function]
	public boolean stopEditing(JTree a)
	Name: stopEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#stopEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::boolean
	}

	[Function]
	public void cancelEditing(JTree a)
	Name: cancelEditing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#cancelEditing-javax.swing.JTree-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		other::void
	}

	[Function]
	public void startEditingAtPath(JTree a,
	                               TreePath b)
	Name: startEditingAtPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#startEditingAtPath-javax.swing.JTree-javax.swing.tree.TreePath-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
		javax.swing.tree::TreePath
	
		[result]
		other::void
	}

	[Function]
	public TreePath getEditingPath(JTree a)
	Name: getEditingPath
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getEditingPath-javax.swing.JTree-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JTree
	
		[result]
		javax.swing.tree::TreePath
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiTreeUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiTreeUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}

[Classifier]
public class MultiViewportUI
extends ViewportUI
Name: MultiViewportUI
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html
Containing package: javax.swing.plaf.multi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.swing.plaf::ViewportUI
}
members {

	[Function]
	protected Vector uis
	Name: uis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#uis
	Containing package: javax.swing.plaf.multi
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Vector
	}

	[Function]
	public MultiViewportUI()
	Name: MultiViewportUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#MultiViewportUI--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.swing.plaf.multi::MultiViewportUI
	}

	[Function]
	public ComponentUI[] getUIs()
	Name: getUIs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getUIs--
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.swing.plaf::ComponentUI
		}
	}

	[Function]
	public boolean contains(JComponent a,
	                        int b,
	                        int c)
	Name: contains
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#contains-javax.swing.JComponent-int-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public void update(Graphics a,
	                   JComponent b)
	Name: update
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#update-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public static ComponentUI createUI(JComponent a)
	Name: createUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#createUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		javax.swing.plaf::ComponentUI
	}

	[Function]
	public void installUI(JComponent a)
	Name: installUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#installUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void uninstallUI(JComponent a)
	Name: uninstallUI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#uninstallUI-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public void paint(Graphics a,
	                  JComponent b)
	Name: paint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#paint-java.awt.Graphics-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.awt::Graphics
		javax.swing::JComponent
	
		[result]
		other::void
	}

	[Function]
	public Dimension getPreferredSize(JComponent a)
	Name: getPreferredSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getPreferredSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMinimumSize(JComponent a)
	Name: getMinimumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getMinimumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public Dimension getMaximumSize(JComponent a)
	Name: getMaximumSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getMaximumSize-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		java.awt::Dimension
	}

	[Function]
	public int getAccessibleChildrenCount(JComponent a)
	Name: getAccessibleChildrenCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getAccessibleChildrenCount-javax.swing.JComponent-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
	
		[result]
		other::int
	}

	[Function]
	public Accessible getAccessibleChild(JComponent a,
	                                     int b)
	Name: getAccessibleChild
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/multi/MultiViewportUI.html#getAccessibleChild-javax.swing.JComponent-int-
	Containing package: javax.swing.plaf.multi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MultiViewportUI
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.swing::JComponent
		other::int
	
		[result]
		javax.accessibility::Accessible
	}
}