[Package]
Name: org.omg.DynamicAny.DynAnyPackage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/package-summary.html
Containing package: org.omg.DynamicAny
attributes {
}

Subpackages {
}

[Classifier]
public abstract class InvalidValueHelper
extends Object
Name: InvalidValueHelper
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html
Containing package: org.omg.DynamicAny.DynAnyPackage
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public InvalidValueHelper()
	Name: InvalidValueHelper
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#InvalidValueHelper--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::InvalidValueHelper
	}

	[Function]
	public static void insert(Any a,
	                          InvalidValue that)
	Name: insert
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#insert-org.omg.CORBA.Any-org.omg.DynamicAny.DynAnyPackage.InvalidValue-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	
		[result]
		other::void
	}

	[Function]
	public static InvalidValue extract(Any a)
	Name: extract
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#extract-org.omg.CORBA.Any-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	}

	[Function]
	public static TypeCode type()
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#type--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.CORBA::TypeCode
	}

	[Function]
	public static String id()
	Name: id
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#id--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static InvalidValue read(InputStream istream)
	Name: read
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#read-org.omg.CORBA.portable.InputStream-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::InputStream
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	}

	[Function]
	public static void write(OutputStream ostream,
	                         InvalidValue value)
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.html#write-org.omg.CORBA.portable.OutputStream-org.omg.DynamicAny.DynAnyPackage.InvalidValue-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InvalidValueHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::OutputStream
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class TypeMismatchHelper
extends Object
Name: TypeMismatchHelper
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html
Containing package: org.omg.DynamicAny.DynAnyPackage
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public TypeMismatchHelper()
	Name: TypeMismatchHelper
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#TypeMismatchHelper--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::TypeMismatchHelper
	}

	[Function]
	public static void insert(Any a,
	                          TypeMismatch that)
	Name: insert
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#insert-org.omg.CORBA.Any-org.omg.DynamicAny.DynAnyPackage.TypeMismatch-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	
		[result]
		other::void
	}

	[Function]
	public static TypeMismatch extract(Any a)
	Name: extract
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#extract-org.omg.CORBA.Any-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	}

	[Function]
	public static TypeCode type()
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#type--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.CORBA::TypeCode
	}

	[Function]
	public static String id()
	Name: id
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#id--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static TypeMismatch read(InputStream istream)
	Name: read
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#read-org.omg.CORBA.portable.InputStream-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::InputStream
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	}

	[Function]
	public static void write(OutputStream ostream,
	                         TypeMismatch value)
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.html#write-org.omg.CORBA.portable.OutputStream-org.omg.DynamicAny.DynAnyPackage.TypeMismatch-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TypeMismatchHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::OutputStream
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	
		[result]
		other::void
	}
}

[Classifier]
public final class InvalidValue
extends UserException
Name: InvalidValue
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValue.html
Containing package: org.omg.DynamicAny.DynAnyPackage
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.omg.CORBA::UserException
}
members {

	[Function]
	public InvalidValue()
	Name: InvalidValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValue.html#InvalidValue--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidValue
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	}

	[Function]
	public InvalidValue(String $reason)
	Name: InvalidValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/InvalidValue.html#InvalidValue-java.lang.String-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidValue
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::InvalidValue
	}
}

[Classifier]
public final class TypeMismatch
extends UserException
Name: TypeMismatch
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.html
Containing package: org.omg.DynamicAny.DynAnyPackage
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.omg.CORBA::UserException
}
members {

	[Function]
	public TypeMismatch()
	Name: TypeMismatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.html#TypeMismatch--
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeMismatch
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	}

	[Function]
	public TypeMismatch(String $reason)
	Name: TypeMismatch
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.html#TypeMismatch-java.lang.String-
	Containing package: org.omg.DynamicAny.DynAnyPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TypeMismatch
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		org.omg.DynamicAny.DynAnyPackage::TypeMismatch
	}
}