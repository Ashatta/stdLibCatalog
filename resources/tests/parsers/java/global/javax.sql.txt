[Package]
Name: javax.sql
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/package-summary.html
Containing package: null
attributes {
}

Subpackages {
	javax.sql.rowset
}

[Classifier]
public interface CommonDataSource
Name: CommonDataSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql::XADataSource
	javax.sql::ConnectionPoolDataSource
	javax.sql::DataSource
}
supertypes {
}
members {

	[Function]
	PrintWriter getLogWriter()
	                  throws SQLException
	Name: getLogWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html#getLogWriter--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CommonDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::PrintWriter
	}

	[Function]
	void setLogWriter(PrintWriter out)
	           throws SQLException
	Name: setLogWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html#setLogWriter-java.io.PrintWriter-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CommonDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::PrintWriter
	
		[result]
		other::void
	}

	[Function]
	void setLoginTimeout(int seconds)
	              throws SQLException
	Name: setLoginTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html#setLoginTimeout-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CommonDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getLoginTimeout()
	             throws SQLException
	Name: getLoginTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html#getLoginTimeout--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CommonDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Logger getParentLogger()
	                throws SQLFeatureNotSupportedException
	Name: getParentLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/CommonDataSource.html#getParentLogger--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CommonDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}
}

[Classifier]
public interface ConnectionEventListener
extends EventListener
Name: ConnectionEventListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEventListener.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void connectionClosed(ConnectionEvent event)
	Name: connectionClosed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEventListener.html#connectionClosed-javax.sql.ConnectionEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConnectionEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::ConnectionEvent
	
		[result]
		other::void
	}

	[Function]
	void connectionErrorOccurred(ConnectionEvent event)
	Name: connectionErrorOccurred
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEventListener.html#connectionErrorOccurred-javax.sql.ConnectionEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConnectionEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::ConnectionEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface ConnectionPoolDataSource
extends CommonDataSource
Name: ConnectionPoolDataSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionPoolDataSource.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::CommonDataSource
}
members {

	[Function]
	PooledConnection getPooledConnection()
	                              throws SQLException
	Name: getPooledConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionPoolDataSource.html#getPooledConnection--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConnectionPoolDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql::PooledConnection
	}

	[Function]
	PooledConnection getPooledConnection(String user,
	                                     String password)
	                              throws SQLException
	Name: getPooledConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionPoolDataSource.html#getPooledConnection-java.lang.String-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConnectionPoolDataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.sql::PooledConnection
	}
}

[Classifier]
public interface DataSource
extends CommonDataSource, Wrapper
Name: DataSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/DataSource.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::CommonDataSource
	java.sql::Wrapper
}
members {

	[Function]
	Connection getConnection()
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/DataSource.html#getConnection--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Connection
	}

	[Function]
	Connection getConnection(String username,
	                         String password)
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/DataSource.html#getConnection-java.lang.String-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.sql::Connection
	}
}

[Classifier]
public interface PooledConnection
Name: PooledConnection
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql::XAConnection
}
supertypes {
}
members {

	[Function]
	Connection getConnection()
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#getConnection--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Connection
	}

	[Function]
	void close()
	    throws SQLException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#close--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void addConnectionEventListener(ConnectionEventListener listener)
	Name: addConnectionEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#addConnectionEventListener-javax.sql.ConnectionEventListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::ConnectionEventListener
	
		[result]
		other::void
	}

	[Function]
	void removeConnectionEventListener(ConnectionEventListener listener)
	Name: removeConnectionEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#removeConnectionEventListener-javax.sql.ConnectionEventListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::ConnectionEventListener
	
		[result]
		other::void
	}

	[Function]
	void addStatementEventListener(StatementEventListener listener)
	Name: addStatementEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#addStatementEventListener-javax.sql.StatementEventListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::StatementEventListener
	
		[result]
		other::void
	}

	[Function]
	void removeStatementEventListener(StatementEventListener listener)
	Name: removeStatementEventListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/PooledConnection.html#removeStatementEventListener-javax.sql.StatementEventListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: PooledConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::StatementEventListener
	
		[result]
		other::void
	}
}

[Classifier]
public interface RowSet
extends ResultSet
Name: RowSet
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset::JdbcRowSet
	javax.sql.rowset.spi::SyncResolver
	javax.sql.rowset::CachedRowSet
}
supertypes {
	java.sql::ResultSet
}
members {

	[Function]
	String getUrl()
	       throws SQLException
	Name: getUrl
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getUrl--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setUrl(String url)
	     throws SQLException
	Name: setUrl
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setUrl-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getDataSourceName()
	Name: getDataSourceName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getDataSourceName--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setDataSourceName(String name)
	                throws SQLException
	Name: setDataSourceName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDataSourceName-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getUsername()
	Name: getUsername
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getUsername--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setUsername(String name)
	          throws SQLException
	Name: setUsername
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setUsername-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getPassword()
	Name: getPassword
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getPassword--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setPassword(String password)
	          throws SQLException
	Name: setPassword
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setPassword-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	int getTransactionIsolation()
	Name: getTransactionIsolation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getTransactionIsolation--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setTransactionIsolation(int level)
	                      throws SQLException
	Name: setTransactionIsolation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTransactionIsolation-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	Map<String,Class<?>> getTypeMap()
	                         throws SQLException
	Name: getTypeMap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getTypeMap--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	}

	[Function]
	void setTypeMap(Map<String,Class<?>> map)
	         throws SQLException
	Name: setTypeMap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTypeMap-java.util.Map-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.lang::String
			java.lang::Class {
				?
			}
		}
	
		[result]
		other::void
	}

	[Function]
	String getCommand()
	Name: getCommand
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getCommand--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	void setCommand(String cmd)
	         throws SQLException
	Name: setCommand
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setCommand-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	boolean isReadOnly()
	Name: isReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#isReadOnly--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setReadOnly(boolean value)
	          throws SQLException
	Name: setReadOnly
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setReadOnly-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	int getMaxFieldSize()
	             throws SQLException
	Name: getMaxFieldSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getMaxFieldSize--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setMaxFieldSize(int max)
	              throws SQLException
	Name: setMaxFieldSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setMaxFieldSize-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getMaxRows()
	        throws SQLException
	Name: getMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getMaxRows--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setMaxRows(int max)
	         throws SQLException
	Name: setMaxRows
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setMaxRows-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	boolean getEscapeProcessing()
	                     throws SQLException
	Name: getEscapeProcessing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getEscapeProcessing--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void setEscapeProcessing(boolean enable)
	                  throws SQLException
	Name: setEscapeProcessing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setEscapeProcessing-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	int getQueryTimeout()
	             throws SQLException
	Name: getQueryTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#getQueryTimeout--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setQueryTimeout(int seconds)
	              throws SQLException
	Name: setQueryTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setQueryTimeout-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setType(int type)
	      throws SQLException
	Name: setType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setType-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setConcurrency(int concurrency)
	             throws SQLException
	Name: setConcurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setConcurrency-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setNull(int parameterIndex,
	             int sqlType)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNull-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setNull(String parameterName,
	             int sqlType)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNull-java.lang.String-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setNull(int paramIndex,
	             int sqlType,
	             String typeName)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNull-int-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setNull(String parameterName,
	             int sqlType,
	             String typeName)
	      throws SQLException
	Name: setNull
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNull-java.lang.String-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setBoolean(int parameterIndex,
	                boolean x)
	         throws SQLException
	Name: setBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBoolean-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setBoolean(String parameterName,
	                boolean x)
	         throws SQLException
	Name: setBoolean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBoolean-java.lang.String-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setByte(int parameterIndex,
	             byte x)
	      throws SQLException
	Name: setByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setByte-int-byte-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void setByte(String parameterName,
	             byte x)
	      throws SQLException
	Name: setByte
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setByte-java.lang.String-byte-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::byte
	
		[result]
		other::void
	}

	[Function]
	void setShort(int parameterIndex,
	              short x)
	       throws SQLException
	Name: setShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setShort-int-short-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::short
	
		[result]
		other::void
	}

	[Function]
	void setShort(String parameterName,
	              short x)
	       throws SQLException
	Name: setShort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setShort-java.lang.String-short-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::short
	
		[result]
		other::void
	}

	[Function]
	void setInt(int parameterIndex,
	            int x)
	     throws SQLException
	Name: setInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setInt-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setInt(String parameterName,
	            int x)
	     throws SQLException
	Name: setInt
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setInt-java.lang.String-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setLong(int parameterIndex,
	             long x)
	      throws SQLException
	Name: setLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setLong-int-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setLong(String parameterName,
	             long x)
	      throws SQLException
	Name: setLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setLong-java.lang.String-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setFloat(int parameterIndex,
	              float x)
	       throws SQLException
	Name: setFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setFloat-int-float-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::float
	
		[result]
		other::void
	}

	[Function]
	void setFloat(String parameterName,
	              float x)
	       throws SQLException
	Name: setFloat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setFloat-java.lang.String-float-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::float
	
		[result]
		other::void
	}

	[Function]
	void setDouble(int parameterIndex,
	               double x)
	        throws SQLException
	Name: setDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDouble-int-double-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::double
	
		[result]
		other::void
	}

	[Function]
	void setDouble(String parameterName,
	               double x)
	        throws SQLException
	Name: setDouble
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDouble-java.lang.String-double-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::double
	
		[result]
		other::void
	}

	[Function]
	void setBigDecimal(int parameterIndex,
	                   BigDecimal x)
	            throws SQLException
	Name: setBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBigDecimal-int-java.math.BigDecimal-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void setBigDecimal(String parameterName,
	                   BigDecimal x)
	            throws SQLException
	Name: setBigDecimal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBigDecimal-java.lang.String-java.math.BigDecimal-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.math::BigDecimal
	
		[result]
		other::void
	}

	[Function]
	void setString(int parameterIndex,
	               String x)
	        throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setString-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setString(String parameterName,
	               String x)
	        throws SQLException
	Name: setString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setString-java.lang.String-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setBytes(int parameterIndex,
	              byte[] x)
	       throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBytes-int-byte:A-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void setBytes(String parameterName,
	              byte[] x)
	       throws SQLException
	Name: setBytes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBytes-java.lang.String-byte:A-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			other::byte
		}
	
		[result]
		other::void
	}

	[Function]
	void setDate(int parameterIndex,
	             Date x)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDate-int-java.sql.Date-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void setTime(int parameterIndex,
	             Time x)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTime-int-java.sql.Time-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(int parameterIndex,
	                  Timestamp x)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTimestamp-int-java.sql.Timestamp-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(String parameterName,
	                  Timestamp x)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTimestamp-java.lang.String-java.sql.Timestamp-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Timestamp
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(int parameterIndex,
	                    InputStream x,
	                    int length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setAsciiStream-int-java.io.InputStream-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(String parameterName,
	                    InputStream x,
	                    int length)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setAsciiStream-java.lang.String-java.io.InputStream-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(int parameterIndex,
	                     InputStream x,
	                     int length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBinaryStream-int-java.io.InputStream-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(String parameterName,
	                     InputStream x,
	                     int length)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBinaryStream-java.lang.String-java.io.InputStream-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(int parameterIndex,
	                        Reader reader,
	                        int length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setCharacterStream-int-java.io.Reader-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(String parameterName,
	                        Reader reader,
	                        int length)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setCharacterStream-java.lang.String-java.io.Reader-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(int parameterIndex,
	                    InputStream x)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setAsciiStream-int-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setAsciiStream(String parameterName,
	                    InputStream x)
	             throws SQLException
	Name: setAsciiStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setAsciiStream-java.lang.String-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(int parameterIndex,
	                     InputStream x)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBinaryStream-int-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setBinaryStream(String parameterName,
	                     InputStream x)
	              throws SQLException
	Name: setBinaryStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBinaryStream-java.lang.String-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(int parameterIndex,
	                        Reader reader)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setCharacterStream-int-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setCharacterStream(String parameterName,
	                        Reader reader)
	                 throws SQLException
	Name: setCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setCharacterStream-java.lang.String-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(int parameterIndex,
	                         Reader value)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNCharacterStream-int-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x,
	               int targetSqlType,
	               int scaleOrLength)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-int-java.lang.Object-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x,
	               int targetSqlType,
	               int scale)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-java.lang.String-java.lang.Object-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x,
	               int targetSqlType)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-int-java.lang.Object-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x,
	               int targetSqlType)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-java.lang.String-java.lang.Object-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setObject(String parameterName,
	               Object x)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-java.lang.String-java.lang.Object-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void setObject(int parameterIndex,
	               Object x)
	        throws SQLException
	Name: setObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setObject-int-java.lang.Object-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void setRef(int i,
	            Ref x)
	     throws SQLException
	Name: setRef
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setRef-int-java.sql.Ref-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Ref
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int i,
	             Blob x)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-int-java.sql.Blob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int parameterIndex,
	             InputStream inputStream,
	             long length)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-int-java.io.InputStream-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBlob(int parameterIndex,
	             InputStream inputStream)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-int-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setBlob(String parameterName,
	             InputStream inputStream,
	             long length)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-java.lang.String-java.io.InputStream-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setBlob(String parameterName,
	             Blob x)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-java.lang.String-java.sql.Blob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Blob
	
		[result]
		other::void
	}

	[Function]
	void setBlob(String parameterName,
	             InputStream inputStream)
	      throws SQLException
	Name: setBlob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setBlob-java.lang.String-java.io.InputStream-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	void setClob(int i,
	             Clob x)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-int-java.sql.Clob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void setClob(int parameterIndex,
	             Reader reader,
	             long length)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-int-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setClob(int parameterIndex,
	             Reader reader)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-int-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Reader reader,
	             long length)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-java.lang.String-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Clob x)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-java.lang.String-java.sql.Clob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Clob
	
		[result]
		other::void
	}

	[Function]
	void setClob(String parameterName,
	             Reader reader)
	      throws SQLException
	Name: setClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setClob-java.lang.String-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setArray(int i,
	              Array x)
	       throws SQLException
	Name: setArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setArray-int-java.sql.Array-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Array
	
		[result]
		other::void
	}

	[Function]
	void setDate(int parameterIndex,
	             Date x,
	             Calendar cal)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDate-int-java.sql.Date-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Date
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setDate(String parameterName,
	             Date x)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDate-java.lang.String-java.sql.Date-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Date
	
		[result]
		other::void
	}

	[Function]
	void setDate(String parameterName,
	             Date x,
	             Calendar cal)
	      throws SQLException
	Name: setDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setDate-java.lang.String-java.sql.Date-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Date
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTime(int parameterIndex,
	             Time x,
	             Calendar cal)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTime-int-java.sql.Time-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Time
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTime(String parameterName,
	             Time x)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTime-java.lang.String-java.sql.Time-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Time
	
		[result]
		other::void
	}

	[Function]
	void setTime(String parameterName,
	             Time x,
	             Calendar cal)
	      throws SQLException
	Name: setTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTime-java.lang.String-java.sql.Time-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Time
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(int parameterIndex,
	                  Timestamp x,
	                  Calendar cal)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTimestamp-int-java.sql.Timestamp-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::Timestamp
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void setTimestamp(String parameterName,
	                  Timestamp x,
	                  Calendar cal)
	           throws SQLException
	Name: setTimestamp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setTimestamp-java.lang.String-java.sql.Timestamp-java.util.Calendar-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::Timestamp
		java.util::Calendar
	
		[result]
		other::void
	}

	[Function]
	void clearParameters()
	              throws SQLException
	Name: clearParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#clearParameters--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void execute()
	      throws SQLException
	Name: execute
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#execute--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void addRowSetListener(RowSetListener listener)
	Name: addRowSetListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#addRowSetListener-javax.sql.RowSetListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetListener
	
		[result]
		other::void
	}

	[Function]
	void removeRowSetListener(RowSetListener listener)
	Name: removeRowSetListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#removeRowSetListener-javax.sql.RowSetListener-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetListener
	
		[result]
		other::void
	}

	[Function]
	void setSQLXML(int parameterIndex,
	               SQLXML xmlObject)
	        throws SQLException
	Name: setSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setSQLXML-int-java.sql.SQLXML-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	void setSQLXML(String parameterName,
	               SQLXML xmlObject)
	        throws SQLException
	Name: setSQLXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setSQLXML-java.lang.String-java.sql.SQLXML-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::SQLXML
	
		[result]
		other::void
	}

	[Function]
	void setRowId(int parameterIndex,
	              RowId x)
	       throws SQLException
	Name: setRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setRowId-int-java.sql.RowId-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void setRowId(String parameterName,
	              RowId x)
	       throws SQLException
	Name: setRowId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setRowId-java.lang.String-java.sql.RowId-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::RowId
	
		[result]
		other::void
	}

	[Function]
	void setNString(int parameterIndex,
	                String value)
	         throws SQLException
	Name: setNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNString-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setNString(String parameterName,
	                String value)
	         throws SQLException
	Name: setNString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNString-java.lang.String-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(int parameterIndex,
	                         Reader value,
	                         long length)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNCharacterStream-int-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(String parameterName,
	                         Reader value,
	                         long length)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNCharacterStream-java.lang.String-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNCharacterStream(String parameterName,
	                         Reader value)
	                  throws SQLException
	Name: setNCharacterStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNCharacterStream-java.lang.String-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              NClob value)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-java.lang.String-java.sql.NClob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              Reader reader,
	              long length)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-java.lang.String-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(String parameterName,
	              Reader reader)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-java.lang.String-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              Reader reader,
	              long length)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-int-java.io.Reader-long-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
		other::long
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              NClob value)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-int-java.sql.NClob-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.sql::NClob
	
		[result]
		other::void
	}

	[Function]
	void setNClob(int parameterIndex,
	              Reader reader)
	       throws SQLException
	Name: setNClob
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setNClob-int-java.io.Reader-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.io::Reader
	
		[result]
		other::void
	}

	[Function]
	void setURL(int parameterIndex,
	            URL x)
	     throws SQLException
	Name: setURL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSet.html#setURL-int-java.net.URL-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSet
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.net::URL
	
		[result]
		other::void
	}
}

[Classifier]
public interface RowSetInternal
Name: RowSetInternal
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	Object[] getParams()
	            throws SQLException
	Name: getParams
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html#getParams--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetInternal
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::Object
		}
	}

	[Function]
	Connection getConnection()
	                  throws SQLException
	Name: getConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html#getConnection--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetInternal
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::Connection
	}

	[Function]
	void setMetaData(RowSetMetaData md)
	          throws SQLException
	Name: setMetaData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html#setMetaData-javax.sql.RowSetMetaData-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetInternal
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetMetaData
	
		[result]
		other::void
	}

	[Function]
	ResultSet getOriginal()
	               throws SQLException
	Name: getOriginal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html#getOriginal--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetInternal
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}

	[Function]
	ResultSet getOriginalRow()
	                  throws SQLException
	Name: getOriginalRow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetInternal.html#getOriginalRow--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetInternal
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::ResultSet
	}
}

[Classifier]
public interface RowSetListener
extends EventListener
Name: RowSetListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetListener.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void rowSetChanged(RowSetEvent event)
	Name: rowSetChanged
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetListener.html#rowSetChanged-javax.sql.RowSetEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetEvent
	
		[result]
		other::void
	}

	[Function]
	void rowChanged(RowSetEvent event)
	Name: rowChanged
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetListener.html#rowChanged-javax.sql.RowSetEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetEvent
	
		[result]
		other::void
	}

	[Function]
	void cursorMoved(RowSetEvent event)
	Name: cursorMoved
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetListener.html#cursorMoved-javax.sql.RowSetEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface RowSetMetaData
extends ResultSetMetaData
Name: RowSetMetaData
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset::RowSetMetaDataImpl
}
supertypes {
	java.sql::ResultSetMetaData
}
members {

	[Function]
	void setColumnCount(int columnCount)
	             throws SQLException
	Name: setColumnCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnCount-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setAutoIncrement(int columnIndex,
	                      boolean property)
	               throws SQLException
	Name: setAutoIncrement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setAutoIncrement-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setCaseSensitive(int columnIndex,
	                      boolean property)
	               throws SQLException
	Name: setCaseSensitive
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setCaseSensitive-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setSearchable(int columnIndex,
	                   boolean property)
	            throws SQLException
	Name: setSearchable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setSearchable-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setCurrency(int columnIndex,
	                 boolean property)
	          throws SQLException
	Name: setCurrency
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setCurrency-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setNullable(int columnIndex,
	                 int property)
	          throws SQLException
	Name: setNullable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setNullable-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setSigned(int columnIndex,
	               boolean property)
	        throws SQLException
	Name: setSigned
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setSigned-int-boolean-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	void setColumnDisplaySize(int columnIndex,
	                          int size)
	                   throws SQLException
	Name: setColumnDisplaySize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnDisplaySize-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setColumnLabel(int columnIndex,
	                    String label)
	             throws SQLException
	Name: setColumnLabel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnLabel-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setColumnName(int columnIndex,
	                   String columnName)
	            throws SQLException
	Name: setColumnName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnName-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setSchemaName(int columnIndex,
	                   String schemaName)
	            throws SQLException
	Name: setSchemaName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setSchemaName-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setPrecision(int columnIndex,
	                  int precision)
	           throws SQLException
	Name: setPrecision
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setPrecision-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setScale(int columnIndex,
	              int scale)
	       throws SQLException
	Name: setScale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setScale-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setTableName(int columnIndex,
	                  String tableName)
	           throws SQLException
	Name: setTableName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setTableName-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setCatalogName(int columnIndex,
	                    String catalogName)
	             throws SQLException
	Name: setCatalogName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setCatalogName-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void setColumnType(int columnIndex,
	                   int SQLType)
	            throws SQLException
	Name: setColumnType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnType-int-int-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		other::void
	}

	[Function]
	void setColumnTypeName(int columnIndex,
	                       String typeName)
	                throws SQLException
	Name: setColumnTypeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetMetaData.html#setColumnTypeName-int-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetMetaData
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
	
		[result]
		other::void
	}
}

[Classifier]
public interface RowSetReader
Name: RowSetReader
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetReader.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.spi::XmlReader
}
supertypes {
}
members {

	[Function]
	void readData(RowSetInternal caller)
	       throws SQLException
	Name: readData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetReader.html#readData-javax.sql.RowSetInternal-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetInternal
	
		[result]
		other::void
	}
}

[Classifier]
public interface RowSetWriter
Name: RowSetWriter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetWriter.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.sql.rowset.spi::XmlWriter
	javax.sql.rowset.spi::TransactionalWriter
}
supertypes {
}
members {

	[Function]
	boolean writeData(RowSetInternal caller)
	           throws SQLException
	Name: writeData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetWriter.html#writeData-javax.sql.RowSetInternal-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: RowSetWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSetInternal
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface StatementEventListener
extends EventListener
Name: StatementEventListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEventListener.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void statementClosed(StatementEvent event)
	Name: statementClosed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEventListener.html#statementClosed-javax.sql.StatementEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StatementEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::StatementEvent
	
		[result]
		other::void
	}

	[Function]
	void statementErrorOccurred(StatementEvent event)
	Name: statementErrorOccurred
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEventListener.html#statementErrorOccurred-javax.sql.StatementEvent-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StatementEventListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::StatementEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface XAConnection
extends PooledConnection
Name: XAConnection
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/XAConnection.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::PooledConnection
}
members {

	[Function]
	XAResource getXAResource()
	                  throws SQLException
	Name: getXAResource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/XAConnection.html#getXAResource--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XAConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.transaction.xa::XAResource
	}
}

[Classifier]
public interface XADataSource
extends CommonDataSource
Name: XADataSource
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/XADataSource.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::CommonDataSource
}
members {

	[Function]
	XAConnection getXAConnection()
	                      throws SQLException
	Name: getXAConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/XADataSource.html#getXAConnection--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XADataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql::XAConnection
	}

	[Function]
	XAConnection getXAConnection(String user,
	                             String password)
	                      throws SQLException
	Name: getXAConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/XADataSource.html#getXAConnection-java.lang.String-java.lang.String-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XADataSource
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.sql::XAConnection
	}
}

[Classifier]
public class ConnectionEvent
extends EventObject
Name: ConnectionEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEvent.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public ConnectionEvent(PooledConnection con)
	Name: ConnectionEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEvent.html#ConnectionEvent-javax.sql.PooledConnection-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ConnectionEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::PooledConnection
	
		[result]
		javax.sql::ConnectionEvent
	}

	[Function]
	public ConnectionEvent(PooledConnection con,
	                       SQLException ex)
	Name: ConnectionEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEvent.html#ConnectionEvent-javax.sql.PooledConnection-java.sql.SQLException-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ConnectionEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::PooledConnection
		java.sql::SQLException
	
		[result]
		javax.sql::ConnectionEvent
	}

	[Function]
	public SQLException getSQLException()
	Name: getSQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/ConnectionEvent.html#getSQLException--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConnectionEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLException
	}
}

[Classifier]
public class RowSetEvent
extends EventObject
Name: RowSetEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetEvent.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public RowSetEvent(RowSet source)
	Name: RowSetEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/RowSetEvent.html#RowSetEvent-javax.sql.RowSet-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: RowSetEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::RowSet
	
		[result]
		javax.sql::RowSetEvent
	}
}

[Classifier]
public class StatementEvent
extends EventObject
Name: StatementEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEvent.html
Containing package: javax.sql
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public StatementEvent(PooledConnection con,
	                      PreparedStatement statement)
	Name: StatementEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEvent.html#StatementEvent-javax.sql.PooledConnection-java.sql.PreparedStatement-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StatementEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::PooledConnection
		java.sql::PreparedStatement
	
		[result]
		javax.sql::StatementEvent
	}

	[Function]
	public StatementEvent(PooledConnection con,
	                      PreparedStatement statement,
	                      SQLException exception)
	Name: StatementEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEvent.html#StatementEvent-javax.sql.PooledConnection-java.sql.PreparedStatement-java.sql.SQLException-
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StatementEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql::PooledConnection
		java.sql::PreparedStatement
		java.sql::SQLException
	
		[result]
		javax.sql::StatementEvent
	}

	[Function]
	public PreparedStatement getStatement()
	Name: getStatement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEvent.html#getStatement--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StatementEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::PreparedStatement
	}

	[Function]
	public SQLException getSQLException()
	Name: getSQLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/StatementEvent.html#getSQLException--
	Containing package: javax.sql
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StatementEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.sql::SQLException
	}
}