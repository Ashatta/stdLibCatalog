[Package]
Name: java.util.logging
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/package-summary.html
Containing package: java.util
attributes {
}

Subpackages {
}

[Classifier]
@FunctionalInterface
public interface Filter
Name: Filter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Filter.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	boolean isLoggable(LogRecord record)
	Name: isLoggable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Filter.html#isLoggable-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Filter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface LoggingMXBean
Name: LoggingMXBean
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingMXBean.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	List<String> getLoggerNames()
	Name: getLoggerNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingMXBean.html#getLoggerNames--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LoggingMXBean
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.lang::String
		}
	}

	[Function]
	String getLoggerLevel(String loggerName)
	Name: getLoggerLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingMXBean.html#getLoggerLevel-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LoggingMXBean
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	void setLoggerLevel(String loggerName,
	                    String levelName)
	Name: setLoggerLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingMXBean.html#setLoggerLevel-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LoggingMXBean
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String getParentLoggerName(String loggerName)
	Name: getParentLoggerName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingMXBean.html#getParentLoggerName-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LoggingMXBean
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class ConsoleHandler
extends StreamHandler
Name: ConsoleHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ConsoleHandler.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::StreamHandler
}
members {

	[Function]
	public ConsoleHandler()
	Name: ConsoleHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ConsoleHandler.html#ConsoleHandler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ConsoleHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::ConsoleHandler
	}

	[Function]
	public void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ConsoleHandler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConsoleHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public void close()
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ConsoleHandler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConsoleHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public class ErrorManager
extends Object
Name: ErrorManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int GENERIC_FAILURE
	Name: GENERIC_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#GENERIC_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int WRITE_FAILURE
	Name: WRITE_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#WRITE_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int FLUSH_FAILURE
	Name: FLUSH_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#FLUSH_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int CLOSE_FAILURE
	Name: CLOSE_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#CLOSE_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int OPEN_FAILURE
	Name: OPEN_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#OPEN_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int FORMAT_FAILURE
	Name: FORMAT_FAILURE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#FORMAT_FAILURE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ErrorManager()
	Name: ErrorManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#ErrorManager--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::ErrorManager
	}

	[Function]
	public void error(String msg,
	                  Exception ex,
	                  int code)
	Name: error
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/ErrorManager.html#error-java.lang.String-java.lang.Exception-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ErrorManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Exception
		other::int
	
		[result]
		other::void
	}
}

[Classifier]
public class FileHandler
extends StreamHandler
Name: FileHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::StreamHandler
}
members {

	[Function]
	public FileHandler()
	            throws IOException,
	                   SecurityException
	Name: FileHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#FileHandler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::FileHandler
	}

	[Function]
	public FileHandler(String pattern)
	            throws IOException,
	                   SecurityException
	Name: FileHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#FileHandler-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.logging::FileHandler
	}

	[Function]
	public FileHandler(String pattern,
	                   boolean append)
	            throws IOException,
	                   SecurityException
	Name: FileHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#FileHandler-java.lang.String-boolean-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::boolean
	
		[result]
		java.util.logging::FileHandler
	}

	[Function]
	public FileHandler(String pattern,
	                   int limit,
	                   int count)
	            throws IOException,
	                   SecurityException
	Name: FileHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#FileHandler-java.lang.String-int-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
	
		[result]
		java.util.logging::FileHandler
	}

	[Function]
	public FileHandler(String pattern,
	                   int limit,
	                   int count,
	                   boolean append)
	            throws IOException,
	                   SecurityException
	Name: FileHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#FileHandler-java.lang.String-int-int-boolean-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		other::int
		other::boolean
	
		[result]
		java.util.logging::FileHandler
	}

	[Function]
	public void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public void close()
	           throws SecurityException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/FileHandler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class Formatter
extends Object
Name: Formatter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html
Containing package: java.util.logging
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.util.logging::SimpleFormatter
	java.util.logging::XMLFormatter
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected Formatter()
	Name: Formatter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html#Formatter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Formatter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Formatter
	}

	[Function]
	public abstract String format(LogRecord record)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html#format-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Formatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		java.lang::String
	}

	[Function]
	public String getHead(Handler h)
	Name: getHead
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html#getHead-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Formatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		java.lang::String
	}

	[Function]
	public String getTail(Handler h)
	Name: getTail
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html#getTail-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Formatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		java.lang::String
	}

	[Function]
	public String formatMessage(LogRecord record)
	Name: formatMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Formatter.html#formatMessage-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Formatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class Handler
extends Object
Name: Handler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html
Containing package: java.util.logging
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.util.logging::MemoryHandler
	java.util.logging::StreamHandler
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected Handler()
	Name: Handler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#Handler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Handler
	}

	[Function]
	public abstract void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public abstract void flush()
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#flush--
	Containing package: java.util.logging
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract void close()
	                    throws SecurityException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void setFormatter(Formatter newFormatter)
	                  throws SecurityException
	Name: setFormatter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#setFormatter-java.util.logging.Formatter-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Formatter
	
		[result]
		other::void
	}

	[Function]
	public Formatter getFormatter()
	Name: getFormatter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#getFormatter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Formatter
	}

	[Function]
	public void setEncoding(String encoding)
	                 throws SecurityException,
	                        UnsupportedEncodingException
	Name: setEncoding
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#setEncoding-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String getEncoding()
	Name: getEncoding
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#getEncoding--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setFilter(Filter newFilter)
	               throws SecurityException
	Name: setFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#setFilter-java.util.logging.Filter-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Filter
	
		[result]
		other::void
	}

	[Function]
	public Filter getFilter()
	Name: getFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#getFilter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Filter
	}

	[Function]
	public void setErrorManager(ErrorManager em)
	Name: setErrorManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#setErrorManager-java.util.logging.ErrorManager-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::ErrorManager
	
		[result]
		other::void
	}

	[Function]
	public ErrorManager getErrorManager()
	Name: getErrorManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#getErrorManager--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::ErrorManager
	}

	[Function]
	protected void reportError(String msg,
	                           Exception ex,
	                           int code)
	Name: reportError
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#reportError-java.lang.String-java.lang.Exception-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Exception
		other::int
	
		[result]
		other::void
	}

	[Function]
	public void setLevel(Level newLevel)
	              throws SecurityException
	Name: setLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#setLevel-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
	
		[result]
		other::void
	}

	[Function]
	public Level getLevel()
	Name: getLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#getLevel--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public boolean isLoggable(LogRecord record)
	Name: isLoggable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Handler.html#isLoggable-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Handler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::boolean
	}
}

[Classifier]
public class Level
extends Object
implements Serializable
Name: Level
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static final Level OFF
	Name: OFF
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#OFF
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level SEVERE
	Name: SEVERE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#SEVERE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level WARNING
	Name: WARNING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#WARNING
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level INFO
	Name: INFO
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#INFO
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level CONFIG
	Name: CONFIG
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#CONFIG
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level FINE
	Name: FINE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#FINE
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level FINER
	Name: FINER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#FINER
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level FINEST
	Name: FINEST
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#FINEST
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public static final Level ALL
	Name: ALL
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#ALL
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	protected Level(String name,
	                int value)
	Name: Level
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#Level-java.lang.String-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		java.util.logging::Level
	}

	[Function]
	protected Level(String name,
	                int value,
	                String resourceBundleName)
	Name: Level
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#Level-java.lang.String-int-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		java.lang::String
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public String getResourceBundleName()
	Name: getResourceBundleName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#getResourceBundleName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#getName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getLocalizedName()
	Name: getLocalizedName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#getLocalizedName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#toString--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final int intValue()
	Name: intValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#intValue--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static Level parse(String name)
	                   throws IllegalArgumentException
	Name: parse
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#parse-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public boolean equals(Object ox)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#equals-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html#hashCode--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Level
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class Logger
extends Object
Name: Logger
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final String GLOBAL_LOGGER_NAME
	Name: GLOBAL_LOGGER_NAME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#GLOBAL_LOGGER_NAME
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	@Deprecated
	public static final Logger global
	Name: global
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#global
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	protected Logger(String name,
	                 String resourceBundleName)
	Name: Logger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#Logger-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static final Logger getGlobal()
	Name: getGlobal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getGlobal--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static Logger getLogger(String name)
	Name: getLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getLogger-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static Logger getLogger(String name,
	                               String resourceBundleName)
	Name: getLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static Logger getAnonymousLogger()
	Name: getAnonymousLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getAnonymousLogger--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static Logger getAnonymousLogger(String resourceBundleName)
	Name: getAnonymousLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getAnonymousLogger-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public ResourceBundle getResourceBundle()
	Name: getResourceBundle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getResourceBundle--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::ResourceBundle
	}

	[Function]
	public String getResourceBundleName()
	Name: getResourceBundleName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getResourceBundleName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setFilter(Filter newFilter)
	               throws SecurityException
	Name: setFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#setFilter-java.util.logging.Filter-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Filter
	
		[result]
		other::void
	}

	[Function]
	public Filter getFilter()
	Name: getFilter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getFilter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Filter
	}

	[Function]
	public void log(LogRecord record)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                String msg)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                Supplier<String> msgSupplier)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                String msg,
	                Object param1)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.lang.String-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                String msg,
	                Object[] params)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.lang.String-java.lang.Object:A-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                String msg,
	                Throwable thrown)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.lang.String-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public void log(Level level,
	                Throwable thrown,
	                Supplier<String> msgSupplier)
	Name: log
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#log-java.util.logging.Level-java.lang.Throwable-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::Throwable
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 String msg)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 Supplier<String> msgSupplier)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 String msg,
	                 Object param1)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 String msg,
	                 Object[] params)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 String msg,
	                 Throwable thrown)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public void logp(Level level,
	                 String sourceClass,
	                 String sourceMethod,
	                 Throwable thrown,
	                 Supplier<String> msgSupplier)
	Name: logp
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.Throwable-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::Throwable
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void logrb(Level level,
	                              String sourceClass,
	                              String sourceMethod,
	                              String bundleName,
	                              String msg)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void logrb(Level level,
	                              String sourceClass,
	                              String sourceMethod,
	                              String bundleName,
	                              String msg,
	                              Object param1)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void logrb(Level level,
	                              String sourceClass,
	                              String sourceMethod,
	                              String bundleName,
	                              String msg,
	                              Object[] params)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	public void logrb(Level level,
	                  String sourceClass,
	                  String sourceMethod,
	                  ResourceBundle bundle,
	                  String msg,
	                  Object... params)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.util::ResourceBundle
		java.lang::String
		other::... {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void logrb(Level level,
	                              String sourceClass,
	                              String sourceMethod,
	                              String bundleName,
	                              String msg,
	                              Throwable thrown)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public void logrb(Level level,
	                  String sourceClass,
	                  String sourceMethod,
	                  ResourceBundle bundle,
	                  String msg,
	                  Throwable thrown)
	Name: logrb
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
		java.lang::String
		java.util::ResourceBundle
		java.lang::String
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public void entering(String sourceClass,
	                     String sourceMethod)
	Name: entering
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#entering-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void entering(String sourceClass,
	                     String sourceMethod,
	                     Object param1)
	Name: entering
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#entering-java.lang.String-java.lang.String-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void entering(String sourceClass,
	                     String sourceMethod,
	                     Object[] params)
	Name: entering
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#entering-java.lang.String-java.lang.String-java.lang.Object:A-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	public void exiting(String sourceClass,
	                    String sourceMethod)
	Name: exiting
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#exiting-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void exiting(String sourceClass,
	                    String sourceMethod,
	                    Object result)
	Name: exiting
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#exiting-java.lang.String-java.lang.String-java.lang.Object-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	public void throwing(String sourceClass,
	                     String sourceMethod,
	                     Throwable thrown)
	Name: throwing
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#throwing-java.lang.String-java.lang.String-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
		java.lang::Throwable
	
		[result]
		other::void
	}

	[Function]
	public void severe(String msg)
	Name: severe
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#severe-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void warning(String msg)
	Name: warning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#warning-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void info(String msg)
	Name: info
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#info-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void config(String msg)
	Name: config
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#config-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void fine(String msg)
	Name: fine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#fine-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void finer(String msg)
	Name: finer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#finer-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void finest(String msg)
	Name: finest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#finest-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void severe(Supplier<String> msgSupplier)
	Name: severe
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#severe-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void warning(Supplier<String> msgSupplier)
	Name: warning
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#warning-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void info(Supplier<String> msgSupplier)
	Name: info
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#info-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void config(Supplier<String> msgSupplier)
	Name: config
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#config-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void fine(Supplier<String> msgSupplier)
	Name: fine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#fine-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void finer(Supplier<String> msgSupplier)
	Name: finer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#finer-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void finest(Supplier<String> msgSupplier)
	Name: finest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#finest-java.util.function.Supplier-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.function::Supplier {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public void setLevel(Level newLevel)
	              throws SecurityException
	Name: setLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#setLevel-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
	
		[result]
		other::void
	}

	[Function]
	public Level getLevel()
	Name: getLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getLevel--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public boolean isLoggable(Level level)
	Name: isLoggable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#isLoggable-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
	
		[result]
		other::boolean
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void addHandler(Handler handler)
	                throws SecurityException
	Name: addHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#addHandler-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		other::void
	}

	[Function]
	public void removeHandler(Handler handler)
	                   throws SecurityException
	Name: removeHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#removeHandler-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		other::void
	}

	[Function]
	public Handler[] getHandlers()
	Name: getHandlers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getHandlers--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.util.logging::Handler
		}
	}

	[Function]
	public void setUseParentHandlers(boolean useParentHandlers)
	Name: setUseParentHandlers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#setUseParentHandlers-boolean-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean getUseParentHandlers()
	Name: getUseParentHandlers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getUseParentHandlers--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void setResourceBundle(ResourceBundle bundle)
	Name: setResourceBundle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::ResourceBundle
	
		[result]
		other::void
	}

	[Function]
	public Logger getParent()
	Name: getParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#getParent--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public void setParent(Logger parent)
	Name: setParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#setParent-java.util.logging.Logger-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Logger
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Logger
	
		[result]
		other::void
	}
}

[Classifier]
public final class LoggingPermission
extends BasicPermission
Name: LoggingPermission
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingPermission.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security::BasicPermission
}
members {

	[Function]
	public LoggingPermission(String name,
	                         String actions)
	                  throws IllegalArgumentException
	Name: LoggingPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LoggingPermission.html#LoggingPermission-java.lang.String-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LoggingPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.util.logging::LoggingPermission
	}
}

[Classifier]
public class LogManager
extends Object
Name: LogManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final String LOGGING_MXBEAN_NAME
	Name: LOGGING_MXBEAN_NAME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#LOGGING_MXBEAN_NAME
	Containing package: java.util.logging
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	protected LogManager()
	Name: LogManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#LogManager--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::LogManager
	}

	[Function]
	public static LogManager getLogManager()
	Name: getLogManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#getLogManager--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::LogManager
	}

	[Function]
	@Deprecated
	public void addPropertyChangeListener(PropertyChangeListener l)
	                                           throws SecurityException
	Name: addPropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#addPropertyChangeListener-java.beans.PropertyChangeListener-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	@Deprecated
	public void removePropertyChangeListener(PropertyChangeListener l)
	                                              throws SecurityException
	Name: removePropertyChangeListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#removePropertyChangeListener-java.beans.PropertyChangeListener-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.beans::PropertyChangeListener
	
		[result]
		other::void
	}

	[Function]
	public boolean addLogger(Logger logger)
	Name: addLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#addLogger-java.util.logging.Logger-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Logger
	
		[result]
		other::boolean
	}

	[Function]
	public Logger getLogger(String name)
	Name: getLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#getLogger-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public Enumeration<String> getLoggerNames()
	Name: getLoggerNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#getLoggerNames--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			java.lang::String
		}
	}

	[Function]
	public void readConfiguration()
	                       throws IOException,
	                              SecurityException
	Name: readConfiguration
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#readConfiguration--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void reset()
	           throws SecurityException
	Name: reset
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#reset--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void readConfiguration(InputStream ins)
	                       throws IOException,
	                              SecurityException
	Name: readConfiguration
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#readConfiguration-java.io.InputStream-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		other::void
	}

	[Function]
	public String getProperty(String name)
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#getProperty-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public void checkAccess()
	                 throws SecurityException
	Name: checkAccess
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#checkAccess--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public static LoggingMXBean getLoggingMXBean()
	Name: getLoggingMXBean
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogManager.html#getLoggingMXBean--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: LogManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::LoggingMXBean
	}
}

[Classifier]
public class LogRecord
extends Object
implements Serializable
Name: LogRecord
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public LogRecord(Level level,
	                 String msg)
	Name: LogRecord
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#LogRecord-java.util.logging.Level-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
		java.lang::String
	
		[result]
		java.util.logging::LogRecord
	}

	[Function]
	public String getLoggerName()
	Name: getLoggerName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getLoggerName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setLoggerName(String name)
	Name: setLoggerName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setLoggerName-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public ResourceBundle getResourceBundle()
	Name: getResourceBundle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getResourceBundle--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::ResourceBundle
	}

	[Function]
	public void setResourceBundle(ResourceBundle bundle)
	Name: setResourceBundle
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setResourceBundle-java.util.ResourceBundle-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::ResourceBundle
	
		[result]
		other::void
	}

	[Function]
	public String getResourceBundleName()
	Name: getResourceBundleName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getResourceBundleName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setResourceBundleName(String name)
	Name: setResourceBundleName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setResourceBundleName-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public Level getLevel()
	Name: getLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getLevel--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public void setLevel(Level level)
	Name: setLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setLevel-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
	
		[result]
		other::void
	}

	[Function]
	public long getSequenceNumber()
	Name: getSequenceNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getSequenceNumber--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public void setSequenceNumber(long seq)
	Name: setSequenceNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setSequenceNumber-long-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public String getSourceClassName()
	Name: getSourceClassName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getSourceClassName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setSourceClassName(String sourceClassName)
	Name: setSourceClassName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setSourceClassName-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String getSourceMethodName()
	Name: getSourceMethodName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getSourceMethodName--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setSourceMethodName(String sourceMethodName)
	Name: setSourceMethodName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setSourceMethodName-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public String getMessage()
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getMessage--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setMessage(String message)
	Name: setMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setMessage-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public Object[] getParameters()
	Name: getParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getParameters--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::Object
		}
	}

	[Function]
	public void setParameters(Object[] parameters)
	Name: setParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setParameters-java.lang.Object:A-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::Object
		}
	
		[result]
		other::void
	}

	[Function]
	public int getThreadID()
	Name: getThreadID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getThreadID--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public void setThreadID(int threadID)
	Name: setThreadID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setThreadID-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public long getMillis()
	Name: getMillis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getMillis--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public void setMillis(long millis)
	Name: setMillis
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setMillis-long-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::void
	}

	[Function]
	public Throwable getThrown()
	Name: getThrown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#getThrown--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Throwable
	}

	[Function]
	public void setThrown(Throwable thrown)
	Name: setThrown
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/LogRecord.html#setThrown-java.lang.Throwable-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: LogRecord
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		other::void
	}
}

[Classifier]
public class MemoryHandler
extends Handler
Name: MemoryHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::Handler
}
members {

	[Function]
	public MemoryHandler()
	Name: MemoryHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#MemoryHandler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::MemoryHandler
	}

	[Function]
	public MemoryHandler(Handler target,
	                     int size,
	                     Level pushLevel)
	Name: MemoryHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#MemoryHandler-java.util.logging.Handler-int-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
		other::int
		java.util.logging::Level
	
		[result]
		java.util.logging::MemoryHandler
	}

	[Function]
	public void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public void push()
	Name: push
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#push--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void flush()
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#flush--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void close()
	           throws SecurityException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void setPushLevel(Level newLevel)
	                  throws SecurityException
	Name: setPushLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#setPushLevel-java.util.logging.Level-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Level
	
		[result]
		other::void
	}

	[Function]
	public Level getPushLevel()
	Name: getPushLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#getPushLevel--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Level
	}

	[Function]
	public boolean isLoggable(LogRecord record)
	Name: isLoggable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/MemoryHandler.html#isLoggable-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MemoryHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::boolean
	}
}

[Classifier]
public class SimpleFormatter
extends Formatter
Name: SimpleFormatter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SimpleFormatter.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::Formatter
}
members {

	[Function]
	public SimpleFormatter()
	Name: SimpleFormatter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SimpleFormatter.html#SimpleFormatter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SimpleFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::SimpleFormatter
	}

	[Function]
	public String format(LogRecord record)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SimpleFormatter.html#format-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class SocketHandler
extends StreamHandler
Name: SocketHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SocketHandler.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::StreamHandler
}
members {

	[Function]
	public SocketHandler()
	              throws IOException
	Name: SocketHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SocketHandler.html#SocketHandler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SocketHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::SocketHandler
	}

	[Function]
	public SocketHandler(String host,
	                     int port)
	              throws IOException
	Name: SocketHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SocketHandler.html#SocketHandler-java.lang.String-int-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SocketHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		java.util.logging::SocketHandler
	}

	[Function]
	public void close()
	           throws SecurityException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SocketHandler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SocketHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/SocketHandler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SocketHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}
}

[Classifier]
public class StreamHandler
extends Handler
Name: StreamHandler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.util.logging::SocketHandler
	java.util.logging::ConsoleHandler
	java.util.logging::FileHandler
}
supertypes {
	java.util.logging::Handler
}
members {

	[Function]
	public StreamHandler()
	Name: StreamHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#StreamHandler--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::StreamHandler
	}

	[Function]
	public StreamHandler(OutputStream out,
	                     Formatter formatter)
	Name: StreamHandler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#StreamHandler-java.io.OutputStream-java.util.logging.Formatter-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
		java.util.logging::Formatter
	
		[result]
		java.util.logging::StreamHandler
	}

	[Function]
	protected void setOutputStream(OutputStream out)
	                        throws SecurityException
	Name: setOutputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#setOutputStream-java.io.OutputStream-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::OutputStream
	
		[result]
		other::void
	}

	[Function]
	public void setEncoding(String encoding)
	                 throws SecurityException,
	                        UnsupportedEncodingException
	Name: setEncoding
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#setEncoding-java.lang.String-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public void publish(LogRecord record)
	Name: publish
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#publish-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::void
	}

	[Function]
	public boolean isLoggable(LogRecord record)
	Name: isLoggable
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#isLoggable-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		other::boolean
	}

	[Function]
	public void flush()
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#flush--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void close()
	           throws SecurityException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/StreamHandler.html#close--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamHandler
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public class XMLFormatter
extends Formatter
Name: XMLFormatter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/XMLFormatter.html
Containing package: java.util.logging
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.logging::Formatter
}
members {

	[Function]
	public XMLFormatter()
	Name: XMLFormatter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/XMLFormatter.html#XMLFormatter--
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: XMLFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::XMLFormatter
	}

	[Function]
	public String format(LogRecord record)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/XMLFormatter.html#format-java.util.logging.LogRecord-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::LogRecord
	
		[result]
		java.lang::String
	}

	[Function]
	public String getHead(Handler h)
	Name: getHead
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/XMLFormatter.html#getHead-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		java.lang::String
	}

	[Function]
	public String getTail(Handler h)
	Name: getTail
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/util/logging/XMLFormatter.html#getTail-java.util.logging.Handler-
	Containing package: java.util.logging
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLFormatter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Handler
	
		[result]
		java.lang::String
	}
}