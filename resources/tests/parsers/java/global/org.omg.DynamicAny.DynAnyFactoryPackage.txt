[Package]
Name: org.omg.DynamicAny.DynAnyFactoryPackage
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/package-summary.html
Containing package: org.omg.DynamicAny
attributes {
}

Subpackages {
}

[Classifier]
public abstract class InconsistentTypeCodeHelper
extends Object
Name: InconsistentTypeCodeHelper
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html
Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public InconsistentTypeCodeHelper()
	Name: InconsistentTypeCodeHelper
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#InconsistentTypeCodeHelper--
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCodeHelper
	}

	[Function]
	public static void insert(Any a,
	                          InconsistentTypeCode that)
	Name: insert
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#insert-org.omg.CORBA.Any-org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode-
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	
		[result]
		other::void
	}

	[Function]
	public static InconsistentTypeCode extract(Any a)
	Name: extract
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#extract-org.omg.CORBA.Any-
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA::Any
	
		[result]
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	}

	[Function]
	public static TypeCode type()
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#type--
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.CORBA::TypeCode
	}

	[Function]
	public static String id()
	Name: id
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#id--
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static InconsistentTypeCode read(InputStream istream)
	Name: read
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#read-org.omg.CORBA.portable.InputStream-
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::InputStream
	
		[result]
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	}

	[Function]
	public static void write(OutputStream ostream,
	                         InconsistentTypeCode value)
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.html#write-org.omg.CORBA.portable.OutputStream-org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode-
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: InconsistentTypeCodeHelper
	parameters {
	}
	Signature = <function> {
		[parameters]
		org.omg.CORBA.portable::OutputStream
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	
		[result]
		other::void
	}
}

[Classifier]
public final class InconsistentTypeCode
extends UserException
Name: InconsistentTypeCode
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.html
Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	org.omg.CORBA::UserException
}
members {

	[Function]
	public InconsistentTypeCode()
	Name: InconsistentTypeCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.html#InconsistentTypeCode--
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InconsistentTypeCode
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	}

	[Function]
	public InconsistentTypeCode(String $reason)
	Name: InconsistentTypeCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.html#InconsistentTypeCode-java.lang.String-
	Containing package: org.omg.DynamicAny.DynAnyFactoryPackage
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InconsistentTypeCode
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		org.omg.DynamicAny.DynAnyFactoryPackage::InconsistentTypeCode
	}
}