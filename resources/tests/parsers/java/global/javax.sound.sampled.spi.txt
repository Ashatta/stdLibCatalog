[Package]
Name: javax.sound.sampled.spi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/package-summary.html
Containing package: javax.sound.sampled
attributes {
}

Subpackages {
}

[Classifier]
public abstract class AudioFileReader
extends Object
Name: AudioFileReader
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html
Containing package: javax.sound.sampled.spi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public AudioFileReader()
	Name: AudioFileReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#AudioFileReader--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.sampled.spi::AudioFileReader
	}

	[Function]
	public abstract AudioFileFormat getAudioFileFormat(InputStream stream)
	                                            throws UnsupportedAudioFileException,
	                                                   IOException
	Name: getAudioFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioFileFormat-java.io.InputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		javax.sound.sampled::AudioFileFormat
	}

	[Function]
	public abstract AudioFileFormat getAudioFileFormat(URL url)
	                                            throws UnsupportedAudioFileException,
	                                                   IOException
	Name: getAudioFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioFileFormat-java.net.URL-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sound.sampled::AudioFileFormat
	}

	[Function]
	public abstract AudioFileFormat getAudioFileFormat(File file)
	                                            throws UnsupportedAudioFileException,
	                                                   IOException
	Name: getAudioFileFormat
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioFileFormat-java.io.File-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		javax.sound.sampled::AudioFileFormat
	}

	[Function]
	public abstract AudioInputStream getAudioInputStream(InputStream stream)
	                                              throws UnsupportedAudioFileException,
	                                                     IOException
	Name: getAudioInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioInputStream-java.io.InputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
	
		[result]
		javax.sound.sampled::AudioInputStream
	}

	[Function]
	public abstract AudioInputStream getAudioInputStream(URL url)
	                                              throws UnsupportedAudioFileException,
	                                                     IOException
	Name: getAudioInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioInputStream-java.net.URL-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.sound.sampled::AudioInputStream
	}

	[Function]
	public abstract AudioInputStream getAudioInputStream(File file)
	                                              throws UnsupportedAudioFileException,
	                                                     IOException
	Name: getAudioInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileReader.html#getAudioInputStream-java.io.File-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::File
	
		[result]
		javax.sound.sampled::AudioInputStream
	}
}

[Classifier]
public abstract class AudioFileWriter
extends Object
Name: AudioFileWriter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html
Containing package: javax.sound.sampled.spi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public AudioFileWriter()
	Name: AudioFileWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#AudioFileWriter--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.sampled.spi::AudioFileWriter
	}

	[Function]
	public abstract AudioFileFormat.Type[] getAudioFileTypes()
	Name: getAudioFileTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#getAudioFileTypes--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFileFormat.Type
		}
	}

	[Function]
	public boolean isFileTypeSupported(AudioFileFormat.Type fileType)
	Name: isFileTypeSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#isFileTypeSupported-javax.sound.sampled.AudioFileFormat.Type-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFileFormat.Type
	
		[result]
		other::boolean
	}

	[Function]
	public abstract AudioFileFormat.Type[] getAudioFileTypes(AudioInputStream stream)
	Name: getAudioFileTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#getAudioFileTypes-javax.sound.sampled.AudioInputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioInputStream
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFileFormat.Type
		}
	}

	[Function]
	public boolean isFileTypeSupported(AudioFileFormat.Type fileType,
	                                   AudioInputStream stream)
	Name: isFileTypeSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#isFileTypeSupported-javax.sound.sampled.AudioFileFormat.Type-javax.sound.sampled.AudioInputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFileFormat.Type
		javax.sound.sampled::AudioInputStream
	
		[result]
		other::boolean
	}

	[Function]
	public abstract int write(AudioInputStream stream,
	                          AudioFileFormat.Type fileType,
	                          OutputStream out)
	                   throws IOException
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#write-javax.sound.sampled.AudioInputStream-javax.sound.sampled.AudioFileFormat.Type-java.io.OutputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioInputStream
		javax.sound.sampled::AudioFileFormat.Type
		java.io::OutputStream
	
		[result]
		other::int
	}

	[Function]
	public abstract int write(AudioInputStream stream,
	                          AudioFileFormat.Type fileType,
	                          File out)
	                   throws IOException
	Name: write
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/AudioFileWriter.html#write-javax.sound.sampled.AudioInputStream-javax.sound.sampled.AudioFileFormat.Type-java.io.File-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AudioFileWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioInputStream
		javax.sound.sampled::AudioFileFormat.Type
		java.io::File
	
		[result]
		other::int
	}
}

[Classifier]
public abstract class FormatConversionProvider
extends Object
Name: FormatConversionProvider
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html
Containing package: javax.sound.sampled.spi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public FormatConversionProvider()
	Name: FormatConversionProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#FormatConversionProvider--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.sampled.spi::FormatConversionProvider
	}

	[Function]
	public abstract AudioFormat.Encoding[] getSourceEncodings()
	Name: getSourceEncodings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getSourceEncodings--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFormat.Encoding
		}
	}

	[Function]
	public abstract AudioFormat.Encoding[] getTargetEncodings()
	Name: getTargetEncodings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getTargetEncodings--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFormat.Encoding
		}
	}

	[Function]
	public boolean isSourceEncodingSupported(AudioFormat.Encoding sourceEncoding)
	Name: isSourceEncodingSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#isSourceEncodingSupported-javax.sound.sampled.AudioFormat.Encoding-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat.Encoding
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isTargetEncodingSupported(AudioFormat.Encoding targetEncoding)
	Name: isTargetEncodingSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#isTargetEncodingSupported-javax.sound.sampled.AudioFormat.Encoding-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat.Encoding
	
		[result]
		other::boolean
	}

	[Function]
	public abstract AudioFormat.Encoding[] getTargetEncodings(AudioFormat sourceFormat)
	Name: getTargetEncodings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getTargetEncodings-javax.sound.sampled.AudioFormat-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFormat.Encoding
		}
	}

	[Function]
	public boolean isConversionSupported(AudioFormat.Encoding targetEncoding,
	                                     AudioFormat sourceFormat)
	Name: isConversionSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#isConversionSupported-javax.sound.sampled.AudioFormat.Encoding-javax.sound.sampled.AudioFormat-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat.Encoding
		javax.sound.sampled::AudioFormat
	
		[result]
		other::boolean
	}

	[Function]
	public abstract AudioFormat[] getTargetFormats(AudioFormat.Encoding targetEncoding,
	                                               AudioFormat sourceFormat)
	Name: getTargetFormats
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getTargetFormats-javax.sound.sampled.AudioFormat.Encoding-javax.sound.sampled.AudioFormat-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat.Encoding
		javax.sound.sampled::AudioFormat
	
		[result]
		other::[] {
			javax.sound.sampled::AudioFormat
		}
	}

	[Function]
	public boolean isConversionSupported(AudioFormat targetFormat,
	                                     AudioFormat sourceFormat)
	Name: isConversionSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat
		javax.sound.sampled::AudioFormat
	
		[result]
		other::boolean
	}

	[Function]
	public abstract AudioInputStream getAudioInputStream(AudioFormat.Encoding targetEncoding,
	                                                     AudioInputStream sourceStream)
	Name: getAudioInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getAudioInputStream-javax.sound.sampled.AudioFormat.Encoding-javax.sound.sampled.AudioInputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat.Encoding
		javax.sound.sampled::AudioInputStream
	
		[result]
		javax.sound.sampled::AudioInputStream
	}

	[Function]
	public abstract AudioInputStream getAudioInputStream(AudioFormat targetFormat,
	                                                     AudioInputStream sourceStream)
	Name: getAudioInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/FormatConversionProvider.html#getAudioInputStream-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioInputStream-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FormatConversionProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::AudioFormat
		javax.sound.sampled::AudioInputStream
	
		[result]
		javax.sound.sampled::AudioInputStream
	}
}

[Classifier]
public abstract class MixerProvider
extends Object
Name: MixerProvider
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/MixerProvider.html
Containing package: javax.sound.sampled.spi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public MixerProvider()
	Name: MixerProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/MixerProvider.html#MixerProvider--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MixerProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sound.sampled.spi::MixerProvider
	}

	[Function]
	public boolean isMixerSupported(Mixer.Info info)
	Name: isMixerSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/MixerProvider.html#isMixerSupported-javax.sound.sampled.Mixer.Info-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MixerProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::Mixer.Info
	
		[result]
		other::boolean
	}

	[Function]
	public abstract Mixer.Info[] getMixerInfo()
	Name: getMixerInfo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/MixerProvider.html#getMixerInfo--
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MixerProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.sound.sampled::Mixer.Info
		}
	}

	[Function]
	public abstract Mixer getMixer(Mixer.Info info)
	Name: getMixer
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sound/sampled/spi/MixerProvider.html#getMixer-javax.sound.sampled.Mixer.Info-
	Containing package: javax.sound.sampled.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MixerProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sound.sampled::Mixer.Info
	
		[result]
		javax.sound.sampled::Mixer
	}
}