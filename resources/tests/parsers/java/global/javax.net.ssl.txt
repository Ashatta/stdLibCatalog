[Package]
Name: javax.net.ssl
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/package-summary.html
Containing package: javax.net
attributes {
}

Subpackages {
}

[Classifier]
public interface HandshakeCompletedListener
extends EventListener
Name: HandshakeCompletedListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedListener.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void handshakeCompleted(HandshakeCompletedEvent event)
	Name: handshakeCompleted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedListener.html#handshakeCompleted-javax.net.ssl.HandshakeCompletedEvent-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::HandshakeCompletedEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface HostnameVerifier
Name: HostnameVerifier
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HostnameVerifier.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	boolean verify(String hostname,
	               SSLSession session)
	Name: verify
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HostnameVerifier.html#verify-java.lang.String-javax.net.ssl.SSLSession-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HostnameVerifier
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.net.ssl::SSLSession
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface KeyManager
Name: KeyManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManager.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::X509KeyManager
}
supertypes {
}
members {
}

[Classifier]
public interface ManagerFactoryParameters
Name: ManagerFactoryParameters
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ManagerFactoryParameters.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::CertPathTrustManagerParameters
	javax.net.ssl::KeyStoreBuilderParameters
}
supertypes {
}
members {
}

[Classifier]
public interface SSLSession
Name: SSLSession
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::ExtendedSSLSession
}
supertypes {
}
members {

	[Function]
	byte[] getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getId--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	SSLSessionContext getSessionContext()
	Name: getSessionContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getSessionContext--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSessionContext
	}

	[Function]
	long getCreationTime()
	Name: getCreationTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getCreationTime--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getLastAccessedTime()
	Name: getLastAccessedTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getLastAccessedTime--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	void invalidate()
	Name: invalidate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#invalidate--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	boolean isValid()
	Name: isValid
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#isValid--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	void putValue(String name,
	              Object value)
	Name: putValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#putValue-java.lang.String-java.lang.Object-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	Object getValue(String name)
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getValue-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void removeValue(String name)
	Name: removeValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#removeValue-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	String[] getValueNames()
	Name: getValueNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getValueNames--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	Certificate[] getPeerCertificates()
	                           throws SSLPeerUnverifiedException
	Name: getPeerCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPeerCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	Certificate[] getLocalCertificates()
	Name: getLocalCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getLocalCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	X509Certificate[] getPeerCertificateChain()
	                                   throws SSLPeerUnverifiedException
	Name: getPeerCertificateChain
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPeerCertificateChain--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.security.cert::X509Certificate
		}
	}

	[Function]
	Principal getPeerPrincipal()
	                    throws SSLPeerUnverifiedException
	Name: getPeerPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPeerPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	Principal getLocalPrincipal()
	Name: getLocalPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getLocalPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	String getCipherSuite()
	Name: getCipherSuite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getCipherSuite--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getProtocol()
	Name: getProtocol
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getProtocol--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getPeerHost()
	Name: getPeerHost
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPeerHost--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	int getPeerPort()
	Name: getPeerPort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPeerPort--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getPacketBufferSize()
	Name: getPacketBufferSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getPacketBufferSize--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getApplicationBufferSize()
	Name: getApplicationBufferSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getApplicationBufferSize--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public interface SSLSessionBindingListener
extends EventListener
Name: SSLSessionBindingListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingListener.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventListener
}
members {

	[Function]
	void valueBound(SSLSessionBindingEvent event)
	Name: valueBound
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingListener.html#valueBound-javax.net.ssl.SSLSessionBindingEvent-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionBindingListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSessionBindingEvent
	
		[result]
		other::void
	}

	[Function]
	void valueUnbound(SSLSessionBindingEvent event)
	Name: valueUnbound
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingListener.html#valueUnbound-javax.net.ssl.SSLSessionBindingEvent-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionBindingListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSessionBindingEvent
	
		[result]
		other::void
	}
}

[Classifier]
public interface SSLSessionContext
Name: SSLSessionContext
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	SSLSession getSession(byte[] sessionId)
	Name: getSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#getSession-byte:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	Enumeration<byte[]> getIds()
	Name: getIds
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#getIds--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			other::[] {
				other::byte
			}
		}
	}

	[Function]
	void setSessionTimeout(int seconds)
	                throws IllegalArgumentException
	Name: setSessionTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#setSessionTimeout-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getSessionTimeout()
	Name: getSessionTimeout
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#getSessionTimeout--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	void setSessionCacheSize(int size)
	                  throws IllegalArgumentException
	Name: setSessionCacheSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#setSessionCacheSize-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	int getSessionCacheSize()
	Name: getSessionCacheSize
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionContext.html#getSessionCacheSize--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public interface TrustManager
Name: TrustManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManager.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::X509TrustManager
}
supertypes {
}
members {
}

[Classifier]
public interface X509KeyManager
extends KeyManager
Name: X509KeyManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::X509ExtendedKeyManager
}
supertypes {
	javax.net.ssl::KeyManager
}
members {

	[Function]
	String[] getClientAliases(String keyType,
	                          Principal[] issuers)
	Name: getClientAliases
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#getClientAliases-java.lang.String-java.security.Principal:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.security::Principal
		}
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	String chooseClientAlias(String[] keyType,
	                         Principal[] issuers,
	                         Socket socket)
	Name: chooseClientAlias
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#chooseClientAlias-java.lang.String:A-java.security.Principal:A-java.net.Socket-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
		other::[] {
			java.security::Principal
		}
		java.net::Socket
	
		[result]
		java.lang::String
	}

	[Function]
	String[] getServerAliases(String keyType,
	                          Principal[] issuers)
	Name: getServerAliases
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#getServerAliases-java.lang.String-java.security.Principal:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.security::Principal
		}
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	String chooseServerAlias(String keyType,
	                         Principal[] issuers,
	                         Socket socket)
	Name: chooseServerAlias
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#chooseServerAlias-java.lang.String-java.security.Principal:A-java.net.Socket-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.security::Principal
		}
		java.net::Socket
	
		[result]
		java.lang::String
	}

	[Function]
	X509Certificate[] getCertificateChain(String alias)
	Name: getCertificateChain
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#getCertificateChain-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::[] {
			java.security.cert::X509Certificate
		}
	}

	[Function]
	PrivateKey getPrivateKey(String alias)
	Name: getPrivateKey
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509KeyManager.html#getPrivateKey-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509KeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.security::PrivateKey
	}
}

[Classifier]
public interface X509TrustManager
extends TrustManager
Name: X509TrustManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509TrustManager.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::X509ExtendedTrustManager
}
supertypes {
	javax.net.ssl::TrustManager
}
members {

	[Function]
	void checkClientTrusted(X509Certificate[] chain,
	                        String authType)
	                 throws CertificateException
	Name: checkClientTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509TrustManager.html#checkClientTrusted-java.security.cert.X509Certificate:A-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509TrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	void checkServerTrusted(X509Certificate[] chain,
	                        String authType)
	                 throws CertificateException
	Name: checkServerTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509TrustManager.html#checkServerTrusted-java.security.cert.X509Certificate:A-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509TrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	X509Certificate[] getAcceptedIssuers()
	Name: getAcceptedIssuers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509TrustManager.html#getAcceptedIssuers--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509TrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::X509Certificate
		}
	}
}

[Classifier]
public class CertPathTrustManagerParameters
extends Object
implements ManagerFactoryParameters
Name: CertPathTrustManagerParameters
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/CertPathTrustManagerParameters.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::ManagerFactoryParameters
	java.lang::Object
}
members {

	[Function]
	public CertPathTrustManagerParameters(CertPathParameters parameters)
	Name: CertPathTrustManagerParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/CertPathTrustManagerParameters.html#CertPathTrustManagerParameters-java.security.cert.CertPathParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: CertPathTrustManagerParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security.cert::CertPathParameters
	
		[result]
		javax.net.ssl::CertPathTrustManagerParameters
	}

	[Function]
	public CertPathParameters getParameters()
	Name: getParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/CertPathTrustManagerParameters.html#getParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CertPathTrustManagerParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security.cert::CertPathParameters
	}
}

[Classifier]
public abstract class ExtendedSSLSession
extends Object
implements SSLSession
Name: ExtendedSSLSession
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ExtendedSSLSession.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SSLSession
	java.lang::Object
}
members {

	[Function]
	public ExtendedSSLSession()
	Name: ExtendedSSLSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ExtendedSSLSession.html#ExtendedSSLSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ExtendedSSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::ExtendedSSLSession
	}

	[Function]
	public abstract String[] getLocalSupportedSignatureAlgorithms()
	Name: getLocalSupportedSignatureAlgorithms
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ExtendedSSLSession.html#getLocalSupportedSignatureAlgorithms--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ExtendedSSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getPeerSupportedSignatureAlgorithms()
	Name: getPeerSupportedSignatureAlgorithms
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ExtendedSSLSession.html#getPeerSupportedSignatureAlgorithms--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ExtendedSSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public List<SNIServerName> getRequestedServerNames()
	Name: getRequestedServerNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/ExtendedSSLSession.html#getRequestedServerNames--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ExtendedSSLSession
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			javax.net.ssl::SNIServerName
		}
	}
}

[Classifier]
public class HandshakeCompletedEvent
extends EventObject
Name: HandshakeCompletedEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public HandshakeCompletedEvent(SSLSocket sock,
	                               SSLSession s)
	Name: HandshakeCompletedEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#HandshakeCompletedEvent-javax.net.ssl.SSLSocket-javax.net.ssl.SSLSession-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSocket
		javax.net.ssl::SSLSession
	
		[result]
		javax.net.ssl::HandshakeCompletedEvent
	}

	[Function]
	public SSLSession getSession()
	Name: getSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	public String getCipherSuite()
	Name: getCipherSuite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getCipherSuite--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Certificate[] getLocalCertificates()
	Name: getLocalCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getLocalCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	public Certificate[] getPeerCertificates()
	                                  throws SSLPeerUnverifiedException
	Name: getPeerCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	public X509Certificate[] getPeerCertificateChain()
	                                          throws SSLPeerUnverifiedException
	Name: getPeerCertificateChain
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificateChain--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.security.cert::X509Certificate
		}
	}

	[Function]
	public Principal getPeerPrincipal()
	                           throws SSLPeerUnverifiedException
	Name: getPeerPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	public Principal getLocalPrincipal()
	Name: getLocalPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	public SSLSocket getSocket()
	Name: getSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HandshakeCompletedEvent.html#getSocket--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HandshakeCompletedEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocket
	}
}

[Classifier]
public abstract class HttpsURLConnection
extends HttpURLConnection
Name: HttpsURLConnection
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.net::HttpURLConnection
}
members {

	[Function]
	protected HostnameVerifier hostnameVerifier
	Name: hostnameVerifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#hostnameVerifier
	Containing package: javax.net.ssl
	attributes {
		final=false
		scope=protected
		static=false
		memberType=field
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::HostnameVerifier
	}

	[Function]
	protected HttpsURLConnection(URL url)
	Name: HttpsURLConnection
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#HttpsURLConnection-java.net.URL-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URL
	
		[result]
		javax.net.ssl::HttpsURLConnection
	}

	[Function]
	public abstract String getCipherSuite()
	Name: getCipherSuite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getCipherSuite--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract Certificate[] getLocalCertificates()
	Name: getLocalCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getLocalCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	public abstract Certificate[] getServerCertificates()
	                                             throws SSLPeerUnverifiedException
	Name: getServerCertificates
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getServerCertificates--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.security.cert::Certificate
		}
	}

	[Function]
	public Principal getPeerPrincipal()
	                           throws SSLPeerUnverifiedException
	Name: getPeerPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getPeerPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	public Principal getLocalPrincipal()
	Name: getLocalPrincipal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getLocalPrincipal--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Principal
	}

	[Function]
	public static void setDefaultHostnameVerifier(HostnameVerifier v)
	Name: setDefaultHostnameVerifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultHostnameVerifier-javax.net.ssl.HostnameVerifier-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::HostnameVerifier
	
		[result]
		other::void
	}

	[Function]
	public static HostnameVerifier getDefaultHostnameVerifier()
	Name: getDefaultHostnameVerifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getDefaultHostnameVerifier--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::HostnameVerifier
	}

	[Function]
	public void setHostnameVerifier(HostnameVerifier v)
	Name: setHostnameVerifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setHostnameVerifier-javax.net.ssl.HostnameVerifier-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::HostnameVerifier
	
		[result]
		other::void
	}

	[Function]
	public HostnameVerifier getHostnameVerifier()
	Name: getHostnameVerifier
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getHostnameVerifier--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::HostnameVerifier
	}

	[Function]
	public static void setDefaultSSLSocketFactory(SSLSocketFactory sf)
	Name: setDefaultSSLSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultSSLSocketFactory-javax.net.ssl.SSLSocketFactory-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSocketFactory
	
		[result]
		other::void
	}

	[Function]
	public static SSLSocketFactory getDefaultSSLSocketFactory()
	Name: getDefaultSSLSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getDefaultSSLSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocketFactory
	}

	[Function]
	public void setSSLSocketFactory(SSLSocketFactory sf)
	Name: setSSLSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setSSLSocketFactory-javax.net.ssl.SSLSocketFactory-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSocketFactory
	
		[result]
		other::void
	}

	[Function]
	public SSLSocketFactory getSSLSocketFactory()
	Name: getSSLSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#getSSLSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HttpsURLConnection
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocketFactory
	}
}

[Classifier]
public class KeyManagerFactory
extends Object
Name: KeyManagerFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected KeyManagerFactory(KeyManagerFactorySpi factorySpi,
	                            Provider provider,
	                            String algorithm)
	Name: KeyManagerFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#KeyManagerFactory-javax.net.ssl.KeyManagerFactorySpi-java.security.Provider-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::KeyManagerFactorySpi
		java.security::Provider
		java.lang::String
	
		[result]
		javax.net.ssl::KeyManagerFactory
	}

	[Function]
	public static final String getDefaultAlgorithm()
	Name: getDefaultAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getDefaultAlgorithm--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getAlgorithm()
	Name: getAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getAlgorithm--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final KeyManagerFactory getInstance(String algorithm)
	                                           throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getInstance-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::KeyManagerFactory
	}

	[Function]
	public static final KeyManagerFactory getInstance(String algorithm,
	                                                  String provider)
	                                           throws NoSuchAlgorithmException,
	                                                  NoSuchProviderException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getInstance-java.lang.String-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.net.ssl::KeyManagerFactory
	}

	[Function]
	public static final KeyManagerFactory getInstance(String algorithm,
	                                                  Provider provider)
	                                           throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getInstance-java.lang.String-java.security.Provider-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.security::Provider
	
		[result]
		javax.net.ssl::KeyManagerFactory
	}

	[Function]
	public final Provider getProvider()
	Name: getProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getProvider--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Provider
	}

	[Function]
	public final void init(KeyStore ks,
	                       char[] password)
	                throws KeyStoreException,
	                       NoSuchAlgorithmException,
	                       UnrecoverableKeyException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#init-java.security.KeyStore-char:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::KeyStore
		other::[] {
			other::char
		}
	
		[result]
		other::void
	}

	[Function]
	public final void init(ManagerFactoryParameters spec)
	                throws InvalidAlgorithmParameterException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#init-javax.net.ssl.ManagerFactoryParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::ManagerFactoryParameters
	
		[result]
		other::void
	}

	[Function]
	public final KeyManager[] getKeyManagers()
	Name: getKeyManagers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactory.html#getKeyManagers--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::KeyManager
		}
	}
}

[Classifier]
public abstract class KeyManagerFactorySpi
extends Object
Name: KeyManagerFactorySpi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactorySpi.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public KeyManagerFactorySpi()
	Name: KeyManagerFactorySpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactorySpi.html#KeyManagerFactorySpi--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: KeyManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::KeyManagerFactorySpi
	}

	[Function]
	protected abstract void engineInit(KeyStore ks,
	                                   char[] password)
	                            throws KeyStoreException,
	                                   NoSuchAlgorithmException,
	                                   UnrecoverableKeyException
	Name: engineInit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactorySpi.html#engineInit-java.security.KeyStore-char:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::KeyStore
		other::[] {
			other::char
		}
	
		[result]
		other::void
	}

	[Function]
	protected abstract void engineInit(ManagerFactoryParameters spec)
	                            throws InvalidAlgorithmParameterException
	Name: engineInit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactorySpi.html#engineInit-javax.net.ssl.ManagerFactoryParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::ManagerFactoryParameters
	
		[result]
		other::void
	}

	[Function]
	protected abstract KeyManager[] engineGetKeyManagers()
	Name: engineGetKeyManagers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyManagerFactorySpi.html#engineGetKeyManagers--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::KeyManager
		}
	}
}

[Classifier]
public class KeyStoreBuilderParameters
extends Object
implements ManagerFactoryParameters
Name: KeyStoreBuilderParameters
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyStoreBuilderParameters.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::ManagerFactoryParameters
	java.lang::Object
}
members {

	[Function]
	public KeyStoreBuilderParameters(KeyStore.Builder builder)
	Name: KeyStoreBuilderParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyStoreBuilderParameters.html#KeyStoreBuilderParameters-java.security.KeyStore.Builder-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: KeyStoreBuilderParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::KeyStore.Builder
	
		[result]
		javax.net.ssl::KeyStoreBuilderParameters
	}

	[Function]
	public KeyStoreBuilderParameters(List<KeyStore.Builder> parameters)
	Name: KeyStoreBuilderParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyStoreBuilderParameters.html#KeyStoreBuilderParameters-java.util.List-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: KeyStoreBuilderParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List {
			java.security::KeyStore.Builder
		}
	
		[result]
		javax.net.ssl::KeyStoreBuilderParameters
	}

	[Function]
	public List<KeyStore.Builder> getParameters()
	Name: getParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/KeyStoreBuilderParameters.html#getParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: KeyStoreBuilderParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.security::KeyStore.Builder
		}
	}
}

[Classifier]
public final class SNIHostName
extends SNIServerName
Name: SNIHostName
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SNIServerName
}
members {

	[Function]
	public SNIHostName(String hostname)
	Name: SNIHostName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#SNIHostName-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SNIHostName
	}

	[Function]
	public SNIHostName(byte[] encoded)
	Name: SNIHostName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#SNIHostName-byte:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			other::byte
		}
	
		[result]
		javax.net.ssl::SNIHostName
	}

	[Function]
	public String getAsciiName()
	Name: getAsciiName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#getAsciiName--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean equals(Object other)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#equals-java.lang.Object-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#hashCode--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#toString--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static SNIMatcher createSNIMatcher(String regex)
	Name: createSNIMatcher
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIHostName.html#createSNIMatcher-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SNIHostName
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SNIMatcher
	}
}

[Classifier]
public abstract class SNIMatcher
extends Object
Name: SNIMatcher
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIMatcher.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SNIMatcher(int type)
	Name: SNIMatcher
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIMatcher.html#SNIMatcher-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SNIMatcher
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.net.ssl::SNIMatcher
	}

	[Function]
	public final int getType()
	Name: getType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIMatcher.html#getType--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIMatcher
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public abstract boolean matches(SNIServerName serverName)
	Name: matches
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIMatcher.html#matches-javax.net.ssl.SNIServerName-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIMatcher
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SNIServerName
	
		[result]
		other::boolean
	}
}

[Classifier]
public abstract class SNIServerName
extends Object
Name: SNIServerName
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::SNIHostName
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SNIServerName(int type,
	                        byte[] encoded)
	Name: SNIServerName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#SNIServerName-int-byte:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::byte
		}
	
		[result]
		javax.net.ssl::SNIServerName
	}

	[Function]
	public final int getType()
	Name: getType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#getType--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final byte[] getEncoded()
	Name: getEncoded
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#getEncoded--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::byte
		}
	}

	[Function]
	public boolean equals(Object other)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#equals-java.lang.Object-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#hashCode--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SNIServerName.html#toString--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SNIServerName
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class SSLContext
extends Object
Name: SSLContext
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SSLContext(SSLContextSpi contextSpi,
	                     Provider provider,
	                     String protocol)
	Name: SSLContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#SSLContext-javax.net.ssl.SSLContextSpi-java.security.Provider-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLContextSpi
		java.security::Provider
		java.lang::String
	
		[result]
		javax.net.ssl::SSLContext
	}

	[Function]
	public static SSLContext getDefault()
	                             throws NoSuchAlgorithmException
	Name: getDefault
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getDefault--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLContext
	}

	[Function]
	public static void setDefault(SSLContext context)
	Name: setDefault
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#setDefault-javax.net.ssl.SSLContext-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLContext
	
		[result]
		other::void
	}

	[Function]
	public static SSLContext getInstance(String protocol)
	                              throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getInstance-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLContext
	}

	[Function]
	public static SSLContext getInstance(String protocol,
	                                     String provider)
	                              throws NoSuchAlgorithmException,
	                                     NoSuchProviderException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getInstance-java.lang.String-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.net.ssl::SSLContext
	}

	[Function]
	public static SSLContext getInstance(String protocol,
	                                     Provider provider)
	                              throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getInstance-java.lang.String-java.security.Provider-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.security::Provider
	
		[result]
		javax.net.ssl::SSLContext
	}

	[Function]
	public final String getProtocol()
	Name: getProtocol
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getProtocol--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final Provider getProvider()
	Name: getProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getProvider--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Provider
	}

	[Function]
	public final void init(KeyManager[] km,
	                       TrustManager[] tm,
	                       SecureRandom random)
	                throws KeyManagementException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#init-javax.net.ssl.KeyManager:A-javax.net.ssl.TrustManager:A-java.security.SecureRandom-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			javax.net.ssl::KeyManager
		}
		other::[] {
			javax.net.ssl::TrustManager
		}
		java.security::SecureRandom
	
		[result]
		other::void
	}

	[Function]
	public final SSLSocketFactory getSocketFactory()
	Name: getSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocketFactory
	}

	[Function]
	public final SSLServerSocketFactory getServerSocketFactory()
	Name: getServerSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getServerSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLServerSocketFactory
	}

	[Function]
	public final SSLEngine createSSLEngine()
	Name: createSSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#createSSLEngine--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	public final SSLEngine createSSLEngine(String peerHost,
	                                       int peerPort)
	Name: createSSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#createSSLEngine-java.lang.String-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	public final SSLSessionContext getServerSessionContext()
	Name: getServerSessionContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getServerSessionContext--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSessionContext
	}

	[Function]
	public final SSLSessionContext getClientSessionContext()
	Name: getClientSessionContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getClientSessionContext--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSessionContext
	}

	[Function]
	public final SSLParameters getDefaultSSLParameters()
	Name: getDefaultSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getDefaultSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public final SSLParameters getSupportedSSLParameters()
	Name: getSupportedSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html#getSupportedSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContext
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}
}

[Classifier]
public abstract class SSLContextSpi
extends Object
Name: SSLContextSpi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public SSLContextSpi()
	Name: SSLContextSpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#SSLContextSpi--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLContextSpi
	}

	[Function]
	protected abstract void engineInit(KeyManager[] km,
	                                   TrustManager[] tm,
	                                   SecureRandom sr)
	                            throws KeyManagementException
	Name: engineInit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineInit-javax.net.ssl.KeyManager:A-javax.net.ssl.TrustManager:A-java.security.SecureRandom-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			javax.net.ssl::KeyManager
		}
		other::[] {
			javax.net.ssl::TrustManager
		}
		java.security::SecureRandom
	
		[result]
		other::void
	}

	[Function]
	protected abstract SSLSocketFactory engineGetSocketFactory()
	Name: engineGetSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocketFactory
	}

	[Function]
	protected abstract SSLServerSocketFactory engineGetServerSocketFactory()
	Name: engineGetServerSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetServerSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLServerSocketFactory
	}

	[Function]
	protected abstract SSLEngine engineCreateSSLEngine()
	Name: engineCreateSSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineCreateSSLEngine--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	protected abstract SSLEngine engineCreateSSLEngine(String host,
	                                                   int port)
	Name: engineCreateSSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineCreateSSLEngine-java.lang.String-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	protected abstract SSLSessionContext engineGetServerSessionContext()
	Name: engineGetServerSessionContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetServerSessionContext--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSessionContext
	}

	[Function]
	protected abstract SSLSessionContext engineGetClientSessionContext()
	Name: engineGetClientSessionContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetClientSessionContext--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSessionContext
	}

	[Function]
	protected SSLParameters engineGetDefaultSSLParameters()
	Name: engineGetDefaultSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetDefaultSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	protected SSLParameters engineGetSupportedSSLParameters()
	Name: engineGetSupportedSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContextSpi.html#engineGetSupportedSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLContextSpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}
}

[Classifier]
public abstract class SSLEngine
extends Object
Name: SSLEngine
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected SSLEngine()
	Name: SSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#SSLEngine--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	protected SSLEngine(String peerHost,
	                    int peerPort)
	Name: SSLEngine
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#SSLEngine-java.lang.String-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		javax.net.ssl::SSLEngine
	}

	[Function]
	public String getPeerHost()
	Name: getPeerHost
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getPeerHost--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getPeerPort()
	Name: getPeerPort
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getPeerPort--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public SSLEngineResult wrap(ByteBuffer src,
	                            ByteBuffer dst)
	                     throws SSLException
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#wrap-java.nio.ByteBuffer-java.nio.ByteBuffer-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.nio::ByteBuffer
		java.nio::ByteBuffer
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public SSLEngineResult wrap(ByteBuffer[] srcs,
	                            ByteBuffer dst)
	                     throws SSLException
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#wrap-java.nio.ByteBuffer:A-java.nio.ByteBuffer-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.nio::ByteBuffer
		}
		java.nio::ByteBuffer
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public abstract SSLEngineResult wrap(ByteBuffer[] srcs,
	                                     int offset,
	                                     int length,
	                                     ByteBuffer dst)
	                              throws SSLException
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#wrap-java.nio.ByteBuffer:A-int-int-java.nio.ByteBuffer-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.nio::ByteBuffer
		}
		other::int
		other::int
		java.nio::ByteBuffer
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public SSLEngineResult unwrap(ByteBuffer src,
	                              ByteBuffer dst)
	                       throws SSLException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#unwrap-java.nio.ByteBuffer-java.nio.ByteBuffer-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.nio::ByteBuffer
		java.nio::ByteBuffer
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public SSLEngineResult unwrap(ByteBuffer src,
	                              ByteBuffer[] dsts)
	                       throws SSLException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#unwrap-java.nio.ByteBuffer-java.nio.ByteBuffer:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.nio::ByteBuffer
		other::[] {
			java.nio::ByteBuffer
		}
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public abstract SSLEngineResult unwrap(ByteBuffer src,
	                                       ByteBuffer[] dsts,
	                                       int offset,
	                                       int length)
	                                throws SSLException
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#unwrap-java.nio.ByteBuffer-java.nio.ByteBuffer:A-int-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.nio::ByteBuffer
		other::[] {
			java.nio::ByteBuffer
		}
		other::int
		other::int
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public abstract Runnable getDelegatedTask()
	Name: getDelegatedTask
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getDelegatedTask--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Runnable
	}

	[Function]
	public abstract void closeInbound()
	                           throws SSLException
	Name: closeInbound
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#closeInbound--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean isInboundDone()
	Name: isInboundDone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#isInboundDone--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void closeOutbound()
	Name: closeOutbound
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#closeOutbound--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean isOutboundDone()
	Name: isOutboundDone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#isOutboundDone--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract String[] getSupportedCipherSuites()
	Name: getSupportedCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getSupportedCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getEnabledCipherSuites()
	Name: getEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getEnabledCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledCipherSuites(String[] suites)
	Name: setEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setEnabledCipherSuites-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract String[] getSupportedProtocols()
	Name: getSupportedProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getSupportedProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getEnabledProtocols()
	Name: getEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getEnabledProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledProtocols(String[] protocols)
	Name: setEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setEnabledProtocols-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract SSLSession getSession()
	Name: getSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	public SSLSession getHandshakeSession()
	Name: getHandshakeSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getHandshakeSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	public abstract void beginHandshake()
	                             throws SSLException
	Name: beginHandshake
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#beginHandshake--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract SSLEngineResult.HandshakeStatus getHandshakeStatus()
	Name: getHandshakeStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getHandshakeStatus--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public abstract void setUseClientMode(boolean mode)
	Name: setUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setUseClientMode-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getUseClientMode()
	Name: getUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getUseClientMode--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setNeedClientAuth(boolean need)
	Name: setNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setNeedClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getNeedClientAuth()
	Name: getNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getNeedClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setWantClientAuth(boolean want)
	Name: setWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setWantClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getWantClientAuth()
	Name: getWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getWantClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setEnableSessionCreation(boolean flag)
	Name: setEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setEnableSessionCreation-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getEnableSessionCreation()
	Name: getEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getEnableSessionCreation--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public SSLParameters getSSLParameters()
	Name: getSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#getSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public void setSSLParameters(SSLParameters params)
	Name: setSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html#setSSLParameters-javax.net.ssl.SSLParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngine
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLParameters
	
		[result]
		other::void
	}
}

[Classifier]
public class SSLEngineResult
extends Object
Name: SSLEngineResult
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public SSLEngineResult(SSLEngineResult.Status status,
	                       SSLEngineResult.HandshakeStatus handshakeStatus,
	                       int bytesConsumed,
	                       int bytesProduced)
	Name: SSLEngineResult
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#SSLEngineResult-javax.net.ssl.SSLEngineResult.Status-javax.net.ssl.SSLEngineResult.HandshakeStatus-int-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLEngineResult.Status
		javax.net.ssl::SSLEngineResult.HandshakeStatus
		other::int
		other::int
	
		[result]
		javax.net.ssl::SSLEngineResult
	}

	[Function]
	public final SSLEngineResult.Status getStatus()
	Name: getStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#getStatus--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}

	[Function]
	public final SSLEngineResult.HandshakeStatus getHandshakeStatus()
	Name: getHandshakeStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#getHandshakeStatus--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public final int bytesConsumed()
	Name: bytesConsumed
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#bytesConsumed--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final int bytesProduced()
	Name: bytesProduced
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#bytesProduced--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.html#toString--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public static enum SSLEngineResult.HandshakeStatus
extends Enum<SSLEngineResult.HandshakeStatus>
Name: SSLEngineResult.HandshakeStatus
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}
}
members {

	[Function]
	public static final SSLEngineResult.HandshakeStatus NOT_HANDSHAKING
	Name: NOT_HANDSHAKING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#NOT_HANDSHAKING
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public static final SSLEngineResult.HandshakeStatus FINISHED
	Name: FINISHED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#FINISHED
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public static final SSLEngineResult.HandshakeStatus NEED_TASK
	Name: NEED_TASK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#NEED_TASK
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public static final SSLEngineResult.HandshakeStatus NEED_WRAP
	Name: NEED_WRAP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#NEED_WRAP
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public static final SSLEngineResult.HandshakeStatus NEED_UNWRAP
	Name: NEED_UNWRAP
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#NEED_UNWRAP
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}

	[Function]
	public static SSLEngineResult.HandshakeStatus[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#values--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::SSLEngineResult.HandshakeStatus
		}
	}

	[Function]
	public static SSLEngineResult.HandshakeStatus valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.HandshakeStatus.html#valueOf-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult.HandshakeStatus
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLEngineResult.HandshakeStatus
	}
}

[Classifier]
public static enum SSLEngineResult.Status
extends Enum<SSLEngineResult.Status>
Name: SSLEngineResult.Status
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		javax.net.ssl::SSLEngineResult.Status
	}
}
members {

	[Function]
	public static final SSLEngineResult.Status BUFFER_UNDERFLOW
	Name: BUFFER_UNDERFLOW
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#BUFFER_UNDERFLOW
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}

	[Function]
	public static final SSLEngineResult.Status BUFFER_OVERFLOW
	Name: BUFFER_OVERFLOW
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#BUFFER_OVERFLOW
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}

	[Function]
	public static final SSLEngineResult.Status OK
	Name: OK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#OK
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}

	[Function]
	public static final SSLEngineResult.Status CLOSED
	Name: CLOSED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#CLOSED
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}

	[Function]
	public static SSLEngineResult.Status[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#values--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::SSLEngineResult.Status
		}
	}

	[Function]
	public static SSLEngineResult.Status valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngineResult.Status.html#valueOf-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLEngineResult.Status
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLEngineResult.Status
	}
}

[Classifier]
public class SSLParameters
extends Object
Name: SSLParameters
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public SSLParameters()
	Name: SSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#SSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public SSLParameters(String[] cipherSuites)
	Name: SSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#SSLParameters-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public SSLParameters(String[] cipherSuites,
	                     String[] protocols)
	Name: SSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#SSLParameters-java.lang.String:A-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
		other::[] {
			java.lang::String
		}
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public String[] getCipherSuites()
	Name: getCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public void setCipherSuites(String[] cipherSuites)
	Name: setCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setCipherSuites-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public String[] getProtocols()
	Name: getProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public void setProtocols(String[] protocols)
	Name: setProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setProtocols-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public boolean getWantClientAuth()
	Name: getWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getWantClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void setWantClientAuth(boolean wantClientAuth)
	Name: setWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setWantClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public boolean getNeedClientAuth()
	Name: getNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getNeedClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void setNeedClientAuth(boolean needClientAuth)
	Name: setNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setNeedClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public AlgorithmConstraints getAlgorithmConstraints()
	Name: getAlgorithmConstraints
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getAlgorithmConstraints--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::AlgorithmConstraints
	}

	[Function]
	public void setAlgorithmConstraints(AlgorithmConstraints constraints)
	Name: setAlgorithmConstraints
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setAlgorithmConstraints-java.security.AlgorithmConstraints-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::AlgorithmConstraints
	
		[result]
		other::void
	}

	[Function]
	public String getEndpointIdentificationAlgorithm()
	Name: getEndpointIdentificationAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getEndpointIdentificationAlgorithm--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void setEndpointIdentificationAlgorithm(String algorithm)
	Name: setEndpointIdentificationAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setEndpointIdentificationAlgorithm-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public final void setServerNames(List<SNIServerName> serverNames)
	Name: setServerNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setServerNames-java.util.List-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List {
			javax.net.ssl::SNIServerName
		}
	
		[result]
		other::void
	}

	[Function]
	public final List<SNIServerName> getServerNames()
	Name: getServerNames
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getServerNames--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			javax.net.ssl::SNIServerName
		}
	}

	[Function]
	public final void setSNIMatchers(Collection<SNIMatcher> matchers)
	Name: setSNIMatchers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setSNIMatchers-java.util.Collection-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Collection {
			javax.net.ssl::SNIMatcher
		}
	
		[result]
		other::void
	}

	[Function]
	public final Collection<SNIMatcher> getSNIMatchers()
	Name: getSNIMatchers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getSNIMatchers--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Collection {
			javax.net.ssl::SNIMatcher
		}
	}

	[Function]
	public final void setUseCipherSuitesOrder(boolean honorOrder)
	Name: setUseCipherSuitesOrder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setUseCipherSuitesOrder-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public final boolean getUseCipherSuitesOrder()
	Name: getUseCipherSuitesOrder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#getUseCipherSuitesOrder--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLParameters
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public final class SSLPermission
extends BasicPermission
Name: SSLPermission
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLPermission.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.security::BasicPermission
}
members {

	[Function]
	public SSLPermission(String name)
	Name: SSLPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLPermission.html#SSLPermission-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLPermission
	}

	[Function]
	public SSLPermission(String name,
	                     String actions)
	Name: SSLPermission
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLPermission.html#SSLPermission-java.lang.String-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLPermission
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.net.ssl::SSLPermission
	}
}

[Classifier]
public abstract class SSLServerSocket
extends ServerSocket
Name: SSLServerSocket
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.net::ServerSocket
}
members {

	[Function]
	protected SSLServerSocket()
	                   throws IOException
	Name: SSLServerSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#SSLServerSocket--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLServerSocket
	}

	[Function]
	protected SSLServerSocket(int port)
	                   throws IOException
	Name: SSLServerSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#SSLServerSocket-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.net.ssl::SSLServerSocket
	}

	[Function]
	protected SSLServerSocket(int port,
	                          int backlog)
	                   throws IOException
	Name: SSLServerSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#SSLServerSocket-int-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		javax.net.ssl::SSLServerSocket
	}

	[Function]
	protected SSLServerSocket(int port,
	                          int backlog,
	                          InetAddress address)
	                   throws IOException
	Name: SSLServerSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#SSLServerSocket-int-int-java.net.InetAddress-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		java.net::InetAddress
	
		[result]
		javax.net.ssl::SSLServerSocket
	}

	[Function]
	public abstract String[] getEnabledCipherSuites()
	Name: getEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getEnabledCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledCipherSuites(String[] suites)
	Name: setEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setEnabledCipherSuites-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract String[] getSupportedCipherSuites()
	Name: getSupportedCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getSupportedCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getSupportedProtocols()
	Name: getSupportedProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getSupportedProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getEnabledProtocols()
	Name: getEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getEnabledProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledProtocols(String[] protocols)
	Name: setEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setEnabledProtocols-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract void setNeedClientAuth(boolean need)
	Name: setNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setNeedClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getNeedClientAuth()
	Name: getNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getNeedClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setWantClientAuth(boolean want)
	Name: setWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setWantClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getWantClientAuth()
	Name: getWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getWantClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setUseClientMode(boolean mode)
	Name: setUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setUseClientMode-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getUseClientMode()
	Name: getUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getUseClientMode--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setEnableSessionCreation(boolean flag)
	Name: setEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setEnableSessionCreation-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getEnableSessionCreation()
	Name: getEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getEnableSessionCreation--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public SSLParameters getSSLParameters()
	Name: getSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#getSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public void setSSLParameters(SSLParameters params)
	Name: setSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocket.html#setSSLParameters-javax.net.ssl.SSLParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLParameters
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class SSLServerSocketFactory
extends ServerSocketFactory
Name: SSLServerSocketFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocketFactory.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net::ServerSocketFactory
}
members {

	[Function]
	protected SSLServerSocketFactory()
	Name: SSLServerSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocketFactory.html#SSLServerSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLServerSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLServerSocketFactory
	}

	[Function]
	public static ServerSocketFactory getDefault()
	Name: getDefault
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocketFactory.html#getDefault--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net::ServerSocketFactory
	}

	[Function]
	public abstract String[] getDefaultCipherSuites()
	Name: getDefaultCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocketFactory.html#getDefaultCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getSupportedCipherSuites()
	Name: getSupportedCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLServerSocketFactory.html#getSupportedCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLServerSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}
}

[Classifier]
public class SSLSessionBindingEvent
extends EventObject
Name: SSLSessionBindingEvent
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingEvent.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util::EventObject
}
members {

	[Function]
	public SSLSessionBindingEvent(SSLSession session,
	                              String name)
	Name: SSLSessionBindingEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingEvent.html#SSLSessionBindingEvent-javax.net.ssl.SSLSession-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSessionBindingEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLSession
		java.lang::String
	
		[result]
		javax.net.ssl::SSLSessionBindingEvent
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingEvent.html#getName--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionBindingEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public SSLSession getSession()
	Name: getSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSessionBindingEvent.html#getSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSessionBindingEvent
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}
}

[Classifier]
public abstract class SSLSocket
extends Socket
Name: SSLSocket
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.net::Socket
}
members {

	[Function]
	protected SSLSocket()
	Name: SSLSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#SSLSocket--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocket
	}

	[Function]
	protected SSLSocket(String host,
	                    int port)
	             throws IOException,
	                    UnknownHostException
	Name: SSLSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#SSLSocket-java.lang.String-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
	
		[result]
		javax.net.ssl::SSLSocket
	}

	[Function]
	protected SSLSocket(InetAddress address,
	                    int port)
	             throws IOException
	Name: SSLSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#SSLSocket-java.net.InetAddress-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::InetAddress
		other::int
	
		[result]
		javax.net.ssl::SSLSocket
	}

	[Function]
	protected SSLSocket(String host,
	                    int port,
	                    InetAddress clientAddress,
	                    int clientPort)
	             throws IOException,
	                    UnknownHostException
	Name: SSLSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#SSLSocket-java.lang.String-int-java.net.InetAddress-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::int
		java.net::InetAddress
		other::int
	
		[result]
		javax.net.ssl::SSLSocket
	}

	[Function]
	protected SSLSocket(InetAddress address,
	                    int port,
	                    InetAddress clientAddress,
	                    int clientPort)
	             throws IOException
	Name: SSLSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#SSLSocket-java.net.InetAddress-int-java.net.InetAddress-int-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::InetAddress
		other::int
		java.net::InetAddress
		other::int
	
		[result]
		javax.net.ssl::SSLSocket
	}

	[Function]
	public abstract String[] getSupportedCipherSuites()
	Name: getSupportedCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getSupportedCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getEnabledCipherSuites()
	Name: getEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getEnabledCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledCipherSuites(String[] suites)
	Name: setEnabledCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setEnabledCipherSuites-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract String[] getSupportedProtocols()
	Name: getSupportedProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getSupportedProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getEnabledProtocols()
	Name: getEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getEnabledProtocols--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract void setEnabledProtocols(String[] protocols)
	Name: setEnabledProtocols
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setEnabledProtocols-java.lang.String:A-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
	
		[result]
		other::void
	}

	[Function]
	public abstract SSLSession getSession()
	Name: getSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	public SSLSession getHandshakeSession()
	Name: getHandshakeSession
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getHandshakeSession--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSession
	}

	[Function]
	public abstract void addHandshakeCompletedListener(HandshakeCompletedListener listener)
	Name: addHandshakeCompletedListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#addHandshakeCompletedListener-javax.net.ssl.HandshakeCompletedListener-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::HandshakeCompletedListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void removeHandshakeCompletedListener(HandshakeCompletedListener listener)
	Name: removeHandshakeCompletedListener
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#removeHandshakeCompletedListener-javax.net.ssl.HandshakeCompletedListener-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::HandshakeCompletedListener
	
		[result]
		other::void
	}

	[Function]
	public abstract void startHandshake()
	                             throws IOException
	Name: startHandshake
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#startHandshake--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public abstract void setUseClientMode(boolean mode)
	Name: setUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setUseClientMode-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getUseClientMode()
	Name: getUseClientMode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getUseClientMode--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setNeedClientAuth(boolean need)
	Name: setNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setNeedClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getNeedClientAuth()
	Name: getNeedClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getNeedClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setWantClientAuth(boolean want)
	Name: setWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setWantClientAuth-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getWantClientAuth()
	Name: getWantClientAuth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getWantClientAuth--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public abstract void setEnableSessionCreation(boolean flag)
	Name: setEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setEnableSessionCreation-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		other::void
	}

	[Function]
	public abstract boolean getEnableSessionCreation()
	Name: getEnableSessionCreation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getEnableSessionCreation--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public SSLParameters getSSLParameters()
	Name: getSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#getSSLParameters--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLParameters
	}

	[Function]
	public void setSSLParameters(SSLParameters params)
	Name: setSSLParameters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setSSLParameters-javax.net.ssl.SSLParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocket
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::SSLParameters
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class SSLSocketFactory
extends SocketFactory
Name: SSLSocketFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net::SocketFactory
}
members {

	[Function]
	public SSLSocketFactory()
	Name: SSLSocketFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#SSLSocketFactory--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::SSLSocketFactory
	}

	[Function]
	public static SocketFactory getDefault()
	Name: getDefault
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#getDefault--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net::SocketFactory
	}

	[Function]
	public abstract String[] getDefaultCipherSuites()
	Name: getDefaultCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#getDefaultCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract String[] getSupportedCipherSuites()
	Name: getSupportedCipherSuites
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#getSupportedCipherSuites--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::String
		}
	}

	[Function]
	public abstract Socket createSocket(Socket s,
	                                    String host,
	                                    int port,
	                                    boolean autoClose)
	                             throws IOException
	Name: createSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#createSocket-java.net.Socket-java.lang.String-int-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::Socket
		java.lang::String
		other::int
		other::boolean
	
		[result]
		java.net::Socket
	}

	[Function]
	public Socket createSocket(Socket s,
	                           InputStream consumed,
	                           boolean autoClose)
	                    throws IOException
	Name: createSocket
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html#createSocket-java.net.Socket-java.io.InputStream-boolean-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SSLSocketFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::Socket
		java.io::InputStream
		other::boolean
	
		[result]
		java.net::Socket
	}
}

[Classifier]
public final class StandardConstants
extends Object
Name: StandardConstants
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/StandardConstants.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int SNI_HOST_NAME
	Name: SNI_HOST_NAME
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/StandardConstants.html#SNI_HOST_NAME
	Containing package: javax.net.ssl
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: StandardConstants
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public class TrustManagerFactory
extends Object
Name: TrustManagerFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	protected TrustManagerFactory(TrustManagerFactorySpi factorySpi,
	                              Provider provider,
	                              String algorithm)
	Name: TrustManagerFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#TrustManagerFactory-javax.net.ssl.TrustManagerFactorySpi-java.security.Provider-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::TrustManagerFactorySpi
		java.security::Provider
		java.lang::String
	
		[result]
		javax.net.ssl::TrustManagerFactory
	}

	[Function]
	public static final String getDefaultAlgorithm()
	Name: getDefaultAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getDefaultAlgorithm--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public final String getAlgorithm()
	Name: getAlgorithm
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getAlgorithm--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final TrustManagerFactory getInstance(String algorithm)
	                                             throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getInstance-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::TrustManagerFactory
	}

	[Function]
	public static final TrustManagerFactory getInstance(String algorithm,
	                                                    String provider)
	                                             throws NoSuchAlgorithmException,
	                                                    NoSuchProviderException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getInstance-java.lang.String-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		javax.net.ssl::TrustManagerFactory
	}

	[Function]
	public static final TrustManagerFactory getInstance(String algorithm,
	                                                    Provider provider)
	                                             throws NoSuchAlgorithmException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getInstance-java.lang.String-java.security.Provider-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.security::Provider
	
		[result]
		javax.net.ssl::TrustManagerFactory
	}

	[Function]
	public final Provider getProvider()
	Name: getProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getProvider--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.security::Provider
	}

	[Function]
	public final void init(KeyStore ks)
	                throws KeyStoreException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#init-java.security.KeyStore-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::KeyStore
	
		[result]
		other::void
	}

	[Function]
	public final void init(ManagerFactoryParameters spec)
	                throws InvalidAlgorithmParameterException
	Name: init
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#init-javax.net.ssl.ManagerFactoryParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::ManagerFactoryParameters
	
		[result]
		other::void
	}

	[Function]
	public final TrustManager[] getTrustManagers()
	Name: getTrustManagers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactory.html#getTrustManagers--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::TrustManager
		}
	}
}

[Classifier]
public abstract class TrustManagerFactorySpi
extends Object
Name: TrustManagerFactorySpi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactorySpi.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public TrustManagerFactorySpi()
	Name: TrustManagerFactorySpi
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactorySpi.html#TrustManagerFactorySpi--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TrustManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::TrustManagerFactorySpi
	}

	[Function]
	protected abstract void engineInit(KeyStore ks)
	                            throws KeyStoreException
	Name: engineInit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactorySpi.html#engineInit-java.security.KeyStore-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.security::KeyStore
	
		[result]
		other::void
	}

	[Function]
	protected abstract void engineInit(ManagerFactoryParameters spec)
	                            throws InvalidAlgorithmParameterException
	Name: engineInit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactorySpi.html#engineInit-javax.net.ssl.ManagerFactoryParameters-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.net.ssl::ManagerFactoryParameters
	
		[result]
		other::void
	}

	[Function]
	protected abstract TrustManager[] engineGetTrustManagers()
	Name: engineGetTrustManagers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/TrustManagerFactorySpi.html#engineGetTrustManagers--
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TrustManagerFactorySpi
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.net.ssl::TrustManager
		}
	}
}

[Classifier]
public abstract class X509ExtendedKeyManager
extends Object
implements X509KeyManager
Name: X509ExtendedKeyManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedKeyManager.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::X509KeyManager
	java.lang::Object
}
members {

	[Function]
	protected X509ExtendedKeyManager()
	Name: X509ExtendedKeyManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedKeyManager.html#X509ExtendedKeyManager--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: X509ExtendedKeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::X509ExtendedKeyManager
	}

	[Function]
	public String chooseEngineClientAlias(String[] keyType,
	                                      Principal[] issuers,
	                                      SSLEngine engine)
	Name: chooseEngineClientAlias
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedKeyManager.html#chooseEngineClientAlias-java.lang.String:A-java.security.Principal:A-javax.net.ssl.SSLEngine-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedKeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang::String
		}
		other::[] {
			java.security::Principal
		}
		javax.net.ssl::SSLEngine
	
		[result]
		java.lang::String
	}

	[Function]
	public String chooseEngineServerAlias(String keyType,
	                                      Principal[] issuers,
	                                      SSLEngine engine)
	Name: chooseEngineServerAlias
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedKeyManager.html#chooseEngineServerAlias-java.lang.String-java.security.Principal:A-javax.net.ssl.SSLEngine-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedKeyManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		other::[] {
			java.security::Principal
		}
		javax.net.ssl::SSLEngine
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class X509ExtendedTrustManager
extends Object
implements X509TrustManager
Name: X509ExtendedTrustManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html
Containing package: javax.net.ssl
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::X509TrustManager
	java.lang::Object
}
members {

	[Function]
	public X509ExtendedTrustManager()
	Name: X509ExtendedTrustManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html#X509ExtendedTrustManager--
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: X509ExtendedTrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.net.ssl::X509ExtendedTrustManager
	}

	[Function]
	public abstract void checkClientTrusted(X509Certificate[] chain,
	                                        String authType,
	                                        Socket socket)
	                                 throws CertificateException
	Name: checkClientTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html#checkClientTrusted-java.security.cert.X509Certificate:A-java.lang.String-java.net.Socket-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedTrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
		java.net::Socket
	
		[result]
		other::void
	}

	[Function]
	public abstract void checkServerTrusted(X509Certificate[] chain,
	                                        String authType,
	                                        Socket socket)
	                                 throws CertificateException
	Name: checkServerTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html#checkServerTrusted-java.security.cert.X509Certificate:A-java.lang.String-java.net.Socket-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedTrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
		java.net::Socket
	
		[result]
		other::void
	}

	[Function]
	public abstract void checkClientTrusted(X509Certificate[] chain,
	                                        String authType,
	                                        SSLEngine engine)
	                                 throws CertificateException
	Name: checkClientTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html#checkClientTrusted-java.security.cert.X509Certificate:A-java.lang.String-javax.net.ssl.SSLEngine-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedTrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
		javax.net.ssl::SSLEngine
	
		[result]
		other::void
	}

	[Function]
	public abstract void checkServerTrusted(X509Certificate[] chain,
	                                        String authType,
	                                        SSLEngine engine)
	                                 throws CertificateException
	Name: checkServerTrusted
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/X509ExtendedTrustManager.html#checkServerTrusted-java.security.cert.X509Certificate:A-java.lang.String-javax.net.ssl.SSLEngine-
	Containing package: javax.net.ssl
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: X509ExtendedTrustManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.security.cert::X509Certificate
		}
		java.lang::String
		javax.net.ssl::SSLEngine
	
		[result]
		other::void
	}
}

[Classifier]
public class SSLException
extends IOException
Name: SSLException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLException.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	javax.net.ssl::SSLPeerUnverifiedException
	javax.net.ssl::SSLHandshakeException
	javax.net.ssl::SSLProtocolException
	javax.net.ssl::SSLKeyException
}
supertypes {
	java.io::IOException
}
members {

	[Function]
	public SSLException(String reason)
	Name: SSLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLException.html#SSLException-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLException
	}

	[Function]
	public SSLException(String message,
	                    Throwable cause)
	Name: SSLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLException.html#SSLException-java.lang.String-java.lang.Throwable-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		javax.net.ssl::SSLException
	}

	[Function]
	public SSLException(Throwable cause)
	Name: SSLException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLException.html#SSLException-java.lang.Throwable-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		javax.net.ssl::SSLException
	}
}

[Classifier]
public class SSLHandshakeException
extends SSLException
Name: SSLHandshakeException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLHandshakeException.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SSLException
}
members {

	[Function]
	public SSLHandshakeException(String reason)
	Name: SSLHandshakeException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLHandshakeException.html#SSLHandshakeException-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLHandshakeException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLHandshakeException
	}
}

[Classifier]
public class SSLKeyException
extends SSLException
Name: SSLKeyException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLKeyException.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SSLException
}
members {

	[Function]
	public SSLKeyException(String reason)
	Name: SSLKeyException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLKeyException.html#SSLKeyException-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLKeyException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLKeyException
	}
}

[Classifier]
public class SSLPeerUnverifiedException
extends SSLException
Name: SSLPeerUnverifiedException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLPeerUnverifiedException.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SSLException
}
members {

	[Function]
	public SSLPeerUnverifiedException(String reason)
	Name: SSLPeerUnverifiedException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLPeerUnverifiedException.html#SSLPeerUnverifiedException-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLPeerUnverifiedException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLPeerUnverifiedException
	}
}

[Classifier]
public class SSLProtocolException
extends SSLException
Name: SSLProtocolException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLProtocolException.html
Containing package: javax.net.ssl
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.net.ssl::SSLException
}
members {

	[Function]
	public SSLProtocolException(String reason)
	Name: SSLProtocolException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLProtocolException.html#SSLProtocolException-java.lang.String-
	Containing package: javax.net.ssl
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SSLProtocolException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.net.ssl::SSLProtocolException
	}
}