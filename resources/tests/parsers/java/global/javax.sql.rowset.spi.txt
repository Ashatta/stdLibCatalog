[Package]
Name: javax.sql.rowset.spi
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/package-summary.html
Containing package: javax.sql.rowset
attributes {
}

Subpackages {
}

[Classifier]
public interface SyncResolver
extends RowSet
Name: SyncResolver
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::RowSet
}
members {

	[Function]
	static final int UPDATE_ROW_CONFLICT
	Name: UPDATE_ROW_CONFLICT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#UPDATE_ROW_CONFLICT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int DELETE_ROW_CONFLICT
	Name: DELETE_ROW_CONFLICT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#DELETE_ROW_CONFLICT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int INSERT_ROW_CONFLICT
	Name: INSERT_ROW_CONFLICT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#INSERT_ROW_CONFLICT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int NO_ROW_CONFLICT
	Name: NO_ROW_CONFLICT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#NO_ROW_CONFLICT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getStatus()
	Name: getStatus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#getStatus--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Object getConflictValue(int index)
	                 throws SQLException
	Name: getConflictValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#getConflictValue-int-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	Object getConflictValue(String columnName)
	                 throws SQLException
	Name: getConflictValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#getConflictValue-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	void setResolvedValue(int index,
	                      Object obj)
	               throws SQLException
	Name: setResolvedValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#setResolvedValue-int-java.lang.Object-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	void setResolvedValue(String columnName,
	                      Object obj)
	               throws SQLException
	Name: setResolvedValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#setResolvedValue-java.lang.String-java.lang.Object-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Object
	
		[result]
		other::void
	}

	[Function]
	boolean nextConflict()
	              throws SQLException
	Name: nextConflict
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#nextConflict--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	boolean previousConflict()
	                  throws SQLException
	Name: previousConflict
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncResolver.html#previousConflict--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncResolver
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface TransactionalWriter
extends RowSetWriter
Name: TransactionalWriter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/TransactionalWriter.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::RowSetWriter
}
members {

	[Function]
	void commit()
	     throws SQLException
	Name: commit
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/TransactionalWriter.html#commit--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransactionalWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void rollback()
	       throws SQLException
	Name: rollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/TransactionalWriter.html#rollback--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransactionalWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void rollback(Savepoint s)
	       throws SQLException
	Name: rollback
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/TransactionalWriter.html#rollback-java.sql.Savepoint-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: TransactionalWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.sql::Savepoint
	
		[result]
		other::void
	}
}

[Classifier]
public interface XmlReader
extends RowSetReader
Name: XmlReader
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/XmlReader.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::RowSetReader
}
members {

	[Function]
	void readXML(WebRowSet caller,
	             Reader reader)
	      throws SQLException
	Name: readXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/XmlReader.html#readXML-javax.sql.rowset.WebRowSet-java.io.Reader-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XmlReader
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql.rowset::WebRowSet
		java.io::Reader
	
		[result]
		other::void
	}
}

[Classifier]
public interface XmlWriter
extends RowSetWriter
Name: XmlWriter
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/XmlWriter.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.sql::RowSetWriter
}
members {

	[Function]
	void writeXML(WebRowSet caller,
	              Writer writer)
	       throws SQLException
	Name: writeXML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/XmlWriter.html#writeXML-javax.sql.rowset.WebRowSet-java.io.Writer-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XmlWriter
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql.rowset::WebRowSet
		java.io::Writer
	
		[result]
		other::void
	}
}

[Classifier]
public class SyncFactory
extends Object
Name: SyncFactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final String ROWSET_SYNC_PROVIDER
	Name: ROWSET_SYNC_PROVIDER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#ROWSET_SYNC_PROVIDER
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String ROWSET_SYNC_VENDOR
	Name: ROWSET_SYNC_VENDOR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#ROWSET_SYNC_VENDOR
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static final String ROWSET_SYNC_PROVIDER_VERSION
	Name: ROWSET_SYNC_PROVIDER_VERSION
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#ROWSET_SYNC_PROVIDER_VERSION
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static void registerProvider(String providerID)
	                             throws SyncFactoryException
	Name: registerProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#registerProvider-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public static SyncFactory getSyncFactory()
	Name: getSyncFactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#getSyncFactory--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.spi::SyncFactory
	}

	[Function]
	public static void unregisterProvider(String providerID)
	                               throws SyncFactoryException
	Name: unregisterProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#unregisterProvider-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public static SyncProvider getInstance(String providerID)
	                                throws SyncFactoryException
	Name: getInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#getInstance-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sql.rowset.spi::SyncProvider
	}

	[Function]
	public static Enumeration<SyncProvider> getRegisteredProviders()
	                                                        throws SyncFactoryException
	Name: getRegisteredProviders
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#getRegisteredProviders--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Enumeration {
			javax.sql.rowset.spi::SyncProvider
		}
	}

	[Function]
	public static void setLogger(Logger logger)
	Name: setLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#setLogger-java.util.logging.Logger-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Logger
	
		[result]
		other::void
	}

	[Function]
	public static void setLogger(Logger logger,
	                             Level level)
	Name: setLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#setLogger-java.util.logging.Logger-java.util.logging.Level-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util.logging::Logger
		java.util.logging::Level
	
		[result]
		other::void
	}

	[Function]
	public static Logger getLogger()
	                        throws SyncFactoryException
	Name: getLogger
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#getLogger--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util.logging::Logger
	}

	[Function]
	public static void setJNDIContext(Context ctx)
	                           throws SyncFactoryException
	Name: setJNDIContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactory.html#setJNDIContext-javax.naming.Context-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SyncFactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.naming::Context
	
		[result]
		other::void
	}
}

[Classifier]
public abstract class SyncProvider
extends Object
Name: SyncProvider
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int GRADE_NONE
	Name: GRADE_NONE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#GRADE_NONE
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int GRADE_CHECK_MODIFIED_AT_COMMIT
	Name: GRADE_CHECK_MODIFIED_AT_COMMIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#GRADE_CHECK_MODIFIED_AT_COMMIT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int GRADE_CHECK_ALL_AT_COMMIT
	Name: GRADE_CHECK_ALL_AT_COMMIT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#GRADE_CHECK_ALL_AT_COMMIT
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int GRADE_LOCK_WHEN_MODIFIED
	Name: GRADE_LOCK_WHEN_MODIFIED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#GRADE_LOCK_WHEN_MODIFIED
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int GRADE_LOCK_WHEN_LOADED
	Name: GRADE_LOCK_WHEN_LOADED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#GRADE_LOCK_WHEN_LOADED
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATASOURCE_NO_LOCK
	Name: DATASOURCE_NO_LOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#DATASOURCE_NO_LOCK
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATASOURCE_ROW_LOCK
	Name: DATASOURCE_ROW_LOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#DATASOURCE_ROW_LOCK
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATASOURCE_TABLE_LOCK
	Name: DATASOURCE_TABLE_LOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#DATASOURCE_TABLE_LOCK
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int DATASOURCE_DB_LOCK
	Name: DATASOURCE_DB_LOCK
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#DATASOURCE_DB_LOCK
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int UPDATABLE_VIEW_SYNC
	Name: UPDATABLE_VIEW_SYNC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#UPDATABLE_VIEW_SYNC
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int NONUPDATABLE_VIEW_SYNC
	Name: NONUPDATABLE_VIEW_SYNC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#NONUPDATABLE_VIEW_SYNC
	Containing package: javax.sql.rowset.spi
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public SyncProvider()
	Name: SyncProvider
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#SyncProvider--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.spi::SyncProvider
	}

	[Function]
	public abstract String getProviderID()
	Name: getProviderID
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getProviderID--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract RowSetReader getRowSetReader()
	Name: getRowSetReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getRowSetReader--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql::RowSetReader
	}

	[Function]
	public abstract RowSetWriter getRowSetWriter()
	Name: getRowSetWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getRowSetWriter--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql::RowSetWriter
	}

	[Function]
	public abstract int getProviderGrade()
	Name: getProviderGrade
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getProviderGrade--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public abstract void setDataSourceLock(int datasource_lock)
	                                throws SyncProviderException
	Name: setDataSourceLock
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#setDataSourceLock-int-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::void
	}

	[Function]
	public abstract int getDataSourceLock()
	                               throws SyncProviderException
	Name: getDataSourceLock
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getDataSourceLock--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public abstract int supportsUpdatableView()
	Name: supportsUpdatableView
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#supportsUpdatableView--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public abstract String getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getVersion--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public abstract String getVendor()
	Name: getVendor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProvider.html#getVendor--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class SyncFactoryException
extends SQLException
Name: SyncFactoryException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactoryException.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SyncFactoryException()
	Name: SyncFactoryException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactoryException.html#SyncFactoryException--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncFactoryException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.spi::SyncFactoryException
	}

	[Function]
	public SyncFactoryException(String msg)
	Name: SyncFactoryException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncFactoryException.html#SyncFactoryException-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncFactoryException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sql.rowset.spi::SyncFactoryException
	}
}

[Classifier]
public class SyncProviderException
extends SQLException
Name: SyncProviderException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html
Containing package: javax.sql.rowset.spi
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.sql::SQLException
}
members {

	[Function]
	public SyncProviderException()
	Name: SyncProviderException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html#SyncProviderException--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncProviderException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.spi::SyncProviderException
	}

	[Function]
	public SyncProviderException(String msg)
	Name: SyncProviderException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html#SyncProviderException-java.lang.String-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncProviderException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.sql.rowset.spi::SyncProviderException
	}

	[Function]
	public SyncProviderException(SyncResolver syncResolver)
	Name: SyncProviderException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html#SyncProviderException-javax.sql.rowset.spi.SyncResolver-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SyncProviderException
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql.rowset.spi::SyncResolver
	
		[result]
		javax.sql.rowset.spi::SyncProviderException
	}

	[Function]
	public SyncResolver getSyncResolver()
	Name: getSyncResolver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html#getSyncResolver--
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProviderException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.sql.rowset.spi::SyncResolver
	}

	[Function]
	public void setSyncResolver(SyncResolver syncResolver)
	Name: setSyncResolver
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/sql/rowset/spi/SyncProviderException.html#setSyncResolver-javax.sql.rowset.spi.SyncResolver-
	Containing package: javax.sql.rowset.spi
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SyncProviderException
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.sql.rowset.spi::SyncResolver
	
		[result]
		other::void
	}
}