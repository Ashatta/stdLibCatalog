[Package]
Name: javax.tools
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/package-summary.html
Containing package: null
attributes {
}

Subpackages {
}

[Classifier]
public interface Diagnostic<S>
Name: Diagnostic
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
	S
}
derived {
}
supertypes {
}
members {

	[Function]
	static final long NOPOS
	Name: NOPOS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#NOPOS
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	Diagnostic.Kind getKind()
	Name: getKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	S getSource()
	Name: getSource
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getSource--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::S
	}

	[Function]
	long getPosition()
	Name: getPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getPosition--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getStartPosition()
	Name: getStartPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getStartPosition--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getEndPosition()
	Name: getEndPosition
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getEndPosition--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getLineNumber()
	Name: getLineNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getLineNumber--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	long getColumnNumber()
	Name: getColumnNumber
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getColumnNumber--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	String getCode()
	Name: getCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getCode--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getMessage(Locale locale)
	Name: getMessage
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.html#getMessage-java.util.Locale-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Locale
	
		[result]
		java.lang::String
	}
}

[Classifier]
public static enum Diagnostic.Kind
extends Enum<Diagnostic.Kind>
Name: Diagnostic.Kind
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		javax.tools::Diagnostic.Kind
	}
}
members {

	[Function]
	public static final Diagnostic.Kind ERROR
	Name: ERROR
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#ERROR
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	public static final Diagnostic.Kind WARNING
	Name: WARNING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#WARNING
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	public static final Diagnostic.Kind MANDATORY_WARNING
	Name: MANDATORY_WARNING
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#MANDATORY_WARNING
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	public static final Diagnostic.Kind NOTE
	Name: NOTE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#NOTE
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	public static final Diagnostic.Kind OTHER
	Name: OTHER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#OTHER
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::Diagnostic.Kind
	}

	[Function]
	public static Diagnostic.Kind[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#values--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.tools::Diagnostic.Kind
		}
	}

	[Function]
	public static Diagnostic.Kind valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Diagnostic.Kind.html#valueOf-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Diagnostic.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.tools::Diagnostic.Kind
	}
}

[Classifier]
public interface DiagnosticListener<S>
Name: DiagnosticListener
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticListener.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
	S
}
derived {
	javax.tools::DiagnosticCollector
}
supertypes {
}
members {

	[Function]
	void report(Diagnostic<? extends S> diagnostic)
	Name: report
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticListener.html#report-javax.tools.Diagnostic-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DiagnosticListener
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::Diagnostic {
			? {
				extends null::S
			}
		}
	
		[result]
		other::void
	}
}

[Classifier]
public interface DocumentationTool
extends Tool, OptionChecker
Name: DocumentationTool
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::Tool
	javax.tools::OptionChecker
}
members {

	[Function]
	DocumentationTool.DocumentationTask getTask(Writer out,
	                                            JavaFileManager fileManager,
	                                            DiagnosticListener<? super JavaFileObject> diagnosticListener,
	                                            Class<?> docletClass,
	                                            Iterable<String> options,
	                                            Iterable<? extends JavaFileObject> compilationUnits)
	Name: getTask
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.html#getTask-java.io.Writer-javax.tools.JavaFileManager-javax.tools.DiagnosticListener-java.lang.Class-java.lang.Iterable-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Writer
		javax.tools::JavaFileManager
		javax.tools::DiagnosticListener {
			? {
				super javax.tools::JavaFileObject
			}
		}
		java.lang::Class {
			?
		}
		java.lang::Iterable {
			java.lang::String
		}
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	
		[result]
		javax.tools::DocumentationTool.DocumentationTask
	}

	[Function]
	StandardJavaFileManager getStandardFileManager(DiagnosticListener<? super JavaFileObject> diagnosticListener,
	                                               Locale locale,
	                                               Charset charset)
	Name: getStandardFileManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.html#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::DiagnosticListener {
			? {
				super javax.tools::JavaFileObject
			}
		}
		java.util::Locale
		java.nio.charset::Charset
	
		[result]
		javax.tools::StandardJavaFileManager
	}
}

[Classifier]
public static interface DocumentationTool.DocumentationTask
extends Callable<Boolean>
Name: DocumentationTool.DocumentationTask
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.DocumentationTask.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.concurrent::Callable {
		java.lang::Boolean
	}
}
members {

	[Function]
	void setLocale(Locale locale)
	Name: setLocale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.DocumentationTask.html#setLocale-java.util.Locale-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.DocumentationTask
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Locale
	
		[result]
		other::void
	}

	[Function]
	Boolean call()
	Name: call
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.DocumentationTask.html#call--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.DocumentationTask
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Boolean
	}
}

[Classifier]
public static enum DocumentationTool.Location
extends Enum<DocumentationTool.Location>
implements JavaFileManager.Location
Name: DocumentationTool.Location
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::JavaFileManager.Location
	java.lang::Enum {
		javax.tools::DocumentationTool.Location
	}
}
members {

	[Function]
	public static final DocumentationTool.Location DOCUMENTATION_OUTPUT
	Name: DOCUMENTATION_OUTPUT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#DOCUMENTATION_OUTPUT
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::DocumentationTool.Location
	}

	[Function]
	public static final DocumentationTool.Location DOCLET_PATH
	Name: DOCLET_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#DOCLET_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::DocumentationTool.Location
	}

	[Function]
	public static final DocumentationTool.Location TAGLET_PATH
	Name: TAGLET_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#TAGLET_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::DocumentationTool.Location
	}

	[Function]
	public static DocumentationTool.Location[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#values--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.tools::DocumentationTool.Location
		}
	}

	[Function]
	public static DocumentationTool.Location valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#valueOf-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.tools::DocumentationTool.Location
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isOutputLocation()
	Name: isOutputLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DocumentationTool.Location.html#isOutputLocation--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DocumentationTool.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface FileObject
Name: FileObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.tools::ForwardingFileObject
	javax.tools::JavaFileObject
}
supertypes {
}
members {

	[Function]
	URI toUri()
	Name: toUri
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#toUri--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URI
	}

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	InputStream openInputStream()
	                     throws IOException
	Name: openInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#openInputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	OutputStream openOutputStream()
	                       throws IOException
	Name: openOutputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#openOutputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::OutputStream
	}

	[Function]
	Reader openReader(boolean ignoreEncodingErrors)
	           throws IOException
	Name: openReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#openReader-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.io::Reader
	}

	[Function]
	CharSequence getCharContent(boolean ignoreEncodingErrors)
	                     throws IOException
	Name: getCharContent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#getCharContent-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.lang::CharSequence
	}

	[Function]
	Writer openWriter()
	           throws IOException
	Name: openWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#openWriter--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Writer
	}

	[Function]
	long getLastModified()
	Name: getLastModified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#getLastModified--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	boolean delete()
	Name: delete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/FileObject.html#delete--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: FileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface JavaCompiler
extends Tool, OptionChecker
Name: JavaCompiler
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::Tool
	javax.tools::OptionChecker
}
members {

	[Function]
	JavaCompiler.CompilationTask getTask(Writer out,
	                                     JavaFileManager fileManager,
	                                     DiagnosticListener<? super JavaFileObject> diagnosticListener,
	                                     Iterable<String> options,
	                                     Iterable<String> classes,
	                                     Iterable<? extends JavaFileObject> compilationUnits)
	Name: getTask
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.html#getTask-java.io.Writer-javax.tools.JavaFileManager-javax.tools.DiagnosticListener-java.lang.Iterable-java.lang.Iterable-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaCompiler
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::Writer
		javax.tools::JavaFileManager
		javax.tools::DiagnosticListener {
			? {
				super javax.tools::JavaFileObject
			}
		}
		java.lang::Iterable {
			java.lang::String
		}
		java.lang::Iterable {
			java.lang::String
		}
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	
		[result]
		javax.tools::JavaCompiler.CompilationTask
	}

	[Function]
	StandardJavaFileManager getStandardFileManager(DiagnosticListener<? super JavaFileObject> diagnosticListener,
	                                               Locale locale,
	                                               Charset charset)
	Name: getStandardFileManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.html#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaCompiler
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::DiagnosticListener {
			? {
				super javax.tools::JavaFileObject
			}
		}
		java.util::Locale
		java.nio.charset::Charset
	
		[result]
		javax.tools::StandardJavaFileManager
	}
}

[Classifier]
public static interface JavaCompiler.CompilationTask
extends Callable<Boolean>
Name: JavaCompiler.CompilationTask
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.CompilationTask.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.util.concurrent::Callable {
		java.lang::Boolean
	}
}
members {

	[Function]
	void setProcessors(Iterable<? extends Processor> processors)
	Name: setProcessors
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.CompilationTask.html#setProcessors-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaCompiler.CompilationTask
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Iterable {
			? {
				extends javax.annotation.processing::Processor
			}
		}
	
		[result]
		other::void
	}

	[Function]
	void setLocale(Locale locale)
	Name: setLocale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.CompilationTask.html#setLocale-java.util.Locale-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaCompiler.CompilationTask
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Locale
	
		[result]
		other::void
	}

	[Function]
	Boolean call()
	Name: call
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaCompiler.CompilationTask.html#call--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaCompiler.CompilationTask
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Boolean
	}
}

[Classifier]
public interface JavaFileManager
extends Closeable, Flushable, OptionChecker
Name: JavaFileManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.tools::StandardJavaFileManager
	javax.tools::ForwardingJavaFileManager
}
supertypes {
	java.io::Closeable
	java.io::Flushable
	javax.tools::OptionChecker
}
members {

	[Function]
	ClassLoader getClassLoader(JavaFileManager.Location location)
	Name: getClassLoader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#getClassLoader-javax.tools.JavaFileManager.Location-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
	
		[result]
		java.lang::ClassLoader
	}

	[Function]
	Iterable<JavaFileObject> list(JavaFileManager.Location location,
	                              String packageName,
	                              Set<JavaFileObject.Kind> kinds,
	                              boolean recurse)
	                       throws IOException
	Name: list
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#list-javax.tools.JavaFileManager.Location-java.lang.String-java.util.Set-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.util::Set {
			javax.tools::JavaFileObject.Kind
		}
		other::boolean
	
		[result]
		java.lang::Iterable {
			javax.tools::JavaFileObject
		}
	}

	[Function]
	String inferBinaryName(JavaFileManager.Location location,
	                       JavaFileObject file)
	Name: inferBinaryName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#inferBinaryName-javax.tools.JavaFileManager.Location-javax.tools.JavaFileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		javax.tools::JavaFileObject
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isSameFile(FileObject a,
	                   FileObject b)
	Name: isSameFile
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#isSameFile-javax.tools.FileObject-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::FileObject
		javax.tools::FileObject
	
		[result]
		other::boolean
	}

	[Function]
	boolean handleOption(String current,
	                     Iterator<String> remaining)
	Name: handleOption
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#handleOption-java.lang.String-java.util.Iterator-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Iterator {
			java.lang::String
		}
	
		[result]
		other::boolean
	}

	[Function]
	boolean hasLocation(JavaFileManager.Location location)
	Name: hasLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#hasLocation-javax.tools.JavaFileManager.Location-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
	
		[result]
		other::boolean
	}

	[Function]
	JavaFileObject getJavaFileForInput(JavaFileManager.Location location,
	                                   String className,
	                                   JavaFileObject.Kind kind)
	                            throws IOException
	Name: getJavaFileForInput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#getJavaFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		javax.tools::JavaFileObject.Kind
	
		[result]
		javax.tools::JavaFileObject
	}

	[Function]
	JavaFileObject getJavaFileForOutput(JavaFileManager.Location location,
	                                    String className,
	                                    JavaFileObject.Kind kind,
	                                    FileObject sibling)
	                             throws IOException
	Name: getJavaFileForOutput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#getJavaFileForOutput-javax.tools.JavaFileManager.Location-java.lang.String-javax.tools.JavaFileObject.Kind-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		javax.tools::JavaFileObject.Kind
		javax.tools::FileObject
	
		[result]
		javax.tools::JavaFileObject
	}

	[Function]
	FileObject getFileForInput(JavaFileManager.Location location,
	                           String packageName,
	                           String relativeName)
	                    throws IOException
	Name: getFileForInput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#getFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.lang::String
	
		[result]
		javax.tools::FileObject
	}

	[Function]
	FileObject getFileForOutput(JavaFileManager.Location location,
	                            String packageName,
	                            String relativeName,
	                            FileObject sibling)
	                     throws IOException
	Name: getFileForOutput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#getFileForOutput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.lang::String
		javax.tools::FileObject
	
		[result]
		javax.tools::FileObject
	}

	[Function]
	void flush()
	    throws IOException
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#flush--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	void close()
	    throws IOException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.html#close--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public static interface JavaFileManager.Location
Name: JavaFileManager.Location
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.Location.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=true
	scope=public
}
parameters {
}
derived {
	javax.tools::DocumentationTool.Location
	javax.tools::StandardLocation
}
supertypes {
}
members {

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.Location.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	boolean isOutputLocation()
	Name: isOutputLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileManager.Location.html#isOutputLocation--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileManager.Location
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public interface JavaFileObject
extends FileObject
Name: JavaFileObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.tools::ForwardingJavaFileObject
	javax.tools::SimpleJavaFileObject
}
supertypes {
	javax.tools::FileObject
}
members {

	[Function]
	JavaFileObject.Kind getKind()
	Name: getKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.html#getKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	boolean isNameCompatible(String simpleName,
	                         JavaFileObject.Kind kind)
	Name: isNameCompatible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.html#isNameCompatible-java.lang.String-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.tools::JavaFileObject.Kind
	
		[result]
		other::boolean
	}

	[Function]
	NestingKind getNestingKind()
	Name: getNestingKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.html#getNestingKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::NestingKind
	}

	[Function]
	Modifier getAccessLevel()
	Name: getAccessLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.html#getAccessLevel--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::Modifier
	}
}

[Classifier]
public static enum JavaFileObject.Kind
extends Enum<JavaFileObject.Kind>
Name: JavaFileObject.Kind
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Enum {
		javax.tools::JavaFileObject.Kind
	}
}
members {

	[Function]
	public static final JavaFileObject.Kind SOURCE
	Name: SOURCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#SOURCE
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public static final JavaFileObject.Kind CLASS
	Name: CLASS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#CLASS
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public static final JavaFileObject.Kind HTML
	Name: HTML
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#HTML
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public static final JavaFileObject.Kind OTHER
	Name: OTHER
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#OTHER
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public final String extension
	Name: extension
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#extension
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=false
		memberType=field
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static JavaFileObject.Kind[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#values--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.tools::JavaFileObject.Kind
		}
	}

	[Function]
	public static JavaFileObject.Kind valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/JavaFileObject.Kind.html#valueOf-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JavaFileObject.Kind
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.tools::JavaFileObject.Kind
	}
}

[Classifier]
public interface OptionChecker
Name: OptionChecker
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/OptionChecker.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.tools::JavaCompiler
	javax.tools::DocumentationTool
	javax.tools::JavaFileManager
}
supertypes {
}
members {

	[Function]
	int isSupportedOption(String option)
	Name: isSupportedOption
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/OptionChecker.html#isSupportedOption-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: OptionChecker
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}
}

[Classifier]
public interface StandardJavaFileManager
extends JavaFileManager
Name: StandardJavaFileManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::JavaFileManager
}
members {

	[Function]
	boolean isSameFile(FileObject a,
	                   FileObject b)
	Name: isSameFile
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#isSameFile-javax.tools.FileObject-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::FileObject
		javax.tools::FileObject
	
		[result]
		other::boolean
	}

	[Function]
	Iterable<? extends JavaFileObject> getJavaFileObjectsFromFiles(Iterable<? extends File> files)
	Name: getJavaFileObjectsFromFiles
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#getJavaFileObjectsFromFiles-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Iterable {
			? {
				extends java.io::File
			}
		}
	
		[result]
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	}

	[Function]
	Iterable<? extends JavaFileObject> getJavaFileObjects(File... files)
	Name: getJavaFileObjects
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#getJavaFileObjects-java.io.File...-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.io::File
		}
	
		[result]
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	}

	[Function]
	Iterable<? extends JavaFileObject> getJavaFileObjectsFromStrings(Iterable<String> names)
	Name: getJavaFileObjectsFromStrings
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#getJavaFileObjectsFromStrings-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Iterable {
			java.lang::String
		}
	
		[result]
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	}

	[Function]
	Iterable<? extends JavaFileObject> getJavaFileObjects(String... names)
	Name: getJavaFileObjects
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#getJavaFileObjects-java.lang.String...-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::String
		}
	
		[result]
		java.lang::Iterable {
			? {
				extends javax.tools::JavaFileObject
			}
		}
	}

	[Function]
	void setLocation(JavaFileManager.Location location,
	                 Iterable<? extends File> path)
	          throws IOException
	Name: setLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#setLocation-javax.tools.JavaFileManager.Location-java.lang.Iterable-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::Iterable {
			? {
				extends java.io::File
			}
		}
	
		[result]
		other::void
	}

	[Function]
	Iterable<? extends File> getLocation(JavaFileManager.Location location)
	Name: getLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardJavaFileManager.html#getLocation-javax.tools.JavaFileManager.Location-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
	
		[result]
		java.lang::Iterable {
			? {
				extends java.io::File
			}
		}
	}
}

[Classifier]
public interface Tool
Name: Tool
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Tool.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.tools::JavaCompiler
	javax.tools::DocumentationTool
}
supertypes {
}
members {

	[Function]
	int run(InputStream in,
	        OutputStream out,
	        OutputStream err,
	        String... arguments)
	Name: run
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Tool.html#run-java.io.InputStream-java.io.OutputStream-java.io.OutputStream-java.lang.String...-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Tool
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.io::InputStream
		java.io::OutputStream
		java.io::OutputStream
		other::... {
			java.lang::String
		}
	
		[result]
		other::int
	}

	[Function]
	Set<SourceVersion> getSourceVersions()
	Name: getSourceVersions
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/Tool.html#getSourceVersions--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Tool
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Set {
			javax.lang.model::SourceVersion
		}
	}
}

[Classifier]
public final class DiagnosticCollector<S>
extends Object
implements DiagnosticListener<S>
Name: DiagnosticCollector
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticCollector.html
Containing package: javax.tools
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
	S
}
derived {
}
supertypes {
	javax.tools::DiagnosticListener {
		null::S
	}
	java.lang::Object
}
members {

	[Function]
	public DiagnosticCollector()
	Name: DiagnosticCollector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticCollector.html#DiagnosticCollector--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: DiagnosticCollector
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::DiagnosticCollector
	}

	[Function]
	public void report(Diagnostic<? extends S> diagnostic)
	Name: report
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticCollector.html#report-javax.tools.Diagnostic-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DiagnosticCollector
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::Diagnostic {
			? {
				extends null::S
			}
		}
	
		[result]
		other::void
	}

	[Function]
	public List<Diagnostic<? extends S>> getDiagnostics()
	Name: getDiagnostics
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/DiagnosticCollector.html#getDiagnostics--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: DiagnosticCollector
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			javax.tools::Diagnostic {
				? {
					extends null::S
				}
			}
		}
	}
}

[Classifier]
public class ForwardingFileObject<F extends FileObject>
extends Object
implements FileObject
Name: ForwardingFileObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	F: (F extends FileObject; F; javax.tools::FileObject)
}
derived {
	javax.tools::ForwardingJavaFileObject
}
supertypes {
	javax.tools::FileObject
	java.lang::Object
}
members {

	[Function]
	protected final F extends FileObject fileObject
	Name: fileObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#fileObject
	Containing package: javax.tools
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::FileObject
	}

	[Function]
	protected ForwardingFileObject(F fileObject)
	Name: ForwardingFileObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#ForwardingFileObject-F-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::F
	
		[result]
		javax.tools::ForwardingFileObject
	}

	[Function]
	public URI toUri()
	Name: toUri
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#toUri--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URI
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public InputStream openInputStream()
	                            throws IOException
	Name: openInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#openInputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public OutputStream openOutputStream()
	                              throws IOException
	Name: openOutputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#openOutputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::OutputStream
	}

	[Function]
	public Reader openReader(boolean ignoreEncodingErrors)
	                  throws IOException
	Name: openReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#openReader-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.io::Reader
	}

	[Function]
	public CharSequence getCharContent(boolean ignoreEncodingErrors)
	                            throws IOException
	Name: getCharContent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#getCharContent-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.lang::CharSequence
	}

	[Function]
	public Writer openWriter()
	                  throws IOException
	Name: openWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#openWriter--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Writer
	}

	[Function]
	public long getLastModified()
	Name: getLastModified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#getLastModified--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean delete()
	Name: delete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingFileObject.html#delete--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}

[Classifier]
public class ForwardingJavaFileManager<M extends JavaFileManager>
extends Object
implements JavaFileManager
Name: ForwardingJavaFileManager
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	M: (M extends JavaFileManager; M; javax.tools::JavaFileManager)
}
derived {
}
supertypes {
	javax.tools::JavaFileManager
	java.lang::Object
}
members {

	[Function]
	protected final M extends JavaFileManager fileManager
	Name: fileManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#fileManager
	Containing package: javax.tools
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileManager
	}

	[Function]
	protected ForwardingJavaFileManager(M fileManager)
	Name: ForwardingJavaFileManager
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#ForwardingJavaFileManager-M-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::M
	
		[result]
		javax.tools::ForwardingJavaFileManager
	}

	[Function]
	public ClassLoader getClassLoader(JavaFileManager.Location location)
	Name: getClassLoader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#getClassLoader-javax.tools.JavaFileManager.Location-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
	
		[result]
		java.lang::ClassLoader
	}

	[Function]
	public Iterable<JavaFileObject> list(JavaFileManager.Location location,
	                                     String packageName,
	                                     Set<JavaFileObject.Kind> kinds,
	                                     boolean recurse)
	                              throws IOException
	Name: list
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#list-javax.tools.JavaFileManager.Location-java.lang.String-java.util.Set-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.util::Set {
			javax.tools::JavaFileObject.Kind
		}
		other::boolean
	
		[result]
		java.lang::Iterable {
			javax.tools::JavaFileObject
		}
	}

	[Function]
	public String inferBinaryName(JavaFileManager.Location location,
	                              JavaFileObject file)
	Name: inferBinaryName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#inferBinaryName-javax.tools.JavaFileManager.Location-javax.tools.JavaFileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		javax.tools::JavaFileObject
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isSameFile(FileObject a,
	                          FileObject b)
	Name: isSameFile
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#isSameFile-javax.tools.FileObject-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::FileObject
		javax.tools::FileObject
	
		[result]
		other::boolean
	}

	[Function]
	public boolean handleOption(String current,
	                            Iterator<String> remaining)
	Name: handleOption
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#handleOption-java.lang.String-java.util.Iterator-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.util::Iterator {
			java.lang::String
		}
	
		[result]
		other::boolean
	}

	[Function]
	public boolean hasLocation(JavaFileManager.Location location)
	Name: hasLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#hasLocation-javax.tools.JavaFileManager.Location-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
	
		[result]
		other::boolean
	}

	[Function]
	public int isSupportedOption(String option)
	Name: isSupportedOption
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#isSupportedOption-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		other::int
	}

	[Function]
	public JavaFileObject getJavaFileForInput(JavaFileManager.Location location,
	                                          String className,
	                                          JavaFileObject.Kind kind)
	                                   throws IOException
	Name: getJavaFileForInput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#getJavaFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		javax.tools::JavaFileObject.Kind
	
		[result]
		javax.tools::JavaFileObject
	}

	[Function]
	public JavaFileObject getJavaFileForOutput(JavaFileManager.Location location,
	                                           String className,
	                                           JavaFileObject.Kind kind,
	                                           FileObject sibling)
	                                    throws IOException
	Name: getJavaFileForOutput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#getJavaFileForOutput-javax.tools.JavaFileManager.Location-java.lang.String-javax.tools.JavaFileObject.Kind-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		javax.tools::JavaFileObject.Kind
		javax.tools::FileObject
	
		[result]
		javax.tools::JavaFileObject
	}

	[Function]
	public FileObject getFileForInput(JavaFileManager.Location location,
	                                  String packageName,
	                                  String relativeName)
	                           throws IOException
	Name: getFileForInput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#getFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.lang::String
	
		[result]
		javax.tools::FileObject
	}

	[Function]
	public FileObject getFileForOutput(JavaFileManager.Location location,
	                                   String packageName,
	                                   String relativeName,
	                                   FileObject sibling)
	                            throws IOException
	Name: getFileForOutput
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#getFileForOutput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-javax.tools.FileObject-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.tools::JavaFileManager.Location
		java.lang::String
		java.lang::String
		javax.tools::FileObject
	
		[result]
		javax.tools::FileObject
	}

	[Function]
	public void flush()
	           throws IOException
	Name: flush
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#flush--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public void close()
	           throws IOException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileManager.html#close--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileManager
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public class ForwardingJavaFileObject<F extends JavaFileObject>
extends ForwardingFileObject<F>
implements JavaFileObject
Name: ForwardingJavaFileObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
	F: (F extends JavaFileObject; F; javax.tools::JavaFileObject)
}
derived {
}
supertypes {
	javax.tools::JavaFileObject
	javax.tools::ForwardingFileObject {
		null::F
	}
}
members {

	[Function]
	protected ForwardingJavaFileObject(F fileObject)
	Name: ForwardingJavaFileObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html#ForwardingJavaFileObject-F-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ForwardingJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::F
	
		[result]
		javax.tools::ForwardingJavaFileObject
	}

	[Function]
	public JavaFileObject.Kind getKind()
	Name: getKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html#getKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public boolean isNameCompatible(String simpleName,
	                                JavaFileObject.Kind kind)
	Name: isNameCompatible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html#isNameCompatible-java.lang.String-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.tools::JavaFileObject.Kind
	
		[result]
		other::boolean
	}

	[Function]
	public NestingKind getNestingKind()
	Name: getNestingKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html#getNestingKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::NestingKind
	}

	[Function]
	public Modifier getAccessLevel()
	Name: getAccessLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ForwardingJavaFileObject.html#getAccessLevel--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ForwardingJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::Modifier
	}
}

[Classifier]
public class SimpleJavaFileObject
extends Object
implements JavaFileObject
Name: SimpleJavaFileObject
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::JavaFileObject
	java.lang::Object
}
members {

	[Function]
	protected final URI uri
	Name: uri
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#uri
	Containing package: javax.tools
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URI
	}

	[Function]
	protected final JavaFileObject.Kind kind
	Name: kind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#kind
	Containing package: javax.tools
	attributes {
		final=true
		scope=protected
		static=false
		memberType=field
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	protected SimpleJavaFileObject(URI uri,
	                               JavaFileObject.Kind kind)
	Name: SimpleJavaFileObject
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#SimpleJavaFileObject-java.net.URI-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.net::URI
		javax.tools::JavaFileObject.Kind
	
		[result]
		javax.tools::SimpleJavaFileObject
	}

	[Function]
	public URI toUri()
	Name: toUri
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#toUri--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.net::URI
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public InputStream openInputStream()
	                            throws IOException
	Name: openInputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#openInputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::InputStream
	}

	[Function]
	public OutputStream openOutputStream()
	                              throws IOException
	Name: openOutputStream
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#openOutputStream--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::OutputStream
	}

	[Function]
	public Reader openReader(boolean ignoreEncodingErrors)
	                  throws IOException
	Name: openReader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#openReader-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.io::Reader
	}

	[Function]
	public CharSequence getCharContent(boolean ignoreEncodingErrors)
	                            throws IOException
	Name: getCharContent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getCharContent-boolean-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::boolean
	
		[result]
		java.lang::CharSequence
	}

	[Function]
	public Writer openWriter()
	                  throws IOException
	Name: openWriter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#openWriter--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.io::Writer
	}

	[Function]
	public long getLastModified()
	Name: getLastModified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getLastModified--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean delete()
	Name: delete
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#delete--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public JavaFileObject.Kind getKind()
	Name: getKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaFileObject.Kind
	}

	[Function]
	public boolean isNameCompatible(String simpleName,
	                                JavaFileObject.Kind kind)
	Name: isNameCompatible
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#isNameCompatible-java.lang.String-javax.tools.JavaFileObject.Kind-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		javax.tools::JavaFileObject.Kind
	
		[result]
		other::boolean
	}

	[Function]
	public NestingKind getNestingKind()
	Name: getNestingKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getNestingKind--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::NestingKind
	}

	[Function]
	public Modifier getAccessLevel()
	Name: getAccessLevel
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#getAccessLevel--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.lang.model.element::Modifier
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/SimpleJavaFileObject.html#toString--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SimpleJavaFileObject
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class ToolProvider
extends Object
Name: ToolProvider
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ToolProvider.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static JavaCompiler getSystemJavaCompiler()
	Name: getSystemJavaCompiler
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ToolProvider.html#getSystemJavaCompiler--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ToolProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::JavaCompiler
	}

	[Function]
	public static DocumentationTool getSystemDocumentationTool()
	Name: getSystemDocumentationTool
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ToolProvider.html#getSystemDocumentationTool--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ToolProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::DocumentationTool
	}

	[Function]
	public static ClassLoader getSystemToolClassLoader()
	Name: getSystemToolClassLoader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/ToolProvider.html#getSystemToolClassLoader--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ToolProvider
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::ClassLoader
	}
}

[Classifier]
public enum StandardLocation
extends Enum<StandardLocation>
implements JavaFileManager.Location
Name: StandardLocation
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html
Containing package: javax.tools
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.tools::JavaFileManager.Location
	java.lang::Enum {
		javax.tools::StandardLocation
	}
}
members {

	[Function]
	public static final StandardLocation CLASS_OUTPUT
	Name: CLASS_OUTPUT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#CLASS_OUTPUT
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation SOURCE_OUTPUT
	Name: SOURCE_OUTPUT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#SOURCE_OUTPUT
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation CLASS_PATH
	Name: CLASS_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#CLASS_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation SOURCE_PATH
	Name: SOURCE_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#SOURCE_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation ANNOTATION_PROCESSOR_PATH
	Name: ANNOTATION_PROCESSOR_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#ANNOTATION_PROCESSOR_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation PLATFORM_CLASS_PATH
	Name: PLATFORM_CLASS_PATH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#PLATFORM_CLASS_PATH
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static final StandardLocation NATIVE_HEADER_OUTPUT
	Name: NATIVE_HEADER_OUTPUT
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#NATIVE_HEADER_OUTPUT
	Containing package: javax.tools
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static StandardLocation[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#values--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			javax.tools::StandardLocation
		}
	}

	[Function]
	public static StandardLocation valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#valueOf-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.tools::StandardLocation
	}

	[Function]
	public static JavaFileManager.Location locationFor(String name)
	Name: locationFor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#locationFor-java.lang.String-
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.tools::JavaFileManager.Location
	}

	[Function]
	public String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#getName--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isOutputLocation()
	Name: isOutputLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#isOutputLocation--
	Containing package: javax.tools
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StandardLocation
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}
}