[Package]
Name: java.time.chrono
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/package-summary.html
Containing package: java.time
attributes {
}

Subpackages {
}

[Classifier]
public interface ChronoLocalDate
extends Temporal, TemporalAdjuster, Comparable<ChronoLocalDate>
Name: ChronoLocalDate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.time.chrono::HijrahDate
	java.time.chrono::MinguoDate
	java.time.chrono::ThaiBuddhistDate
	java.time.chrono::JapaneseDate
	java.time::LocalDate
}
supertypes {
	java.time.temporal::Temporal
	java.time.temporal::TemporalAdjuster
	java.lang::Comparable {
		java.time.chrono::ChronoLocalDate
	}
}
members {

	[Function]
	static Comparator<ChronoLocalDate> timeLineOrder()
	Name: timeLineOrder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#timeLineOrder--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Comparator {
			java.time.chrono::ChronoLocalDate
		}
	}

	[Function]
	static ChronoLocalDate from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	Chronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	default Era getEra()
	Name: getEra
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#getEra--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::Era
	}

	[Function]
	default boolean isLeapYear()
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isLeapYear--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	int lengthOfMonth()
	Name: lengthOfMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#lengthOfMonth--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	default int lengthOfYear()
	Name: lengthOfYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#lengthOfYear--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	default boolean isSupported(TemporalField field)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isSupported-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isSupported(TemporalUnit unit)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isSupported-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalUnit
	
		[result]
		other::boolean
	}

	[Function]
	default ChronoLocalDate with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate with(TemporalField field,
	                             long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate plus(long amountToAdd,
	                             TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate minus(long amountToSubtract,
	                              TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default <R> R query(TemporalQuery<R> query)
	Name: query
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#query-java.time.temporal.TemporalQuery-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
		R
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalQuery {
			null::R
		}
	
		[result]
		null::R
	}

	[Function]
	default Temporal adjustInto(Temporal temporal)
	Name: adjustInto
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#adjustInto-java.time.temporal.Temporal-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
	
		[result]
		java.time.temporal::Temporal
	}

	[Function]
	long until(Temporal endExclusive,
	           TemporalUnit unit)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	ChronoPeriod until(ChronoLocalDate endDateExclusive)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#until-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	default String format(DateTimeFormatter formatter)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#format-java.time.format.DateTimeFormatter-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.format::DateTimeFormatter
	
		[result]
		java.lang::String
	}

	[Function]
	default ChronoLocalDateTime<?> atTime(LocalTime localTime)
	Name: atTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#atTime-java.time.LocalTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	}

	[Function]
	default long toEpochDay()
	Name: toEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#toEpochDay--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	default int compareTo(ChronoLocalDate other)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#compareTo-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		other::int
	}

	[Function]
	default boolean isAfter(ChronoLocalDate other)
	Name: isAfter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isAfter-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isBefore(ChronoLocalDate other)
	Name: isBefore
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isBefore-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isEqual(ChronoLocalDate other)
	Name: isEqual
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#isEqual-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		other::boolean
	}

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDate.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface ChronoLocalDateTime<D extends ChronoLocalDate>
extends Temporal, TemporalAdjuster, Comparable<ChronoLocalDateTime<?>>
Name: ChronoLocalDateTime
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
	D: (D extends ChronoLocalDate; D; java.time.chrono::ChronoLocalDate)
}
derived {
	java.time::LocalDateTime
}
supertypes {
	java.time.temporal::Temporal
	java.time.temporal::TemporalAdjuster
	java.lang::Comparable {
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	}
}
members {

	[Function]
	static Comparator<ChronoLocalDateTime<?>> timeLineOrder()
	Name: timeLineOrder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#timeLineOrder--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Comparator {
			java.time.chrono::ChronoLocalDateTime {
				?
			}
		}
	}

	[Function]
	static ChronoLocalDateTime<?> from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	}

	[Function]
	default Chronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	D toLocalDate()
	Name: toLocalDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#toLocalDate--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::D
	}

	[Function]
	LocalTime toLocalTime()
	Name: toLocalTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#toLocalTime--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalTime
	}

	[Function]
	boolean isSupported(TemporalField field)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#isSupported-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isSupported(TemporalUnit unit)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#isSupported-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalUnit
	
		[result]
		other::boolean
	}

	[Function]
	default ChronoLocalDateTime<D> with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	ChronoLocalDateTime<D> with(TemporalField field,
	                            long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	default ChronoLocalDateTime<D> plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	ChronoLocalDateTime<D> plus(long amountToAdd,
	                            TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	default ChronoLocalDateTime<D> minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	default ChronoLocalDateTime<D> minus(long amountToSubtract,
	                                     TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	default <R> R query(TemporalQuery<R> query)
	Name: query
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#query-java.time.temporal.TemporalQuery-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
		R
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalQuery {
			null::R
		}
	
		[result]
		null::R
	}

	[Function]
	default Temporal adjustInto(Temporal temporal)
	Name: adjustInto
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#adjustInto-java.time.temporal.Temporal-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
	
		[result]
		java.time.temporal::Temporal
	}

	[Function]
	default String format(DateTimeFormatter formatter)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#format-java.time.format.DateTimeFormatter-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.format::DateTimeFormatter
	
		[result]
		java.lang::String
	}

	[Function]
	ChronoZonedDateTime<D> atZone(ZoneId zone)
	Name: atZone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#atZone-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	default Instant toInstant(ZoneOffset offset)
	Name: toInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#toInstant-java.time.ZoneOffset-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneOffset
	
		[result]
		java.time::Instant
	}

	[Function]
	default long toEpochSecond(ZoneOffset offset)
	Name: toEpochSecond
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#toEpochSecond-java.time.ZoneOffset-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneOffset
	
		[result]
		other::long
	}

	[Function]
	default int compareTo(ChronoLocalDateTime<?> other)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#compareTo-java.time.chrono.ChronoLocalDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	
		[result]
		other::int
	}

	[Function]
	default boolean isAfter(ChronoLocalDateTime<?> other)
	Name: isAfter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#isAfter-java.time.chrono.ChronoLocalDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isBefore(ChronoLocalDateTime<?> other)
	Name: isBefore
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#isBefore-java.time.chrono.ChronoLocalDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isEqual(ChronoLocalDateTime<?> other)
	Name: isEqual
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#isEqual-java.time.chrono.ChronoLocalDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoLocalDateTime.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoLocalDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface Chronology
extends Comparable<Chronology>
Name: Chronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.time.chrono::AbstractChronology
}
supertypes {
	java.lang::Comparable {
		java.time.chrono::Chronology
	}
}
members {

	[Function]
	static Chronology from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	static Chronology ofLocale(Locale locale)
	Name: ofLocale
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#ofLocale-java.util.Locale-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Locale
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	static Chronology of(String id)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#of-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	static Set<Chronology> getAvailableChronologies()
	Name: getAvailableChronologies
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#getAvailableChronologies--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Set {
			java.time.chrono::Chronology
		}
	}

	[Function]
	String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	default ChronoLocalDate date(Era era,
	                             int yearOfEra,
	                             int month,
	                             int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	ChronoLocalDate date(int prolepticYear,
	                     int month,
	                     int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate dateYearDay(Era era,
	                                    int yearOfEra,
	                                    int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	ChronoLocalDate dateYearDay(int prolepticYear,
	                            int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	ChronoLocalDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	ChronoLocalDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoLocalDateTime<? extends ChronoLocalDate> localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			? {
				extends java.time.chrono::ChronoLocalDate
			}
		}
	}

	[Function]
	default ChronoZonedDateTime<? extends ChronoLocalDate> zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			? {
				extends java.time.chrono::ChronoLocalDate
			}
		}
	}

	[Function]
	default ChronoZonedDateTime<? extends ChronoLocalDate> zonedDateTime(Instant instant,
	                                                                     ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			? {
				extends java.time.chrono::ChronoLocalDate
			}
		}
	}

	[Function]
	boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	int prolepticYear(Era era,
	                  int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	Era eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::Era
	}

	[Function]
	List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	default String getDisplayName(TextStyle style,
	                              Locale locale)
	Name: getDisplayName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#getDisplayName-java.time.format.TextStyle-java.util.Locale-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.format::TextStyle
		java.util::Locale
	
		[result]
		java.lang::String
	}

	[Function]
	ChronoLocalDate resolveDate(Map<TemporalField,Long> fieldValues,
	                            ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	default ChronoPeriod period(int years,
	                            int months,
	                            int days)
	Name: period
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#period-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	int compareTo(Chronology other)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#compareTo-java.time.chrono.Chronology-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Chronology
	
		[result]
		other::int
	}

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Chronology.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Chronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface ChronoPeriod
extends TemporalAmount
Name: ChronoPeriod
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.time::Period
}
supertypes {
	java.time.temporal::TemporalAmount
}
members {

	[Function]
	static ChronoPeriod between(ChronoLocalDate startDateInclusive,
	                            ChronoLocalDate endDateExclusive)
	Name: between
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#between-java.time.chrono.ChronoLocalDate-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	long get(TemporalUnit unit)
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#get-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	List<TemporalUnit> getUnits()
	Name: getUnits
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#getUnits--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.temporal::TemporalUnit
		}
	}

	[Function]
	Chronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	default boolean isZero()
	Name: isZero
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#isZero--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isNegative()
	Name: isNegative
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#isNegative--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	ChronoPeriod plus(TemporalAmount amountToAdd)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	ChronoPeriod minus(TemporalAmount amountToSubtract)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	ChronoPeriod multipliedBy(int scalar)
	Name: multipliedBy
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#multipliedBy-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	default ChronoPeriod negated()
	Name: negated
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#negated--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	ChronoPeriod normalized()
	Name: normalized
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#normalized--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	Temporal addTo(Temporal temporal)
	Name: addTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#addTo-java.time.temporal.Temporal-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
	
		[result]
		java.time.temporal::Temporal
	}

	[Function]
	Temporal subtractFrom(Temporal temporal)
	Name: subtractFrom
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#subtractFrom-java.time.temporal.Temporal-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
	
		[result]
		java.time.temporal::Temporal
	}

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoPeriod.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoPeriod
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface ChronoZonedDateTime<D extends ChronoLocalDate>
extends Temporal, Comparable<ChronoZonedDateTime<?>>
Name: ChronoZonedDateTime
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
	D: (D extends ChronoLocalDate; D; java.time.chrono::ChronoLocalDate)
}
derived {
	java.time::ZonedDateTime
}
supertypes {
	java.time.temporal::Temporal
	java.lang::Comparable {
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	}
}
members {

	[Function]
	static Comparator<ChronoZonedDateTime<?>> timeLineOrder()
	Name: timeLineOrder
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#timeLineOrder--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::Comparator {
			java.time.chrono::ChronoZonedDateTime {
				?
			}
		}
	}

	[Function]
	static ChronoZonedDateTime<?> from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	}

	[Function]
	default ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	default int get(TemporalField field)
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#get-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::int
	}

	[Function]
	default long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	default D toLocalDate()
	Name: toLocalDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toLocalDate--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::D
	}

	[Function]
	default LocalTime toLocalTime()
	Name: toLocalTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toLocalTime--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalTime
	}

	[Function]
	ChronoLocalDateTime<D> toLocalDateTime()
	Name: toLocalDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toLocalDateTime--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			null::D
		}
	}

	[Function]
	default Chronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::Chronology
	}

	[Function]
	ZoneOffset getOffset()
	Name: getOffset
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#getOffset--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::ZoneOffset
	}

	[Function]
	ZoneId getZone()
	Name: getZone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#getZone--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::ZoneId
	}

	[Function]
	ChronoZonedDateTime<D> withEarlierOffsetAtOverlap()
	Name: withEarlierOffsetAtOverlap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#withEarlierOffsetAtOverlap--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	ChronoZonedDateTime<D> withLaterOffsetAtOverlap()
	Name: withLaterOffsetAtOverlap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#withLaterOffsetAtOverlap--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	ChronoZonedDateTime<D> withZoneSameLocal(ZoneId zone)
	Name: withZoneSameLocal
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#withZoneSameLocal-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	ChronoZonedDateTime<D> withZoneSameInstant(ZoneId zone)
	Name: withZoneSameInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#withZoneSameInstant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	boolean isSupported(TemporalField field)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#isSupported-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isSupported(TemporalUnit unit)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#isSupported-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalUnit
	
		[result]
		other::boolean
	}

	[Function]
	default ChronoZonedDateTime<D> with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	ChronoZonedDateTime<D> with(TemporalField field,
	                            long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	default ChronoZonedDateTime<D> plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	ChronoZonedDateTime<D> plus(long amountToAdd,
	                            TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	default ChronoZonedDateTime<D> minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	default ChronoZonedDateTime<D> minus(long amountToSubtract,
	                                     TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			null::D
		}
	}

	[Function]
	default <R> R query(TemporalQuery<R> query)
	Name: query
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#query-java.time.temporal.TemporalQuery-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
		R
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalQuery {
			null::R
		}
	
		[result]
		null::R
	}

	[Function]
	default String format(DateTimeFormatter formatter)
	Name: format
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#format-java.time.format.DateTimeFormatter-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.format::DateTimeFormatter
	
		[result]
		java.lang::String
	}

	[Function]
	default Instant toInstant()
	Name: toInstant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::Instant
	}

	[Function]
	default long toEpochSecond()
	Name: toEpochSecond
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toEpochSecond--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	default int compareTo(ChronoZonedDateTime<?> other)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#compareTo-java.time.chrono.ChronoZonedDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	
		[result]
		other::int
	}

	[Function]
	default boolean isBefore(ChronoZonedDateTime<?> other)
	Name: isBefore
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#isBefore-java.time.chrono.ChronoZonedDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isAfter(ChronoZonedDateTime<?> other)
	Name: isAfter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#isAfter-java.time.chrono.ChronoZonedDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	default boolean isEqual(ChronoZonedDateTime<?> other)
	Name: isEqual
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#isEqual-java.time.chrono.ChronoZonedDateTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoZonedDateTime {
			?
		}
	
		[result]
		other::boolean
	}

	[Function]
	boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ChronoZonedDateTime
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public interface Era
extends TemporalAccessor, TemporalAdjuster
Name: Era
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	java.time.chrono::HijrahEra
	java.time.chrono::MinguoEra
	java.time.chrono::IsoEra
	java.time.chrono::JapaneseEra
	java.time.chrono::ThaiBuddhistEra
}
supertypes {
	java.time.temporal::TemporalAccessor
	java.time.temporal::TemporalAdjuster
}
members {

	[Function]
	int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	default boolean isSupported(TemporalField field)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#isSupported-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::boolean
	}

	[Function]
	default ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	default int get(TemporalField field)
	Name: get
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#get-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::int
	}

	[Function]
	default long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	default <R> R query(TemporalQuery<R> query)
	Name: query
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#query-java.time.temporal.TemporalQuery-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
		R
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalQuery {
			null::R
		}
	
		[result]
		null::R
	}

	[Function]
	default Temporal adjustInto(Temporal temporal)
	Name: adjustInto
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#adjustInto-java.time.temporal.Temporal-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
	
		[result]
		java.time.temporal::Temporal
	}

	[Function]
	default String getDisplayName(TextStyle style,
	                              Locale locale)
	Name: getDisplayName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/Era.html#getDisplayName-java.time.format.TextStyle-java.util.Locale-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: Era
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.format::TextStyle
		java.util::Locale
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class AbstractChronology
extends Object
implements Chronology
Name: AbstractChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html
Containing package: java.time.chrono
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.time.chrono::ThaiBuddhistChronology
	java.time.chrono::JapaneseChronology
	java.time.chrono::HijrahChronology
	java.time.chrono::MinguoChronology
	java.time.chrono::IsoChronology
}
supertypes {
	java.time.chrono::Chronology
	java.lang::Object
}
members {

	[Function]
	protected AbstractChronology()
	Name: AbstractChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#AbstractChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::AbstractChronology
	}

	[Function]
	public ChronoLocalDate resolveDate(Map<TemporalField,Long> fieldValues,
	                                   ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::ChronoLocalDate
	}

	[Function]
	public int compareTo(Chronology other)
	Name: compareTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#compareTo-java.time.chrono.Chronology-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Chronology
	
		[result]
		other::int
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/AbstractChronology.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: AbstractChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class HijrahChronology
extends AbstractChronology
implements Serializable
Name: HijrahChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.time.chrono::AbstractChronology
}
members {

	[Function]
	public static final HijrahChronology INSTANCE
	Name: INSTANCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#INSTANCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahChronology
	}

	[Function]
	public String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public HijrahDate date(Era era,
	                       int yearOfEra,
	                       int month,
	                       int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate date(int prolepticYear,
	                       int month,
	                       int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateYearDay(Era era,
	                              int yearOfEra,
	                              int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateYearDay(int prolepticYear,
	                              int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public ChronoLocalDateTime<HijrahDate> localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::HijrahDate
		}
	}

	[Function]
	public ChronoZonedDateTime<HijrahDate> zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::HijrahDate
		}
	}

	[Function]
	public ChronoZonedDateTime<HijrahDate> zonedDateTime(Instant instant,
	                                                     ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::HijrahDate
		}
	}

	[Function]
	public boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	public int prolepticYear(Era era,
	                         int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	public HijrahEra eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::HijrahEra
	}

	[Function]
	public List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	public ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public HijrahDate resolveDate(Map<TemporalField,Long> fieldValues,
	                              ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::HijrahDate
	}
}

[Classifier]
public final class HijrahDate
extends Object
implements ChronoLocalDate, Serializable
Name: HijrahDate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::ChronoLocalDate
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static HijrahDate now()
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#now--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public static HijrahDate now(ZoneId zone)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#now-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public static HijrahDate now(Clock clock)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#now-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public static HijrahDate of(int prolepticYear,
	                            int month,
	                            int dayOfMonth)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#of-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public static HijrahDate from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahChronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahChronology
	}

	[Function]
	public HijrahEra getEra()
	Name: getEra
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#getEra--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahEra
	}

	[Function]
	public int lengthOfMonth()
	Name: lengthOfMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#lengthOfMonth--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int lengthOfYear()
	Name: lengthOfYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#lengthOfYear--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	public HijrahDate with(TemporalField field,
	                       long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate withVariant(HijrahChronology chronology)
	Name: withVariant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#withVariant-java.time.chrono.HijrahChronology-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::HijrahChronology
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public long toEpochDay()
	Name: toEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#toEpochDay--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean isLeapYear()
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#isLeapYear--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public HijrahDate plus(long amountToAdd,
	                       TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public HijrahDate minus(long amountToSubtract,
	                        TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::HijrahDate
	}

	[Function]
	public final ChronoLocalDateTime<HijrahDate> atTime(LocalTime localTime)
	Name: atTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#atTime-java.time.LocalTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::HijrahDate
		}
	}

	[Function]
	public ChronoPeriod until(ChronoLocalDate endDate)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#until-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long until(Temporal endExclusive,
	                  TemporalUnit unit)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahDate.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class IsoChronology
extends AbstractChronology
implements Serializable
Name: IsoChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.time.chrono::AbstractChronology
}
members {

	[Function]
	public static final IsoChronology INSTANCE
	Name: INSTANCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#INSTANCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::IsoChronology
	}

	[Function]
	public String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public LocalDate date(Era era,
	                      int yearOfEra,
	                      int month,
	                      int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate date(int prolepticYear,
	                      int month,
	                      int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate dateYearDay(Era era,
	                             int yearOfEra,
	                             int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate dateYearDay(int prolepticYear,
	                             int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDateTime localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time::LocalDateTime
	}

	[Function]
	public ZonedDateTime zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time::ZonedDateTime
	}

	[Function]
	public ZonedDateTime zonedDateTime(Instant instant,
	                                   ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time::ZonedDateTime
	}

	[Function]
	public LocalDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public LocalDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	public int prolepticYear(Era era,
	                         int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	public IsoEra eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::IsoEra
	}

	[Function]
	public List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	public LocalDate resolveDate(Map<TemporalField,Long> fieldValues,
	                             ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time::LocalDate
	}

	[Function]
	public ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public Period period(int years,
	                     int months,
	                     int days)
	Name: period
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoChronology.html#period-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time::Period
	}
}

[Classifier]
public final class JapaneseChronology
extends AbstractChronology
implements Serializable
Name: JapaneseChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.time.chrono::AbstractChronology
}
members {

	[Function]
	public static final JapaneseChronology INSTANCE
	Name: INSTANCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#INSTANCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseChronology
	}

	[Function]
	public String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public JapaneseDate date(Era era,
	                         int yearOfEra,
	                         int month,
	                         int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate date(int prolepticYear,
	                         int month,
	                         int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateYearDay(Era era,
	                                int yearOfEra,
	                                int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateYearDay(int prolepticYear,
	                                int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public ChronoLocalDateTime<JapaneseDate> localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::JapaneseDate
		}
	}

	[Function]
	public ChronoZonedDateTime<JapaneseDate> zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::JapaneseDate
		}
	}

	[Function]
	public ChronoZonedDateTime<JapaneseDate> zonedDateTime(Instant instant,
	                                                       ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::JapaneseDate
		}
	}

	[Function]
	public boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	public int prolepticYear(Era era,
	                         int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	public JapaneseEra eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	public ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public JapaneseDate resolveDate(Map<TemporalField,Long> fieldValues,
	                                ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::JapaneseDate
	}
}

[Classifier]
public final class JapaneseDate
extends Object
implements ChronoLocalDate, Serializable
Name: JapaneseDate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::ChronoLocalDate
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static JapaneseDate now()
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#now--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public static JapaneseDate now(ZoneId zone)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#now-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public static JapaneseDate now(Clock clock)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#now-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public static JapaneseDate of(JapaneseEra era,
	                              int yearOfEra,
	                              int month,
	                              int dayOfMonth)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#of-java.time.chrono.JapaneseEra-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::JapaneseEra
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public static JapaneseDate of(int prolepticYear,
	                              int month,
	                              int dayOfMonth)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#of-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public static JapaneseDate from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseChronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseChronology
	}

	[Function]
	public JapaneseEra getEra()
	Name: getEra
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#getEra--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public int lengthOfMonth()
	Name: lengthOfMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#lengthOfMonth--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int lengthOfYear()
	Name: lengthOfYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#lengthOfYear--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public boolean isSupported(TemporalField field)
	Name: isSupported
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#isSupported-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::boolean
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	public JapaneseDate with(TemporalField field,
	                         long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate plus(long amountToAdd,
	                         TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public JapaneseDate minus(long amountToAdd,
	                          TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::JapaneseDate
	}

	[Function]
	public final ChronoLocalDateTime<JapaneseDate> atTime(LocalTime localTime)
	Name: atTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#atTime-java.time.LocalTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::JapaneseDate
		}
	}

	[Function]
	public ChronoPeriod until(ChronoLocalDate endDate)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#until-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	public long toEpochDay()
	Name: toEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#toEpochDay--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long until(Temporal endExclusive,
	                  TemporalUnit unit)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseDate.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class JapaneseEra
extends Object
implements Era, Serializable
Name: JapaneseEra
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::Era
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static final JapaneseEra MEIJI
	Name: MEIJI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#MEIJI
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static final JapaneseEra TAISHO
	Name: TAISHO
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#TAISHO
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static final JapaneseEra SHOWA
	Name: SHOWA
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#SHOWA
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static final JapaneseEra HEISEI
	Name: HEISEI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#HEISEI
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static JapaneseEra of(int japaneseEra)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#of-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static JapaneseEra valueOf(String japaneseEra)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#valueOf-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::JapaneseEra
	}

	[Function]
	public static JapaneseEra[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#values--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.time.chrono::JapaneseEra
		}
	}

	[Function]
	public int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/JapaneseEra.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: JapaneseEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class MinguoChronology
extends AbstractChronology
implements Serializable
Name: MinguoChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.time.chrono::AbstractChronology
}
members {

	[Function]
	public static final MinguoChronology INSTANCE
	Name: INSTANCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#INSTANCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoChronology
	}

	[Function]
	public String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public MinguoDate date(Era era,
	                       int yearOfEra,
	                       int month,
	                       int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate date(int prolepticYear,
	                       int month,
	                       int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateYearDay(Era era,
	                              int yearOfEra,
	                              int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateYearDay(int prolepticYear,
	                              int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public ChronoLocalDateTime<MinguoDate> localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::MinguoDate
		}
	}

	[Function]
	public ChronoZonedDateTime<MinguoDate> zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::MinguoDate
		}
	}

	[Function]
	public ChronoZonedDateTime<MinguoDate> zonedDateTime(Instant instant,
	                                                     ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::MinguoDate
		}
	}

	[Function]
	public boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	public int prolepticYear(Era era,
	                         int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	public MinguoEra eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	public ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public MinguoDate resolveDate(Map<TemporalField,Long> fieldValues,
	                              ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::MinguoDate
	}
}

[Classifier]
public final class MinguoDate
extends Object
implements ChronoLocalDate, Serializable
Name: MinguoDate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::ChronoLocalDate
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static MinguoDate now()
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#now--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public static MinguoDate now(ZoneId zone)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#now-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public static MinguoDate now(Clock clock)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#now-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public static MinguoDate of(int prolepticYear,
	                            int month,
	                            int dayOfMonth)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#of-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public static MinguoDate from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoChronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoChronology
	}

	[Function]
	public MinguoEra getEra()
	Name: getEra
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#getEra--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public int lengthOfMonth()
	Name: lengthOfMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#lengthOfMonth--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	public MinguoDate with(TemporalField field,
	                       long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate plus(long amountToAdd,
	                       TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public MinguoDate minus(long amountToAdd,
	                        TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::MinguoDate
	}

	[Function]
	public final ChronoLocalDateTime<MinguoDate> atTime(LocalTime localTime)
	Name: atTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#atTime-java.time.LocalTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::MinguoDate
		}
	}

	[Function]
	public ChronoPeriod until(ChronoLocalDate endDate)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#until-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	public long toEpochDay()
	Name: toEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#toEpochDay--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long until(Temporal endExclusive,
	                  TemporalUnit unit)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoDate.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public final class ThaiBuddhistChronology
extends AbstractChronology
implements Serializable
Name: ThaiBuddhistChronology
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.time.chrono::AbstractChronology
}
members {

	[Function]
	public static final ThaiBuddhistChronology INSTANCE
	Name: INSTANCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#INSTANCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistChronology
	}

	[Function]
	public String getId()
	Name: getId
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#getId--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getCalendarType()
	Name: getCalendarType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#getCalendarType--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public ThaiBuddhistDate date(Era era,
	                             int yearOfEra,
	                             int month,
	                             int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#date-java.time.chrono.Era-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate date(int prolepticYear,
	                             int month,
	                             int dayOfMonth)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#date-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateYearDay(Era era,
	                                    int yearOfEra,
	                                    int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateYearDay-java.time.chrono.Era-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateYearDay(int prolepticYear,
	                                    int dayOfYear)
	Name: dateYearDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateYearDay-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateEpochDay(long epochDay)
	Name: dateEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateEpochDay-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateNow()
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateNow--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateNow(ZoneId zone)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateNow-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate dateNow(Clock clock)
	Name: dateNow
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#dateNow-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate date(TemporalAccessor temporal)
	Name: date
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#date-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ChronoLocalDateTime<ThaiBuddhistDate> localDateTime(TemporalAccessor temporal)
	Name: localDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#localDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::ThaiBuddhistDate
		}
	}

	[Function]
	public ChronoZonedDateTime<ThaiBuddhistDate> zonedDateTime(TemporalAccessor temporal)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#zonedDateTime-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::ThaiBuddhistDate
		}
	}

	[Function]
	public ChronoZonedDateTime<ThaiBuddhistDate> zonedDateTime(Instant instant,
	                                                           ZoneId zone)
	Name: zonedDateTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#zonedDateTime-java.time.Instant-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Instant
		java.time::ZoneId
	
		[result]
		java.time.chrono::ChronoZonedDateTime {
			java.time.chrono::ThaiBuddhistDate
		}
	}

	[Function]
	public boolean isLeapYear(long prolepticYear)
	Name: isLeapYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#isLeapYear-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
	
		[result]
		other::boolean
	}

	[Function]
	public int prolepticYear(Era era,
	                         int yearOfEra)
	Name: prolepticYear
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#prolepticYear-java.time.chrono.Era-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::Era
		other::int
	
		[result]
		other::int
	}

	[Function]
	public ThaiBuddhistEra eraOf(int eraValue)
	Name: eraOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#eraOf-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public List<Era> eras()
	Name: eras
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#eras--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.time.chrono::Era
		}
	}

	[Function]
	public ValueRange range(ChronoField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#range-java.time.temporal.ChronoField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::ChronoField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public ThaiBuddhistDate resolveDate(Map<TemporalField,Long> fieldValues,
	                                    ResolverStyle resolverStyle)
	Name: resolveDate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistChronology.html#resolveDate-java.util.Map-java.time.format.ResolverStyle-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistChronology
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::Map {
			java.time.temporal::TemporalField
			java.lang::Long
		}
		java.time.format::ResolverStyle
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}
}

[Classifier]
public final class ThaiBuddhistDate
extends Object
implements ChronoLocalDate, Serializable
Name: ThaiBuddhistDate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::ChronoLocalDate
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static ThaiBuddhistDate now()
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#now--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public static ThaiBuddhistDate now(ZoneId zone)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#now-java.time.ZoneId-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::ZoneId
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public static ThaiBuddhistDate now(Clock clock)
	Name: now
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#now-java.time.Clock-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::Clock
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public static ThaiBuddhistDate of(int prolepticYear,
	                                  int month,
	                                  int dayOfMonth)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#of-int-int-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public static ThaiBuddhistDate from(TemporalAccessor temporal)
	Name: from
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#from-java.time.temporal.TemporalAccessor-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAccessor
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistChronology getChronology()
	Name: getChronology
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#getChronology--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistChronology
	}

	[Function]
	public ThaiBuddhistEra getEra()
	Name: getEra
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#getEra--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public int lengthOfMonth()
	Name: lengthOfMonth
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#lengthOfMonth--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}

	[Function]
	public long getLong(TemporalField field)
	Name: getLong
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#getLong-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		other::long
	}

	[Function]
	public ThaiBuddhistDate with(TemporalField field,
	                             long newValue)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#with-java.time.temporal.TemporalField-long-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
		other::long
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate with(TemporalAdjuster adjuster)
	Name: with
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#with-java.time.temporal.TemporalAdjuster-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAdjuster
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate plus(TemporalAmount amount)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#plus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate minus(TemporalAmount amount)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#minus-java.time.temporal.TemporalAmount-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalAmount
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate plus(long amountToAdd,
	                             TemporalUnit unit)
	Name: plus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#plus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public ThaiBuddhistDate minus(long amountToAdd,
	                              TemporalUnit unit)
	Name: minus
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#minus-long-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::long
		java.time.temporal::TemporalUnit
	
		[result]
		java.time.chrono::ThaiBuddhistDate
	}

	[Function]
	public final ChronoLocalDateTime<ThaiBuddhistDate> atTime(LocalTime localTime)
	Name: atTime
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#atTime-java.time.LocalTime-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time::LocalTime
	
		[result]
		java.time.chrono::ChronoLocalDateTime {
			java.time.chrono::ThaiBuddhistDate
		}
	}

	[Function]
	public ChronoPeriod until(ChronoLocalDate endDate)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#until-java.time.chrono.ChronoLocalDate-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.chrono::ChronoLocalDate
	
		[result]
		java.time.chrono::ChronoPeriod
	}

	[Function]
	public long toEpochDay()
	Name: toEpochDay
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#toEpochDay--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::long
	}

	[Function]
	public boolean equals(Object obj)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#equals-java.lang.Object-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#hashCode--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public long until(Temporal endExclusive,
	                  TemporalUnit unit)
	Name: until
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::Temporal
		java.time.temporal::TemporalUnit
	
		[result]
		other::long
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistDate.html#toString--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistDate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public enum HijrahEra
extends Enum<HijrahEra>
implements Era
Name: HijrahEra
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::Era
	java.lang::Enum {
		java.time.chrono::HijrahEra
	}
}
members {

	[Function]
	public static final HijrahEra AH
	Name: AH
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#AH
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::HijrahEra
	}

	[Function]
	public static HijrahEra[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#values--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.time.chrono::HijrahEra
		}
	}

	[Function]
	public static HijrahEra valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#valueOf-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::HijrahEra
	}

	[Function]
	public static HijrahEra of(int hijrahEra)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#of-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::HijrahEra
	}

	[Function]
	public int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public ValueRange range(TemporalField field)
	Name: range
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/HijrahEra.html#range-java.time.temporal.TemporalField-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: HijrahEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.time.temporal::TemporalField
	
		[result]
		java.time.temporal::ValueRange
	}
}

[Classifier]
public enum IsoEra
extends Enum<IsoEra>
implements Era
Name: IsoEra
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::Era
	java.lang::Enum {
		java.time.chrono::IsoEra
	}
}
members {

	[Function]
	public static final IsoEra BCE
	Name: BCE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#BCE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::IsoEra
	}

	[Function]
	public static final IsoEra CE
	Name: CE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#CE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::IsoEra
	}

	[Function]
	public static IsoEra[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#values--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.time.chrono::IsoEra
		}
	}

	[Function]
	public static IsoEra valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#valueOf-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::IsoEra
	}

	[Function]
	public static IsoEra of(int isoEra)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#of-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::IsoEra
	}

	[Function]
	public int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/IsoEra.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: IsoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public enum MinguoEra
extends Enum<MinguoEra>
implements Era
Name: MinguoEra
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::Era
	java.lang::Enum {
		java.time.chrono::MinguoEra
	}
}
members {

	[Function]
	public static final MinguoEra BEFORE_ROC
	Name: BEFORE_ROC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#BEFORE_ROC
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public static final MinguoEra ROC
	Name: ROC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#ROC
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public static MinguoEra[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#values--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.time.chrono::MinguoEra
		}
	}

	[Function]
	public static MinguoEra valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#valueOf-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public static MinguoEra of(int minguoEra)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#of-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::MinguoEra
	}

	[Function]
	public int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/MinguoEra.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MinguoEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}

[Classifier]
public enum ThaiBuddhistEra
extends Enum<ThaiBuddhistEra>
implements Era
Name: ThaiBuddhistEra
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html
Containing package: java.time.chrono
attributes {
	abstract=false
	final=false
	classifierType=enum
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.time.chrono::Era
	java.lang::Enum {
		java.time.chrono::ThaiBuddhistEra
	}
}
members {

	[Function]
	public static final ThaiBuddhistEra BEFORE_BE
	Name: BEFORE_BE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#BEFORE_BE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public static final ThaiBuddhistEra BE
	Name: BE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#BE
	Containing package: java.time.chrono
	attributes {
		final=true
		scope=public
		static=true
		memberType=enumConst
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public static ThaiBuddhistEra[] values()
	Name: values
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#values--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.time.chrono::ThaiBuddhistEra
		}
	}

	[Function]
	public static ThaiBuddhistEra valueOf(String name)
	Name: valueOf
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#valueOf-java.lang.String-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public static ThaiBuddhistEra of(int thaiBuddhistEra)
	Name: of
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#of-int-
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.time.chrono::ThaiBuddhistEra
	}

	[Function]
	public int getValue()
	Name: getValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/time/chrono/ThaiBuddhistEra.html#getValue--
	Containing package: java.time.chrono
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ThaiBuddhistEra
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}
}