[Package]
Name: javax.transaction
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/package-summary.html
Containing package: null
attributes {
}

Subpackages {
	javax.transaction.xa
}

[Classifier]
public class InvalidTransactionException
extends RemoteException
Name: InvalidTransactionException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/InvalidTransactionException.html
Containing package: javax.transaction
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.rmi::RemoteException
}
members {

	[Function]
	public InvalidTransactionException()
	Name: InvalidTransactionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/InvalidTransactionException.html#InvalidTransactionException--
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidTransactionException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.transaction::InvalidTransactionException
	}

	[Function]
	public InvalidTransactionException(String msg)
	Name: InvalidTransactionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/InvalidTransactionException.html#InvalidTransactionException-java.lang.String-
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: InvalidTransactionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.transaction::InvalidTransactionException
	}
}

[Classifier]
public class TransactionRequiredException
extends RemoteException
Name: TransactionRequiredException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRequiredException.html
Containing package: javax.transaction
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.rmi::RemoteException
}
members {

	[Function]
	public TransactionRequiredException()
	Name: TransactionRequiredException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRequiredException.html#TransactionRequiredException--
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransactionRequiredException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.transaction::TransactionRequiredException
	}

	[Function]
	public TransactionRequiredException(String msg)
	Name: TransactionRequiredException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRequiredException.html#TransactionRequiredException-java.lang.String-
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransactionRequiredException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.transaction::TransactionRequiredException
	}
}

[Classifier]
public class TransactionRolledbackException
extends RemoteException
Name: TransactionRolledbackException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRolledbackException.html
Containing package: javax.transaction
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.rmi::RemoteException
}
members {

	[Function]
	public TransactionRolledbackException()
	Name: TransactionRolledbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRolledbackException.html#TransactionRolledbackException--
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransactionRolledbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.transaction::TransactionRolledbackException
	}

	[Function]
	public TransactionRolledbackException(String msg)
	Name: TransactionRolledbackException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/transaction/TransactionRolledbackException.html#TransactionRolledbackException-java.lang.String-
	Containing package: javax.transaction
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: TransactionRolledbackException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		javax.transaction::TransactionRolledbackException
	}
}