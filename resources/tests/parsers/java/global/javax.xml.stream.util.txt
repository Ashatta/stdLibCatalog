[Package]
Name: javax.xml.stream.util
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/package-summary.html
Containing package: javax.xml.stream
attributes {
}

Subpackages {
}

[Classifier]
public interface XMLEventAllocator
Name: XMLEventAllocator
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventAllocator.html
Containing package: javax.xml.stream.util
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	XMLEventAllocator newInstance()
	Name: newInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventAllocator.html#newInstance--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEventAllocator
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.util::XMLEventAllocator
	}

	[Function]
	XMLEvent allocate(XMLStreamReader reader)
	           throws XMLStreamException
	Name: allocate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventAllocator.html#allocate-javax.xml.stream.XMLStreamReader-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEventAllocator
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
	
		[result]
		javax.xml.stream.events::XMLEvent
	}

	[Function]
	void allocate(XMLStreamReader reader,
	              XMLEventConsumer consumer)
	       throws XMLStreamException
	Name: allocate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventAllocator.html#allocate-javax.xml.stream.XMLStreamReader-javax.xml.stream.util.XMLEventConsumer-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEventAllocator
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
		javax.xml.stream.util::XMLEventConsumer
	
		[result]
		other::void
	}
}

[Classifier]
public interface XMLEventConsumer
Name: XMLEventConsumer
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventConsumer.html
Containing package: javax.xml.stream.util
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
	javax.xml.stream::XMLEventWriter
}
supertypes {
}
members {

	[Function]
	void add(XMLEvent event)
	  throws XMLStreamException
	Name: add
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/XMLEventConsumer.html#add-javax.xml.stream.events.XMLEvent-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: XMLEventConsumer
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream.events::XMLEvent
	
		[result]
		other::void
	}
}

[Classifier]
public class EventReaderDelegate
extends Object
implements XMLEventReader
Name: EventReaderDelegate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html
Containing package: javax.xml.stream.util
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream::XMLEventReader
	java.lang::Object
}
members {

	[Function]
	public EventReaderDelegate()
	Name: EventReaderDelegate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#EventReaderDelegate--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.util::EventReaderDelegate
	}

	[Function]
	public EventReaderDelegate(XMLEventReader reader)
	Name: EventReaderDelegate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#EventReaderDelegate-javax.xml.stream.XMLEventReader-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLEventReader
	
		[result]
		javax.xml.stream.util::EventReaderDelegate
	}

	[Function]
	public void setParent(XMLEventReader reader)
	Name: setParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#setParent-javax.xml.stream.XMLEventReader-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLEventReader
	
		[result]
		other::void
	}

	[Function]
	public XMLEventReader getParent()
	Name: getParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#getParent--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream::XMLEventReader
	}

	[Function]
	public XMLEvent nextEvent()
	                   throws XMLStreamException
	Name: nextEvent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#nextEvent--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::XMLEvent
	}

	[Function]
	public Object next()
	Name: next
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#next--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Object
	}

	[Function]
	public boolean hasNext()
	Name: hasNext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#hasNext--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public XMLEvent peek()
	              throws XMLStreamException
	Name: peek
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#peek--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::XMLEvent
	}

	[Function]
	public void close()
	           throws XMLStreamException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#close--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public String getElementText()
	                      throws XMLStreamException
	Name: getElementText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#getElementText--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public XMLEvent nextTag()
	                 throws XMLStreamException
	Name: nextTag
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#nextTag--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.events::XMLEvent
	}

	[Function]
	public Object getProperty(String name)
	                   throws IllegalArgumentException
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#getProperty-java.lang.String-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}

	[Function]
	public void remove()
	Name: remove
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/EventReaderDelegate.html#remove--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: EventReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}
}

[Classifier]
public class StreamReaderDelegate
extends Object
implements XMLStreamReader
Name: StreamReaderDelegate
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html
Containing package: javax.xml.stream.util
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	javax.xml.stream::XMLStreamReader
	java.lang::Object
}
members {

	[Function]
	public StreamReaderDelegate()
	Name: StreamReaderDelegate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#StreamReaderDelegate--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream.util::StreamReaderDelegate
	}

	[Function]
	public StreamReaderDelegate(XMLStreamReader reader)
	Name: StreamReaderDelegate
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#StreamReaderDelegate-javax.xml.stream.XMLStreamReader-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
	
		[result]
		javax.xml.stream.util::StreamReaderDelegate
	}

	[Function]
	public void setParent(XMLStreamReader reader)
	Name: setParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#setParent-javax.xml.stream.XMLStreamReader-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		javax.xml.stream::XMLStreamReader
	
		[result]
		other::void
	}

	[Function]
	public XMLStreamReader getParent()
	Name: getParent
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getParent--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream::XMLStreamReader
	}

	[Function]
	public int next()
	         throws XMLStreamException
	Name: next
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#next--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int nextTag()
	            throws XMLStreamException
	Name: nextTag
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#nextTag--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String getElementText()
	                      throws XMLStreamException
	Name: getElementText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getElementText--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public void require(int type,
	                    String namespaceURI,
	                    String localName)
	             throws XMLStreamException
	Name: require
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#require-int-java.lang.String-java.lang.String-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::String
		java.lang::String
	
		[result]
		other::void
	}

	[Function]
	public boolean hasNext()
	                throws XMLStreamException
	Name: hasNext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#hasNext--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public void close()
	           throws XMLStreamException
	Name: close
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#close--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::void
	}

	[Function]
	public String getNamespaceURI(String prefix)
	Name: getNamespaceURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespaceURI-java.lang.String-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public NamespaceContext getNamespaceContext()
	Name: getNamespaceContext
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespaceContext--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::NamespaceContext
	}

	[Function]
	public boolean isStartElement()
	Name: isStartElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isStartElement--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isEndElement()
	Name: isEndElement
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isEndElement--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isCharacters()
	Name: isCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isCharacters--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean isWhiteSpace()
	Name: isWhiteSpace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isWhiteSpace--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public String getAttributeValue(String namespaceUri,
	                                String localName)
	Name: getAttributeValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeValue-java.lang.String-java.lang.String-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::String
	
		[result]
		java.lang::String
	}

	[Function]
	public int getAttributeCount()
	Name: getAttributeCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeCount--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public QName getAttributeName(int index)
	Name: getAttributeName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeName-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	public String getAttributePrefix(int index)
	Name: getAttributePrefix
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributePrefix-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public String getAttributeNamespace(int index)
	Name: getAttributeNamespace
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeNamespace-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public String getAttributeLocalName(int index)
	Name: getAttributeLocalName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeLocalName-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public String getAttributeType(int index)
	Name: getAttributeType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeType-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public String getAttributeValue(int index)
	Name: getAttributeValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getAttributeValue-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isAttributeSpecified(int index)
	Name: isAttributeSpecified
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isAttributeSpecified-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		other::boolean
	}

	[Function]
	public int getNamespaceCount()
	Name: getNamespaceCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespaceCount--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String getNamespacePrefix(int index)
	Name: getNamespacePrefix
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespacePrefix-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public String getNamespaceURI(int index)
	Name: getNamespaceURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespaceURI-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	public int getEventType()
	Name: getEventType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getEventType--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String getText()
	Name: getText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getText--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getTextCharacters(int sourceStart,
	                             char[] target,
	                             int targetStart,
	                             int length)
	                      throws XMLStreamException
	Name: getTextCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getTextCharacters-int-char:A-int-int-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::[] {
			other::char
		}
		other::int
		other::int
	
		[result]
		other::int
	}

	[Function]
	public char[] getTextCharacters()
	Name: getTextCharacters
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getTextCharacters--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			other::char
		}
	}

	[Function]
	public int getTextStart()
	Name: getTextStart
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getTextStart--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public int getTextLength()
	Name: getTextLength
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getTextLength--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String getEncoding()
	Name: getEncoding
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getEncoding--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean hasText()
	Name: hasText
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#hasText--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public Location getLocation()
	Name: getLocation
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getLocation--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.stream::Location
	}

	[Function]
	public QName getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getName--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		javax.xml.namespace::QName
	}

	[Function]
	public String getLocalName()
	Name: getLocalName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getLocalName--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean hasName()
	Name: hasName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#hasName--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public String getNamespaceURI()
	Name: getNamespaceURI
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getNamespaceURI--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getPrefix()
	Name: getPrefix
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getPrefix--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getVersion()
	Name: getVersion
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getVersion--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public boolean isStandalone()
	Name: isStandalone
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#isStandalone--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean standaloneSet()
	Name: standaloneSet
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#standaloneSet--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public String getCharacterEncodingScheme()
	Name: getCharacterEncodingScheme
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getCharacterEncodingScheme--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getPITarget()
	Name: getPITarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getPITarget--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getPIData()
	Name: getPIData
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getPIData--
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public Object getProperty(String name)
	Name: getProperty
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/javax/xml/stream/util/StreamReaderDelegate.html#getProperty-java.lang.String-
	Containing package: javax.xml.stream.util
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: StreamReaderDelegate
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang::Object
	}
}