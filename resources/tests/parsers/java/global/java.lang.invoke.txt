[Package]
Name: java.lang.invoke
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/package-summary.html
Containing package: java.lang
attributes {
}

Subpackages {
}

[Classifier]
public interface MethodHandleInfo
Name: MethodHandleInfo
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=interface
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
}
members {

	[Function]
	static final int REF_getField
	Name: REF_getField
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_getField
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_getStatic
	Name: REF_getStatic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_getStatic
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_putField
	Name: REF_putField
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_putField
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_putStatic
	Name: REF_putStatic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_putStatic
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_invokeVirtual
	Name: REF_invokeVirtual
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_invokeVirtual
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_invokeStatic
	Name: REF_invokeStatic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_invokeStatic
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_invokeSpecial
	Name: REF_invokeSpecial
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_invokeSpecial
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_newInvokeSpecial
	Name: REF_newInvokeSpecial
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_newInvokeSpecial
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	static final int REF_invokeInterface
	Name: REF_invokeInterface
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#REF_invokeInterface
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	int getReferenceKind()
	Name: getReferenceKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#getReferenceKind--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	Class<?> getDeclaringClass()
	Name: getDeclaringClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#getDeclaringClass--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	String getName()
	Name: getName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#getName--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	MethodType getMethodType()
	Name: getMethodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#getMethodType--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	<T extends Member> T reflectAs(Class<T> expected,
	                               MethodHandles.Lookup lookup)
	Name: reflectAs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#reflectAs-java.lang.Class-java.lang.invoke.MethodHandles.Lookup-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
		T: (T extends Member; T; java.lang.reflect::Member)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
		java.lang.invoke::MethodHandles.Lookup
	
		[result]
		null::T
	}

	[Function]
	int getModifiers()
	Name: getModifiers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#getModifiers--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	default boolean isVarArgs()
	Name: isVarArgs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#isVarArgs--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=true
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	static String referenceKindToString(int referenceKind)
	Name: referenceKindToString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#referenceKindToString-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::String
	}

	[Function]
	static String toString(int kind,
	                       Class<?> defc,
	                       String name,
	                       MethodType type)
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleInfo.html#toString-int-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleInfo
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang.invoke::MethodType
	
		[result]
		java.lang::String
	}
}

[Classifier]
public abstract class CallSite
extends Object
Name: CallSite
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/CallSite.html
Containing package: java.lang.invoke
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
	java.lang.invoke::MutableCallSite
	java.lang.invoke::ConstantCallSite
	java.lang.invoke::VolatileCallSite
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public MethodType type()
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/CallSite.html#type--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public abstract MethodHandle getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/CallSite.html#getTarget--
	Containing package: java.lang.invoke
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public abstract void setTarget(MethodHandle newTarget)
	Name: setTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/CallSite.html#setTarget-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		other::void
	}

	[Function]
	public abstract MethodHandle dynamicInvoker()
	Name: dynamicInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/CallSite.html#dynamicInvoker--
	Containing package: java.lang.invoke
	attributes {
		abstract=true
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: CallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}
}

[Classifier]
public class ConstantCallSite
extends CallSite
Name: ConstantCallSite
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang.invoke::CallSite
}
members {

	[Function]
	public ConstantCallSite(MethodHandle target)
	Name: ConstantCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html#ConstantCallSite-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ConstantCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::ConstantCallSite
	}

	[Function]
	protected ConstantCallSite(MethodType targetType,
	                           MethodHandle createTargetHook)
	                    throws Throwable
	Name: ConstantCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html#ConstantCallSite-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=protected
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: ConstantCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::ConstantCallSite
	}

	[Function]
	public final MethodHandle getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html#getTarget--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConstantCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public final void setTarget(MethodHandle ignore)
	Name: setTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html#setTarget-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConstantCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		other::void
	}

	[Function]
	public final MethodHandle dynamicInvoker()
	Name: dynamicInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/ConstantCallSite.html#dynamicInvoker--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: ConstantCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}
}

[Classifier]
public class LambdaMetafactory
extends Object
Name: LambdaMetafactory
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int FLAG_SERIALIZABLE
	Name: FLAG_SERIALIZABLE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#FLAG_SERIALIZABLE
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int FLAG_MARKERS
	Name: FLAG_MARKERS
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#FLAG_MARKERS
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int FLAG_BRIDGES
	Name: FLAG_BRIDGES
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#FLAG_BRIDGES
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public LambdaMetafactory()
	Name: LambdaMetafactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#LambdaMetafactory--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::LambdaMetafactory
	}

	[Function]
	public static CallSite metafactory(MethodHandles.Lookup caller,
	                                   String invokedName,
	                                   MethodType invokedType,
	                                   MethodType samMethodType,
	                                   MethodHandle implMethod,
	                                   MethodType instantiatedMethodType)
	                            throws LambdaConversionException
	Name: metafactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandles.Lookup
		java.lang::String
		java.lang.invoke::MethodType
		java.lang.invoke::MethodType
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::CallSite
	}

	[Function]
	public static CallSite altMetafactory(MethodHandles.Lookup caller,
	                                      String invokedName,
	                                      MethodType invokedType,
	                                      Object... args)
	                               throws LambdaConversionException
	Name: altMetafactory
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaMetafactory.html#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: LambdaMetafactory
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandles.Lookup
		java.lang::String
		java.lang.invoke::MethodType
		other::... {
			java.lang::Object
		}
	
		[result]
		java.lang.invoke::CallSite
	}
}

[Classifier]
public abstract class MethodHandle
extends Object
Name: MethodHandle
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html
Containing package: java.lang.invoke
attributes {
	abstract=true
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public MethodType type()
	Name: type
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#type--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public final Object invokeExact(Object... args)
	                         throws Throwable
	Name: invokeExact
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#invokeExact-java.lang.Object...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::Object
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public final Object invoke(Object... args)
	                    throws Throwable
	Name: invoke
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#invoke-java.lang.Object...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::Object
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object invokeWithArguments(Object... arguments)
	                           throws Throwable
	Name: invokeWithArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#invokeWithArguments-java.lang.Object...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::Object
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public Object invokeWithArguments(List<?> arguments)
	                           throws Throwable
	Name: invokeWithArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#invokeWithArguments-java.util.List-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List {
			?
		}
	
		[result]
		java.lang::Object
	}

	[Function]
	public MethodHandle asType(MethodType newType)
	Name: asType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#asType-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle asSpreader(Class<?> arrayType,
	                               int arrayLength)
	Name: asSpreader
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#asSpreader-java.lang.Class-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		other::int
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle asCollector(Class<?> arrayType,
	                                int arrayLength)
	Name: asCollector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#asCollector-java.lang.Class-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		other::int
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle asVarargsCollector(Class<?> arrayType)
	Name: asVarargsCollector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#asVarargsCollector-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public boolean isVarargsCollector()
	Name: isVarargsCollector
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#isVarargsCollector--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public MethodHandle asFixedArity()
	Name: asFixedArity
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#asFixedArity--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle bindTo(Object x)
	Name: bindTo
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#bindTo-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandle.html#toString--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandle
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class MethodHandleProxies
extends Object
Name: MethodHandleProxies
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleProxies.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static <T> T asInterfaceInstance(Class<T> intfc,
	                                        MethodHandle target)
	Name: asInterfaceInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleProxies.html#asInterfaceInstance-java.lang.Class-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleProxies
	parameters {
		T
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
		java.lang.invoke::MethodHandle
	
		[result]
		null::T
	}

	[Function]
	public static boolean isWrapperInstance(Object x)
	Name: isWrapperInstance
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleProxies.html#isWrapperInstance-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleProxies
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public static MethodHandle wrapperInstanceTarget(Object x)
	Name: wrapperInstanceTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleProxies.html#wrapperInstanceTarget-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleProxies
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static Class<?> wrapperInstanceType(Object x)
	Name: wrapperInstanceType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandleProxies.html#wrapperInstanceType-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandleProxies
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		java.lang::Class {
			?
		}
	}
}

[Classifier]
public class MethodHandles
extends Object
Name: MethodHandles
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static MethodHandles.Lookup lookup()
	Name: lookup
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#lookup--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandles.Lookup
	}

	[Function]
	public static MethodHandles.Lookup publicLookup()
	Name: publicLookup
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#publicLookup--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandles.Lookup
	}

	[Function]
	public static <T extends Member> T reflectAs(Class<T> expected,
	                                             MethodHandle target)
	Name: reflectAs
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#reflectAs-java.lang.Class-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
		T: (T extends Member; T; java.lang.reflect::Member)
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			null::T
		}
		java.lang.invoke::MethodHandle
	
		[result]
		null::T
	}

	[Function]
	public static MethodHandle arrayElementGetter(Class<?> arrayClass)
	                                       throws IllegalArgumentException
	Name: arrayElementGetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#arrayElementGetter-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle arrayElementSetter(Class<?> arrayClass)
	                                       throws IllegalArgumentException
	Name: arrayElementSetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#arrayElementSetter-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle spreadInvoker(MethodType type,
	                                         int leadingArgCount)
	Name: spreadInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#spreadInvoker-java.lang.invoke.MethodType-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
		other::int
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle exactInvoker(MethodType type)
	Name: exactInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#exactInvoker-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle invoker(MethodType type)
	Name: invoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#invoker-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle explicitCastArguments(MethodHandle target,
	                                                 MethodType newType)
	Name: explicitCastArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#explicitCastArguments-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle permuteArguments(MethodHandle target,
	                                            MethodType newType,
	                                            int... reorder)
	Name: permuteArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#permuteArguments-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-int...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodType
		other::... {
			other::int
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle constant(Class<?> type,
	                                    Object value)
	Name: constant
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#constant-java.lang.Class-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::Object
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle identity(Class<?> type)
	Name: identity
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#identity-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle insertArguments(MethodHandle target,
	                                           int pos,
	                                           Object... values)
	Name: insertArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#insertArguments-java.lang.invoke.MethodHandle-int-java.lang.Object...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		other::int
		other::... {
			java.lang::Object
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle dropArguments(MethodHandle target,
	                                         int pos,
	                                         List<Class<?>> valueTypes)
	Name: dropArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		other::int
		java.util::List {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle dropArguments(MethodHandle target,
	                                         int pos,
	                                         Class<?>... valueTypes)
	Name: dropArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#dropArguments-java.lang.invoke.MethodHandle-int-java.lang.Class...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		other::int
		other::... {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle filterArguments(MethodHandle target,
	                                           int pos,
	                                           MethodHandle... filters)
	Name: filterArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		other::int
		other::... {
			java.lang.invoke::MethodHandle
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle collectArguments(MethodHandle target,
	                                            int pos,
	                                            MethodHandle filter)
	Name: collectArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#collectArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		other::int
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle filterReturnValue(MethodHandle target,
	                                             MethodHandle filter)
	Name: filterReturnValue
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#filterReturnValue-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle foldArguments(MethodHandle target,
	                                         MethodHandle combiner)
	Name: foldArguments
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#foldArguments-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle guardWithTest(MethodHandle test,
	                                         MethodHandle target,
	                                         MethodHandle fallback)
	Name: guardWithTest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle catchException(MethodHandle target,
	                                          Class<? extends Throwable> exType,
	                                          MethodHandle handler)
	Name: catchException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#catchException-java.lang.invoke.MethodHandle-java.lang.Class-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang::Class {
			? {
				extends java.lang::Throwable
			}
		}
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static MethodHandle throwException(Class<?> returnType,
	                                          Class<? extends Throwable> exType)
	Name: throwException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.html#throwException-java.lang.Class-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::Class {
			? {
				extends java.lang::Throwable
			}
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}
}

[Classifier]
public static final class MethodHandles.Lookup
extends Object
Name: MethodHandles.Lookup
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=true
	classifierType=class
	static=true
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public static final int PUBLIC
	Name: PUBLIC
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#PUBLIC
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int PRIVATE
	Name: PRIVATE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#PRIVATE
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int PROTECTED
	Name: PROTECTED
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#PROTECTED
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public static final int PACKAGE
	Name: PACKAGE
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#PACKAGE
	Containing package: java.lang.invoke
	attributes {
		final=true
		scope=public
		static=true
		memberType=field
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Class<?> lookupClass()
	Name: lookupClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#lookupClass--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	public int lookupModes()
	Name: lookupModes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#lookupModes--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public MethodHandles.Lookup in(Class<?> requestedLookupClass)
	Name: in
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#in-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandles.Lookup
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#toString--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public MethodHandle findStatic(Class<?> refc,
	                               String name,
	                               MethodType type)
	                        throws NoSuchMethodException,
	                               IllegalAccessException
	Name: findStatic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findStatic-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findVirtual(Class<?> refc,
	                                String name,
	                                MethodType type)
	                         throws NoSuchMethodException,
	                                IllegalAccessException
	Name: findVirtual
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findConstructor(Class<?> refc,
	                                    MethodType type)
	                             throws NoSuchMethodException,
	                                    IllegalAccessException
	Name: findConstructor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findConstructor-java.lang.Class-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findSpecial(Class<?> refc,
	                                String name,
	                                MethodType type,
	                                Class<?> specialCaller)
	                         throws NoSuchMethodException,
	                                IllegalAccessException
	Name: findSpecial
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findSpecial-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang.invoke::MethodType
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findGetter(Class<?> refc,
	                               String name,
	                               Class<?> type)
	                        throws NoSuchFieldException,
	                               IllegalAccessException
	Name: findGetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findGetter-java.lang.Class-java.lang.String-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findSetter(Class<?> refc,
	                               String name,
	                               Class<?> type)
	                        throws NoSuchFieldException,
	                               IllegalAccessException
	Name: findSetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findSetter-java.lang.Class-java.lang.String-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findStaticGetter(Class<?> refc,
	                                     String name,
	                                     Class<?> type)
	                              throws NoSuchFieldException,
	                                     IllegalAccessException
	Name: findStaticGetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findStaticGetter-java.lang.Class-java.lang.String-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle findStaticSetter(Class<?> refc,
	                                     String name,
	                                     Class<?> type)
	                              throws NoSuchFieldException,
	                                     IllegalAccessException
	Name: findStaticSetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#findStaticSetter-java.lang.Class-java.lang.String-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle bind(Object receiver,
	                         String name,
	                         MethodType type)
	                  throws NoSuchMethodException,
	                         IllegalAccessException
	Name: bind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#bind-java.lang.Object-java.lang.String-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
		java.lang::String
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle unreflect(Method m)
	                       throws IllegalAccessException
	Name: unreflect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#unreflect-java.lang.reflect.Method-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.reflect::Method
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle unreflectSpecial(Method m,
	                                     Class<?> specialCaller)
	                              throws IllegalAccessException
	Name: unreflectSpecial
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.reflect::Method
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle unreflectConstructor(Constructor<?> c)
	                                  throws IllegalAccessException
	Name: unreflectConstructor
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#unreflectConstructor-java.lang.reflect.Constructor-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.reflect::Constructor {
			?
		}
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle unreflectGetter(Field f)
	                             throws IllegalAccessException
	Name: unreflectGetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#unreflectGetter-java.lang.reflect.Field-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.reflect::Field
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandle unreflectSetter(Field f)
	                             throws IllegalAccessException
	Name: unreflectSetter
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#unreflectSetter-java.lang.reflect.Field-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.reflect::Field
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public MethodHandleInfo revealDirect(MethodHandle target)
	Name: revealDirect
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodHandles.Lookup.html#revealDirect-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodHandles.Lookup
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandleInfo
	}
}

[Classifier]
public final class MethodType
extends Object
implements Serializable
Name: MethodType
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public static MethodType methodType(Class<?> rtype,
	                                    Class<?>[] ptypes)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-java.lang.Class:A-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		other::[] {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType methodType(Class<?> rtype,
	                                    List<Class<?>> ptypes)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-java.util.List-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.util::List {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType methodType(Class<?> rtype,
	                                    Class<?> ptype0,
	                                    Class<?>... ptypes)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-java.lang.Class-java.lang.Class...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::Class {
			?
		}
		other::... {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType methodType(Class<?> rtype)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType methodType(Class<?> rtype,
	                                    Class<?> ptype0)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType methodType(Class<?> rtype,
	                                    MethodType ptypes)
	Name: methodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#methodType-java.lang.Class-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType genericMethodType(int objectArgCount,
	                                           boolean finalArray)
	Name: genericMethodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#genericMethodType-int-boolean-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::boolean
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public static MethodType genericMethodType(int objectArgCount)
	Name: genericMethodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#genericMethodType-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType changeParameterType(int num,
	                                      Class<?> nptype)
	Name: changeParameterType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#changeParameterType-int-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType insertParameterTypes(int num,
	                                       Class<?>... ptypesToInsert)
	Name: insertParameterTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#insertParameterTypes-int-java.lang.Class...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::... {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType appendParameterTypes(Class<?>... ptypesToInsert)
	Name: appendParameterTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#appendParameterTypes-java.lang.Class...-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::... {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType insertParameterTypes(int num,
	                                       List<Class<?>> ptypesToInsert)
	Name: insertParameterTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#insertParameterTypes-int-java.util.List-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		java.util::List {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType appendParameterTypes(List<Class<?>> ptypesToInsert)
	Name: appendParameterTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#appendParameterTypes-java.util.List-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.util::List {
			java.lang::Class {
				?
			}
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType dropParameterTypes(int start,
	                                     int end)
	Name: dropParameterTypes
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#dropParameterTypes-int-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
		other::int
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType changeReturnType(Class<?> nrtype)
	Name: changeReturnType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#changeReturnType-java.lang.Class-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public boolean hasPrimitives()
	Name: hasPrimitives
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#hasPrimitives--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public boolean hasWrappers()
	Name: hasWrappers
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#hasWrappers--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public MethodType erase()
	Name: erase
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#erase--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType generic()
	Name: generic
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#generic--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType wrap()
	Name: wrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#wrap--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public MethodType unwrap()
	Name: unwrap
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#unwrap--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public Class<?> parameterType(int num)
	Name: parameterType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#parameterType-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	public int parameterCount()
	Name: parameterCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#parameterCount--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Class<?> returnType()
	Name: returnType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#returnType--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	public List<Class<?>> parameterList()
	Name: parameterList
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#parameterList--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.util::List {
			java.lang::Class {
				?
			}
		}
	}

	[Function]
	public Class<?>[] parameterArray()
	Name: parameterArray
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#parameterArray--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::[] {
			java.lang::Class {
				?
			}
		}
	}

	[Function]
	public boolean equals(Object x)
	Name: equals
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#equals-java.lang.Object-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Object
	
		[result]
		other::boolean
	}

	[Function]
	public int hashCode()
	Name: hashCode
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#hashCode--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#toString--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public static MethodType fromMethodDescriptorString(String descriptor,
	                                                    ClassLoader loader)
	                                             throws IllegalArgumentException,
	                                                    TypeNotPresentException
	Name: fromMethodDescriptorString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#fromMethodDescriptorString-java.lang.String-java.lang.ClassLoader-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::ClassLoader
	
		[result]
		java.lang.invoke::MethodType
	}

	[Function]
	public String toMethodDescriptorString()
	Name: toMethodDescriptorString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MethodType.html#toMethodDescriptorString--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MethodType
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class MutableCallSite
extends CallSite
Name: MutableCallSite
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang.invoke::CallSite
}
members {

	[Function]
	public MutableCallSite(MethodType type)
	Name: MutableCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#MutableCallSite-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::MutableCallSite
	}

	[Function]
	public MutableCallSite(MethodHandle target)
	Name: MutableCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#MutableCallSite-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MutableCallSite
	}

	[Function]
	public final MethodHandle getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#getTarget--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public void setTarget(MethodHandle newTarget)
	Name: setTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#setTarget-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		other::void
	}

	[Function]
	public final MethodHandle dynamicInvoker()
	Name: dynamicInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#dynamicInvoker--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static void syncAll(MutableCallSite[] sites)
	Name: syncAll
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/MutableCallSite.html#syncAll-java.lang.invoke.MutableCallSite:A-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: MutableCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang.invoke::MutableCallSite
		}
	
		[result]
		other::void
	}
}

[Classifier]
public final class SerializedLambda
extends Object
implements Serializable
Name: SerializedLambda
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=true
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.io::Serializable
	java.lang::Object
}
members {

	[Function]
	public SerializedLambda(Class<?> capturingClass,
	                        String functionalInterfaceClass,
	                        String functionalInterfaceMethodName,
	                        String functionalInterfaceMethodSignature,
	                        int implMethodKind,
	                        String implClass,
	                        String implMethodName,
	                        String implMethodSignature,
	                        String instantiatedMethodType,
	                        Object[] capturedArgs)
	Name: SerializedLambda
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#SerializedLambda-java.lang.Class-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Class {
			?
		}
		java.lang::String
		java.lang::String
		java.lang::String
		other::int
		java.lang::String
		java.lang::String
		java.lang::String
		java.lang::String
		other::[] {
			java.lang::Object
		}
	
		[result]
		java.lang.invoke::SerializedLambda
	}

	[Function]
	public String getCapturingClass()
	Name: getCapturingClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getCapturingClass--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getFunctionalInterfaceClass()
	Name: getFunctionalInterfaceClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getFunctionalInterfaceClass--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getFunctionalInterfaceMethodName()
	Name: getFunctionalInterfaceMethodName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getFunctionalInterfaceMethodName--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getFunctionalInterfaceMethodSignature()
	Name: getFunctionalInterfaceMethodSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getFunctionalInterfaceMethodSignature--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getImplClass()
	Name: getImplClass
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getImplClass--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getImplMethodName()
	Name: getImplMethodName
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getImplMethodName--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public String getImplMethodSignature()
	Name: getImplMethodSignature
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getImplMethodSignature--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getImplMethodKind()
	Name: getImplMethodKind
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getImplMethodKind--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public final String getInstantiatedMethodType()
	Name: getInstantiatedMethodType
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getInstantiatedMethodType--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	public int getCapturedArgCount()
	Name: getCapturedArgCount
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getCapturedArgCount--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::int
	}

	[Function]
	public Object getCapturedArg(int i)
	Name: getCapturedArg
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#getCapturedArg-int-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::int
	
		[result]
		java.lang::Object
	}

	[Function]
	public String toString()
	Name: toString
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SerializedLambda.html#toString--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SerializedLambda
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}
}

[Classifier]
public class SwitchPoint
extends Object
Name: SwitchPoint
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SwitchPoint.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Object
}
members {

	[Function]
	public SwitchPoint()
	Name: SwitchPoint
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SwitchPoint.html#SwitchPoint--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: SwitchPoint
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::SwitchPoint
	}

	[Function]
	public boolean hasBeenInvalidated()
	Name: hasBeenInvalidated
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SwitchPoint.html#hasBeenInvalidated--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SwitchPoint
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		other::boolean
	}

	[Function]
	public MethodHandle guardWithTest(MethodHandle target,
	                                  MethodHandle fallback)
	Name: guardWithTest
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SwitchPoint.html#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: SwitchPoint
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public static void invalidateAll(SwitchPoint[] switchPoints)
	Name: invalidateAll
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/SwitchPoint.html#invalidateAll-java.lang.invoke.SwitchPoint:A-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=true
		memberType=method
		constructor=false
	}
	Containing type: SwitchPoint
	parameters {
	}
	Signature = <function> {
		[parameters]
		other::[] {
			java.lang.invoke::SwitchPoint
		}
	
		[result]
		other::void
	}
}

[Classifier]
public class VolatileCallSite
extends CallSite
Name: VolatileCallSite
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang.invoke::CallSite
}
members {

	[Function]
	public VolatileCallSite(MethodType type)
	Name: VolatileCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html#VolatileCallSite-java.lang.invoke.MethodType-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: VolatileCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodType
	
		[result]
		java.lang.invoke::VolatileCallSite
	}

	[Function]
	public VolatileCallSite(MethodHandle target)
	Name: VolatileCallSite
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html#VolatileCallSite-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: VolatileCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		java.lang.invoke::VolatileCallSite
	}

	[Function]
	public final MethodHandle getTarget()
	Name: getTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html#getTarget--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: VolatileCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}

	[Function]
	public void setTarget(MethodHandle newTarget)
	Name: setTarget
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html#setTarget-java.lang.invoke.MethodHandle-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: VolatileCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang.invoke::MethodHandle
	
		[result]
		other::void
	}

	[Function]
	public final MethodHandle dynamicInvoker()
	Name: dynamicInvoker
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/VolatileCallSite.html#dynamicInvoker--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=true
		scope=public
		default=false
		static=false
		memberType=method
		constructor=false
	}
	Containing type: VolatileCallSite
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::MethodHandle
	}
}

[Classifier]
public class LambdaConversionException
extends Exception
Name: LambdaConversionException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::Exception
}
members {

	[Function]
	public LambdaConversionException()
	Name: LambdaConversionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html#LambdaConversionException--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaConversionException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::LambdaConversionException
	}

	[Function]
	public LambdaConversionException(String message)
	Name: LambdaConversionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html#LambdaConversionException-java.lang.String-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaConversionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang.invoke::LambdaConversionException
	}

	[Function]
	public LambdaConversionException(String message,
	                                 Throwable cause)
	Name: LambdaConversionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html#LambdaConversionException-java.lang.String-java.lang.Throwable-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaConversionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
	
		[result]
		java.lang.invoke::LambdaConversionException
	}

	[Function]
	public LambdaConversionException(Throwable cause)
	Name: LambdaConversionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html#LambdaConversionException-java.lang.Throwable-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaConversionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::Throwable
	
		[result]
		java.lang.invoke::LambdaConversionException
	}

	[Function]
	public LambdaConversionException(String message,
	                                 Throwable cause,
	                                 boolean enableSuppression,
	                                 boolean writableStackTrace)
	Name: LambdaConversionException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/LambdaConversionException.html#LambdaConversionException-java.lang.String-java.lang.Throwable-boolean-boolean-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: LambdaConversionException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
		java.lang::Throwable
		other::boolean
		other::boolean
	
		[result]
		java.lang.invoke::LambdaConversionException
	}
}

[Classifier]
public class WrongMethodTypeException
extends RuntimeException
Name: WrongMethodTypeException
Language: JAVA
Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/WrongMethodTypeException.html
Containing package: java.lang.invoke
attributes {
	abstract=false
	final=false
	classifierType=class
	static=false
	scope=public
}
parameters {
}
derived {
}
supertypes {
	java.lang::RuntimeException
}
members {

	[Function]
	public WrongMethodTypeException()
	Name: WrongMethodTypeException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/WrongMethodTypeException.html#WrongMethodTypeException--
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: WrongMethodTypeException
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang.invoke::WrongMethodTypeException
	}

	[Function]
	public WrongMethodTypeException(String s)
	Name: WrongMethodTypeException
	Language: JAVA
	Doc: http://docs.oracle.com/javase/8/docs/api/java/lang/invoke/WrongMethodTypeException.html#WrongMethodTypeException-java.lang.String-
	Containing package: java.lang.invoke
	attributes {
		abstract=false
		final=false
		scope=public
		default=false
		static=false
		memberType=method
		constructor=true
	}
	Containing type: WrongMethodTypeException
	parameters {
	}
	Signature = <function> {
		[parameters]
		java.lang::String
	
		[result]
		java.lang.invoke::WrongMethodTypeException
	}
}