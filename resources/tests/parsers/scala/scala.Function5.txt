[Classifier]
trait Function5[-T1, -T2, -T3, -T4, -T5, +R] extends AnyRef
Name: Function5
Language: SCALA
Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5
Containing package: scala
attributes {
	abstract=false
	final=false
	classifierType=trait
	implicit=false
	sealed=false
}
parameters {
	T1
	T2
	T3
	T4
	T5
	R
}
derived {
}
supertypes {
	scala::AnyRef
}
members {

	[Function]
	abstract def apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5): R
	Name: apply
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@apply(v1:T1,v2:T2,v3:T3,v4:T4,v5:T5):R
	Containing package: scala
	attributes {
		abstract=true
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		null::T1
		null::T2
		null::T3
		null::T4
		null::T5
	
		[result]
		null::R
	}

	[Function]
	final def !=(arg0: Any): Boolean
	Name: !=
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@!=(x$1:Any):Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	final def ##(): Int
	Name: ##
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@##():Int
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Int
	}

	[Function]
	def +(other: String): String
	Name: +
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@+(other:String):String
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::String
	
		[result]
		scala::String
	}

	[Function]
	def ->[B](y: B): ((T1, T2, T3, T4, T5) ⇒ R, B)
	Name: ->
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@->[B](y:B):(A,B)
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
		B
	}
	Signature = <function> {
		[parameters]
		null::B
	
		[result]
		scala::Tuple2 {
			<function> {
				[parameters]
				null::T1
				null::T2
				null::T3
				null::T4
				null::T5
			
				[result]
				null::R
			}
			null::B
		}
	}

	[Function]
	final def ==(arg0: Any): Boolean
	Name: ==
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@==(x$1:Any):Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	final def asInstanceOf[T0]: T0
	Name: asInstanceOf
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@asInstanceOf[T0]:T0
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::T0
	}

	[Function]
	def clone(): AnyRef
	Name: clone
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@clone():Object
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::AnyRef
	}

	[Function]
	def curried: (T1) ⇒ (T2) ⇒ (T3) ⇒ (T4) ⇒ (T5) ⇒ R
	Name: curried
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@curried:T1=>(T2=>(T3=>(T4=>(T5=>R))))
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		<function> {
			[parameters]
			null::T1
		
			[result]
			<function> {
				[parameters]
				null::T2
			
				[result]
				<function> {
					[parameters]
					null::T3
				
					[result]
					<function> {
						[parameters]
						null::T4
					
						[result]
						<function> {
							[parameters]
							null::T5
						
							[result]
							null::R
						}
					}
				}
			}
		}
	}

	[Function]
	def ensuring(cond: ((T1, T2, T3, T4, T5) ⇒ R) ⇒ Boolean, msg: ⇒ Any): (T1, T2, T3, T4, T5) ⇒ R
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@ensuring(cond:A=>Boolean,msg:=>Any):A
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
			<function> {
				[parameters]
				null::T1
				null::T2
				null::T3
				null::T4
				null::T5
			
				[result]
				null::R
			}
		
			[result]
			scala::Boolean
		}
		<function> {
			[parameters]
		
			[result]
			scala::Any
		}
	
		[result]
		<function> {
			[parameters]
			null::T1
			null::T2
			null::T3
			null::T4
			null::T5
		
			[result]
			null::R
		}
	}

	[Function]
	def ensuring(cond: ((T1, T2, T3, T4, T5) ⇒ R) ⇒ Boolean): (T1, T2, T3, T4, T5) ⇒ R
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@ensuring(cond:A=>Boolean):A
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
			<function> {
				[parameters]
				null::T1
				null::T2
				null::T3
				null::T4
				null::T5
			
				[result]
				null::R
			}
		
			[result]
			scala::Boolean
		}
	
		[result]
		<function> {
			[parameters]
			null::T1
			null::T2
			null::T3
			null::T4
			null::T5
		
			[result]
			null::R
		}
	}

	[Function]
	def ensuring(cond: Boolean, msg: ⇒ Any): (T1, T2, T3, T4, T5) ⇒ R
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@ensuring(cond:Boolean,msg:=>Any):A
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Boolean
		<function> {
			[parameters]
		
			[result]
			scala::Any
		}
	
		[result]
		<function> {
			[parameters]
			null::T1
			null::T2
			null::T3
			null::T4
			null::T5
		
			[result]
			null::R
		}
	}

	[Function]
	def ensuring(cond: Boolean): (T1, T2, T3, T4, T5) ⇒ R
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@ensuring(cond:Boolean):A
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Boolean
	
		[result]
		<function> {
			[parameters]
			null::T1
			null::T2
			null::T3
			null::T4
			null::T5
		
			[result]
			null::R
		}
	}

	[Function]
	final def eq(arg0: AnyRef): Boolean
	Name: eq
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@eq(x$1:AnyRef):Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::AnyRef
	
		[result]
		scala::Boolean
	}

	[Function]
	def equals(arg0: Any): Boolean
	Name: equals
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@equals(x$1:Any):Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	def finalize(): Unit
	Name: finalize
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@finalize():Unit
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	def formatted(fmtstr: String): String
	Name: formatted
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@formatted(fmtstr:String):String
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::String
	
		[result]
		scala::String
	}

	[Function]
	final def getClass(): Class[_]
	Name: getClass
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@getClass():Class[_]
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	def hashCode(): Int
	Name: hashCode
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@hashCode():Int
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Int
	}

	[Function]
	final def isInstanceOf[T0]: Boolean
	Name: isInstanceOf
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@isInstanceOf[T0]:Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Boolean
	}

	[Function]
	final def ne(arg0: AnyRef): Boolean
	Name: ne
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@ne(x$1:AnyRef):Boolean
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::AnyRef
	
		[result]
		scala::Boolean
	}

	[Function]
	final def notify(): Unit
	Name: notify
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@notify():Unit
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def notifyAll(): Unit
	Name: notifyAll
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@notifyAll():Unit
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def synchronized[T0](arg0: ⇒ T0): T0
	Name: synchronized
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@synchronized[T0](x$1:=>T0):T0
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
		
			[result]
			null::T0
		}
	
		[result]
		null::T0
	}

	[Function]
	def toString(): String
	Name: toString
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@toString():String
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	def tupled: ((T1, T2, T3, T4, T5)) ⇒ R
	Name: tupled
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@tupled:((T1,T2,T3,T4,T5))=>R
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		<function> {
			[parameters]
			scala::Tuple5 {
				null::T1
				null::T2
				null::T3
				null::T4
				null::T5
			}
		
			[result]
			null::R
		}
	}

	[Function]
	final def wait(): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@wait():Unit
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def wait(arg0: Long, arg1: Int): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@wait(x$1:Long,x$2:Int):Unit
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Long
		scala::Int
	
		[result]
		scala::Unit
	}

	[Function]
	final def wait(arg0: Long): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@wait(x$1:Long):Unit
	Containing package: scala
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Long
	
		[result]
		scala::Unit
	}

	[Function]
	def →[B](y: B): ((T1, T2, T3, T4, T5) ⇒ R, B)
	Name: →
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.Function5@→[B](y:B):(A,B)
	Containing package: scala
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: Function5
	parameters {
		B
	}
	Signature = <function> {
		[parameters]
		null::B
	
		[result]
		scala::Tuple2 {
			<function> {
				[parameters]
				null::T1
				null::T2
				null::T3
				null::T4
				null::T5
			
				[result]
				null::R
			}
			null::B
		}
	}
}