[Function]
def unapply[T, Coll <: SeqLike[T, Coll]](t: Coll with SeqLike[T, Coll]): Option[(T, Coll)]
Name: unapply
Language: SCALA
Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.$plus$colon$@unapply[T,Coll<:scala.collection.SeqLike[T,Coll]](t:Collwithscala.collection.SeqLike[T,Coll]):Option[(T,Coll)]
Containing package: scala.collection
attributes {
	abstract=false
	final=false
	implicit=false
	memberType=function
	lazy=false
}
Containing type: +:
parameters {
	T: (Coll <: SeqLike[T, Coll]; Coll, T; scala.collection::SeqLike)
	Coll: (Coll <: SeqLike[T, Coll]; Coll, T; scala.collection::SeqLike)
}
Signature = <function> {
	[parameters]
	null::Coll

	[result]
	scala::Option {
		scala::Tuple2 {
			null::T
			null::Coll
		}
	}
}