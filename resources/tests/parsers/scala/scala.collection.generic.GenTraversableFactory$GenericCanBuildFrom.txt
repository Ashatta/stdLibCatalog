[Classifier]
class GenericCanBuildFrom[A] extends CanBuildFrom[CC[_], A, CC[A]]
Name: GenericCanBuildFrom
Language: SCALA
Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom
Containing package: scala.collection.generic
attributes {
	abstract=false
	final=false
	classifierType=class
	implicit=false
	sealed=false
}
parameters {
	A
}
derived {
	scala.collection.immutable::StreamCanBuildFrom
	scala.collection.generic::GenericCanCombineFrom
}
supertypes {
	scala.collection.generic::CanBuildFrom {
		null::CC {
			?
		}
		null::A
		null::CC {
			null::A
		}
	}
}
members {

	[Function]
	final def !=(arg0: Any): Boolean
	Name: !=
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@!=(x$1:Any):Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	final def ##(): Int
	Name: ##
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@##():Int
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Int
	}

	[Function]
	def +(other: String): String
	Name: +
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@+(other:String):String
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::String
	
		[result]
		scala::String
	}

	[Function]
	def ->[B](y: B): (GenericCanBuildFrom[A], B)
	Name: ->
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@->[B](y:B):(A,B)
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
		B
	}
	Signature = <function> {
		[parameters]
		null::B
	
		[result]
		scala::Tuple2 {
			scala.collection.generic::GenericCanBuildFrom {
				null::A
			}
			null::B
		}
	}

	[Function]
	final def ==(arg0: Any): Boolean
	Name: ==
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@==(x$1:Any):Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	def apply(): Builder[A, CC[A]]
	Name: apply
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@apply():scala.collection.mutable.Builder[A,CC[A]]
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala.collection.mutable::Builder {
			null::A
			null::CC {
				null::A
			}
		}
	}

	[Function]
	def apply(from: GenTraversableFactory.Coll): Builder[A, CC[A]]
	Name: apply
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@apply(from:GenTraversableFactory.this.Coll):scala.collection.mutable.Builder[A,CC[A]]
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala.collection.generic::Coll
	
		[result]
		scala.collection.mutable::Builder {
			null::A
			null::CC {
				null::A
			}
		}
	}

	[Function]
	final def asInstanceOf[T0]: T0
	Name: asInstanceOf
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@asInstanceOf[T0]:T0
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
	
		[result]
		null::T0
	}

	[Function]
	def clone(): AnyRef
	Name: clone
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@clone():Object
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::AnyRef
	}

	[Function]
	def ensuring(cond: (GenericCanBuildFrom[A]) ⇒ Boolean, msg: ⇒ Any): GenericCanBuildFrom[A]
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@ensuring(cond:A=>Boolean,msg:=>Any):A
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
			scala.collection.generic::GenericCanBuildFrom {
				null::A
			}
		
			[result]
			scala::Boolean
		}
		<function> {
			[parameters]
		
			[result]
			scala::Any
		}
	
		[result]
		scala.collection.generic::GenericCanBuildFrom {
			null::A
		}
	}

	[Function]
	def ensuring(cond: (GenericCanBuildFrom[A]) ⇒ Boolean): GenericCanBuildFrom[A]
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@ensuring(cond:A=>Boolean):A
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
			scala.collection.generic::GenericCanBuildFrom {
				null::A
			}
		
			[result]
			scala::Boolean
		}
	
		[result]
		scala.collection.generic::GenericCanBuildFrom {
			null::A
		}
	}

	[Function]
	def ensuring(cond: Boolean, msg: ⇒ Any): GenericCanBuildFrom[A]
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@ensuring(cond:Boolean,msg:=>Any):A
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Boolean
		<function> {
			[parameters]
		
			[result]
			scala::Any
		}
	
		[result]
		scala.collection.generic::GenericCanBuildFrom {
			null::A
		}
	}

	[Function]
	def ensuring(cond: Boolean): GenericCanBuildFrom[A]
	Name: ensuring
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@ensuring(cond:Boolean):A
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Boolean
	
		[result]
		scala.collection.generic::GenericCanBuildFrom {
			null::A
		}
	}

	[Function]
	final def eq(arg0: AnyRef): Boolean
	Name: eq
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@eq(x$1:AnyRef):Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::AnyRef
	
		[result]
		scala::Boolean
	}

	[Function]
	def equals(arg0: Any): Boolean
	Name: equals
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@equals(x$1:Any):Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Any
	
		[result]
		scala::Boolean
	}

	[Function]
	def finalize(): Unit
	Name: finalize
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@finalize():Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	def formatted(fmtstr: String): String
	Name: formatted
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@formatted(fmtstr:String):String
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::String
	
		[result]
		scala::String
	}

	[Function]
	final def getClass(): Class[_]
	Name: getClass
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@getClass():Class[_]
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::Class {
			?
		}
	}

	[Function]
	def hashCode(): Int
	Name: hashCode
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@hashCode():Int
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Int
	}

	[Function]
	final def isInstanceOf[T0]: Boolean
	Name: isInstanceOf
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@isInstanceOf[T0]:Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Boolean
	}

	[Function]
	final def ne(arg0: AnyRef): Boolean
	Name: ne
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@ne(x$1:AnyRef):Boolean
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::AnyRef
	
		[result]
		scala::Boolean
	}

	[Function]
	final def notify(): Unit
	Name: notify
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@notify():Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def notifyAll(): Unit
	Name: notifyAll
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@notifyAll():Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def synchronized[T0](arg0: ⇒ T0): T0
	Name: synchronized
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@synchronized[T0](x$1:=>T0):T0
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
		T0
	}
	Signature = <function> {
		[parameters]
		<function> {
			[parameters]
		
			[result]
			null::T0
		}
	
		[result]
		null::T0
	}

	[Function]
	def toParArray: ParArray[T]
	Name: toParArray
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@toParArray:scala.collection.parallel.mutable.ParArray[T]
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala.collection.parallel.mutable::ParArray {
			scala.collection.parallel::T
		}
	}

	[Function]
	def toString(): String
	Name: toString
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@toString():String
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		java.lang::String
	}

	[Function]
	final def wait(): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@wait():Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala::Unit
	}

	[Function]
	final def wait(arg0: Long, arg1: Int): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@wait(x$1:Long,x$2:Int):Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Long
		scala::Int
	
		[result]
		scala::Unit
	}

	[Function]
	final def wait(arg0: Long): Unit
	Name: wait
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@wait(x$1:Long):Unit
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=true
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
		scala::Long
	
		[result]
		scala::Unit
	}

	[Function]
	def →[B](y: B): (GenericCanBuildFrom[A], B)
	Name: →
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@→[B](y:B):(A,B)
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=function
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
		B
	}
	Signature = <function> {
		[parameters]
		null::B
	
		[result]
		scala::Tuple2 {
			scala.collection.generic::GenericCanBuildFrom {
				null::A
			}
			null::B
		}
	}

	[Function]
	new GenericCanBuildFrom()
	Name: GenericCanBuildFrom
	Language: SCALA
	Doc: http://www.scala-lang.org/api/current/index.html#scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom@<init>():GenTraversableFactory.this.GenericCanBuildFrom[A]
	Containing package: scala.collection.generic
	attributes {
		abstract=false
		final=false
		implicit=false
		memberType=constructor
		lazy=false
	}
	Containing type: GenericCanBuildFrom
	parameters {
	}
	Signature = <function> {
		[parameters]
	
		[result]
		scala.collection.generic::GenericCanBuildFrom
	}
}