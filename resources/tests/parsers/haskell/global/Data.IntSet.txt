[Package]
Name: Data.IntSet
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html
Containing package: Data
attributes {
}

Subpackages {
}

[Classifier]
data IntSet
Name: IntSet
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#t:IntSet
Containing package: Data.IntSet
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Alias]
type Key = Int
Name: Key
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#t:Key
Containing package: Data.IntSet
attributes {
}
parameters {
}
Aliased type = Data.Int::Int

[Function]
lookupLT :: Key -> IntSet -> Maybe Key
Name: lookupLT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:lookupLT
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		Data.IntSet::Key
	}
}

[Function]
lookupLE :: Key -> IntSet -> Maybe Key
Name: lookupLE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:lookupLE
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		Data.IntSet::Key
	}
}

[Function]
showTree :: IntSet -> String
Name: showTree
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:showTree
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.String::String
}

[Function]
lookupGT :: Key -> IntSet -> Maybe Key
Name: lookupGT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:lookupGT
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		Data.IntSet::Key
	}
}

[Function]
lookupGE :: Key -> IntSet -> Maybe Key
Name: lookupGE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:lookupGE
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		Data.IntSet::Key
	}
}

[Function]
splitRoot :: IntSet -> [IntSet]
Name: splitRoot
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:splitRoot
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	other::List {
		Data.IntSet::IntSet
	}
}

[Function]
size :: IntSet -> Int
Name: size
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:size
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.Int::Int
}

[Function]
isProperSubsetOf :: IntSet -> IntSet -> Bool
Name: isProperSubsetOf
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:isProperSubsetOf
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.Bool::Bool
}

[Function]
fromList :: [Key] -> IntSet
Name: fromList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:fromList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.IntSet::Key
	}

	[result]
	Data.IntSet::IntSet
}

[Function]
null :: IntSet -> Bool
Name: null
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:null
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.Bool::Bool
}

[Function]
minView :: IntSet -> Maybe (Key, IntSet)
Name: minView
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:minView
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Data.IntSet::Key
			Data.IntSet::IntSet
		}
	}
}

[Function]
filter :: (Key -> Bool) -> IntSet -> IntSet
Name: filter
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:filter
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
	
		[result]
		Data.Bool::Bool
	}
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
unions :: [IntSet] -> IntSet
Name: unions
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:unions
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.IntSet::IntSet
	}

	[result]
	Data.IntSet::IntSet
}

[Function]
notMember :: Key -> IntSet -> Bool
Name: notMember
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:notMember
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Bool::Bool
}

[Function]
(\\) :: IntSet -> IntSet -> IntSet
Name: (\\)
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:(\\)
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
member :: Key -> IntSet -> Bool
Name: member
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:member
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.Bool::Bool
}

[Function]
map :: (Key -> Key) -> IntSet -> IntSet
Name: map
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:map
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
	
		[result]
		Data.IntSet::Key
	}
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
insert :: Key -> IntSet -> IntSet
Name: insert
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:insert
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
foldr :: (Key -> b -> b) -> b -> IntSet -> b
Name: foldr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:foldr
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
	b
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
		null::b
	
		[result]
		null::b
	}
	null::b
	Data.IntSet::IntSet

	[result]
	null::b
}

[Function]
foldl :: (a -> Key -> a) -> a -> IntSet -> a
Name: foldl
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:foldl
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
		Data.IntSet::Key
	
		[result]
		null::a
	}
	null::a
	Data.IntSet::IntSet

	[result]
	null::a
}

[Function]
partition :: (Key -> Bool) -> IntSet -> (IntSet, IntSet)
Name: partition
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:partition
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
	
		[result]
		Data.Bool::Bool
	}
	Data.IntSet::IntSet

	[result]
	GHC.Tuple::(,) {
		Data.IntSet::IntSet
		Data.IntSet::IntSet
	}
}

[Function]
showTreeWith :: Bool -> Bool -> IntSet -> String
Name: showTreeWith
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:showTreeWith
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Bool::Bool
	Data.Bool::Bool
	Data.IntSet::IntSet

	[result]
	Data.String::String
}

[Function]
fromDistinctAscList :: [Key] -> IntSet
Name: fromDistinctAscList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:fromDistinctAscList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.IntSet::Key
	}

	[result]
	Data.IntSet::IntSet
}

[Function]
isSubsetOf :: IntSet -> IntSet -> Bool
Name: isSubsetOf
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:isSubsetOf
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.Bool::Bool
}

[Function]
fold :: (Key -> b -> b) -> b -> IntSet -> b
Name: fold
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:fold
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
	b
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
		null::b
	
		[result]
		null::b
	}
	null::b
	Data.IntSet::IntSet

	[result]
	null::b
}

[Function]
split :: Key -> IntSet -> (IntSet, IntSet)
Name: split
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:split
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	GHC.Tuple::(,) {
		Data.IntSet::IntSet
		Data.IntSet::IntSet
	}
}

[Function]
fromAscList :: [Key] -> IntSet
Name: fromAscList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:fromAscList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.IntSet::Key
	}

	[result]
	Data.IntSet::IntSet
}

[Function]
singleton :: Key -> IntSet
Name: singleton
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:singleton
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key

	[result]
	Data.IntSet::IntSet
}

[Function]
findMax :: IntSet -> Key
Name: findMax
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:findMax
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.IntSet::Key
}

[Function]
deleteFindMax :: IntSet -> (Key, IntSet)
Name: deleteFindMax
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:deleteFindMax
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	GHC.Tuple::(,) {
		Data.IntSet::Key
		Data.IntSet::IntSet
	}
}

[Function]
empty :: IntSet
Name: empty
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:empty
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Data.IntSet::IntSet
}

[Function]
deleteFindMin :: IntSet -> (Key, IntSet)
Name: deleteFindMin
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:deleteFindMin
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	GHC.Tuple::(,) {
		Data.IntSet::Key
		Data.IntSet::IntSet
	}
}

[Function]
difference :: IntSet -> IntSet -> IntSet
Name: difference
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:difference
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
intersection :: IntSet -> IntSet -> IntSet
Name: intersection
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:intersection
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
toAscList :: IntSet -> [Key]
Name: toAscList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:toAscList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	other::List {
		Data.IntSet::Key
	}
}

[Function]
findMin :: IntSet -> Key
Name: findMin
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:findMin
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.IntSet::Key
}

[Function]
union :: IntSet -> IntSet -> IntSet
Name: union
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:union
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
maxView :: IntSet -> Maybe (Key, IntSet)
Name: maxView
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:maxView
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Data.IntSet::Key
			Data.IntSet::IntSet
		}
	}
}

[Function]
toList :: IntSet -> [Key]
Name: toList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:toList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	other::List {
		Data.IntSet::Key
	}
}

[Function]
toDescList :: IntSet -> [Key]
Name: toDescList
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:toDescList
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	other::List {
		Data.IntSet::Key
	}
}

[Function]
splitMember :: Key -> IntSet -> (IntSet, Bool, IntSet)
Name: splitMember
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:splitMember
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	GHC.Tuple::(,,) {
		Data.IntSet::IntSet
		Data.Bool::Bool
		Data.IntSet::IntSet
	}
}

[Function]
elems :: IntSet -> [Key]
Name: elems
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:elems
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	other::List {
		Data.IntSet::Key
	}
}

[Function]
delete :: Key -> IntSet -> IntSet
Name: delete
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:delete
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::Key
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
foldl' :: (a -> Key -> a) -> a -> IntSet -> a
Name: foldl'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:foldl'
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
		Data.IntSet::Key
	
		[result]
		null::a
	}
	null::a
	Data.IntSet::IntSet

	[result]
	null::a
}

[Function]
deleteMax :: IntSet -> IntSet
Name: deleteMax
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:deleteMax
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}

[Function]
foldr' :: (Key -> b -> b) -> b -> IntSet -> b
Name: foldr'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:foldr'
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
	b
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.IntSet::Key
		null::b
	
		[result]
		null::b
	}
	null::b
	Data.IntSet::IntSet

	[result]
	null::b
}

[Function]
deleteMin :: IntSet -> IntSet
Name: deleteMin
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/containers-0.5.5.1/Data-IntSet.html#v:deleteMin
Containing package: Data.IntSet
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.IntSet::IntSet

	[result]
	Data.IntSet::IntSet
}