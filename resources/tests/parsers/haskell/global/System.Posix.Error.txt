[Package]
Name: System.Posix.Error
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html
Containing package: System.Posix
attributes {
}

Subpackages {
}

[Function]
throwErrnoPathIfNullRetry :: String -> FilePath -> IO (Ptr a) -> IO (Ptr a)
Name: throwErrnoPathIfNullRetry
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfNullRetry
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}

	[result]
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}
}

[Function]
throwErrnoPathIf_ :: (a -> Bool) -> String -> FilePath -> IO a -> IO ()
Name: throwErrnoPathIf_
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIf_
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Bool::Bool
	}
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
throwErrnoPathIfMinus1Retry :: (Eq a, Num a) => String -> FilePath -> IO a -> IO a
Name: throwErrnoPathIfMinus1Retry
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfMinus1Retry
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
throwErrnoPathIfNull :: String -> FilePath -> IO (Ptr a) -> IO (Ptr a)
Name: throwErrnoPathIfNull
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfNull
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}

	[result]
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}
}

[Function]
throwErrnoPathIfMinus1_ :: (Eq a, Num a) => String -> FilePath -> IO a -> IO ()
Name: throwErrnoPathIfMinus1_
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfMinus1_
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
throwErrnoPath :: String -> FilePath -> IO a
Name: throwErrnoPath
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPath
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
throwErrnoPathIfMinus1 :: (Eq a, Num a) => String -> FilePath -> IO a -> IO a
Name: throwErrnoPathIfMinus1
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfMinus1
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
throwErrnoPathIf :: (a -> Bool) -> String -> FilePath -> IO a -> IO a
Name: throwErrnoPathIf
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIf
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Bool::Bool
	}
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
throwErrnoPathIfMinus1Retry_ :: (Eq a, Num a) => String -> FilePath -> IO a -> IO ()
Name: throwErrnoPathIfMinus1Retry_
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfMinus1Retry_
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
throwErrnoPathIfRetry :: (a -> Bool) -> String -> FilePath -> IO a -> IO a
Name: throwErrnoPathIfRetry
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Error.html#v:throwErrnoPathIfRetry
Containing package: System.Posix.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Bool::Bool
	}
	Data.String::String
	System.IO::FilePath
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}