[Package]
Name: Numeric
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html
Containing package: null
attributes {
}

Subpackages {
}

[Function]
readInt :: Num a => a -> (Char -> Bool) -> (Char -> Int) -> ReadS a
Name: readInt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readInt
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	null::a
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Int::Int
	}

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
showGFloatAlt :: RealFloat a => Maybe Int -> a -> ShowS
Name: showGFloatAlt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showGFloatAlt
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
showIntAtBase :: (Integral a, Show a) => a -> (Int -> Char) -> a -> ShowS
Name: showIntAtBase
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showIntAtBase
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral), (Show a; a; Text.Show::Show)
}
Signature = <function> {
	[parameters]
	null::a
	<function> {
		[parameters]
		Data.Int::Int
	
		[result]
		Data.Char::Char
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
readFloat :: RealFrac a => ReadS a
Name: readFloat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readFloat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFrac a; a; Prelude::RealFrac)
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
showSigned :: Real a => (a -> ShowS) -> Int -> a -> ShowS
Name: showSigned
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showSigned
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Real a; a; Prelude::Real)
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Text.Show::ShowS
	}
	Data.Int::Int
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
showGFloat :: RealFloat a => Maybe Int -> a -> ShowS
Name: showGFloat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showGFloat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
showFloat :: RealFloat a => a -> ShowS
Name: showFloat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showFloat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
readHex :: (Eq a, Num a) => ReadS a
Name: readHex
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readHex
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
floatToDigits :: RealFloat a => Integer -> a -> ([Int], Int)
Name: floatToDigits
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:floatToDigits
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	null::a

	[result]
	GHC.Tuple::(,) {
		other::List {
			Data.Int::Int
		}
		Data.Int::Int
	}
}

[Function]
showFFloatAlt :: RealFloat a => Maybe Int -> a -> ShowS
Name: showFFloatAlt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showFFloatAlt
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
lexDigits :: ReadS String
Name: lexDigits
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:lexDigits
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		Data.String::String
	}
}

[Function]
showEFloat :: RealFloat a => Maybe Int -> a -> ShowS
Name: showEFloat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showEFloat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
showInt :: Integral a => a -> ShowS
Name: showInt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showInt
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral)
}
Signature = <function> {
	[parameters]
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
readSigned :: Real a => ReadS a -> ReadS a
Name: readSigned
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readSigned
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Real a; a; Prelude::Real)
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
showHex :: (Integral a, Show a) => a -> ShowS
Name: showHex
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showHex
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral), (Show a; a; Text.Show::Show)
}
Signature = <function> {
	[parameters]
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
readOct :: (Eq a, Num a) => ReadS a
Name: readOct
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readOct
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
readDec :: (Eq a, Num a) => ReadS a
Name: readDec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:readDec
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Eq a; a; Data.Eq::Eq), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
showFFloat :: RealFloat a => Maybe Int -> a -> ShowS
Name: showFFloat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showFFloat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
showOct :: (Integral a, Show a) => a -> ShowS
Name: showOct
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:showOct
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral), (Show a; a; Text.Show::Show)
}
Signature = <function> {
	[parameters]
	null::a

	[result]
	Text.Show::ShowS
}

[Function]
fromRat :: RealFloat a => Rational -> a
Name: fromRat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Numeric.html#v:fromRat
Containing package: Numeric
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFloat a; a; Prelude::RealFloat)
}
Signature = <function> {
	[parameters]
	Prelude::Rational

	[result]
	null::a
}