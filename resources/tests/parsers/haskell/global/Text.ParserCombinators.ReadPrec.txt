[Package]
Name: Text.ParserCombinators.ReadPrec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html
Containing package: ParserCombinators
attributes {
}

Subpackages {
}

[Classifier]
data ReadPrec a
Name: ReadPrec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#t:ReadPrec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
	a
}
derived {
}
supertypes {
}
members {
}

[Alias]
type Prec = Int
Name: Prec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#t:Prec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
}
parameters {
}
Aliased type = Data.Int::Int

[Function]
readPrec_to_S :: ReadPrec a -> Int -> ReadS a
Name: readPrec_to_S
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:readPrec_to_S
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
	Data.Int::Int

	[result]
	Text.ParserCombinators.ReadP::ReadS {
		null::a
	}
}

[Function]
readPrec_to_P :: ReadPrec a -> Int -> ReadP a
Name: readPrec_to_P
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:readPrec_to_P
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
	Data.Int::Int

	[result]
	Text.ParserCombinators.ReadP::ReadP {
		null::a
	}
}

[Function]
(<++) :: ReadPrec a -> ReadPrec a -> ReadPrec a
Name: (<++)
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:(<++)
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
step :: ReadPrec a -> ReadPrec a
Name: step
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:step
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
lift :: ReadP a -> ReadPrec a
Name: lift
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:lift
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadP::ReadP {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
pfail :: ReadPrec a
Name: pfail
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:pfail
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
minPrec :: Prec
Name: minPrec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:minPrec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadPrec::Prec
}

[Function]
(+++) :: ReadPrec a -> ReadPrec a -> ReadPrec a
Name: (+++)
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:(+++)
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
readS_to_Prec :: (Int -> ReadS a) -> ReadPrec a
Name: readS_to_Prec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:readS_to_Prec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Int::Int
	
		[result]
		Text.ParserCombinators.ReadP::ReadS {
			null::a
		}
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
readP_to_Prec :: (Int -> ReadP a) -> ReadPrec a
Name: readP_to_Prec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:readP_to_Prec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Int::Int
	
		[result]
		Text.ParserCombinators.ReadP::ReadP {
			null::a
		}
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
get :: ReadPrec Char
Name: get
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:get
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		Data.Char::Char
	}
}

[Function]
reset :: ReadPrec a -> ReadPrec a
Name: reset
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:reset
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
choice :: [ReadPrec a] -> ReadPrec a
Name: choice
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:choice
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	other::List {
		Text.ParserCombinators.ReadPrec::ReadPrec {
			null::a
		}
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
prec :: Prec -> ReadPrec a -> ReadPrec a
Name: prec
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:prec
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Text.ParserCombinators.ReadPrec::Prec
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		null::a
	}
}

[Function]
look :: ReadPrec String
Name: look
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Text-ParserCombinators-ReadPrec.html#v:look
Containing package: Text.ParserCombinators.ReadPrec
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Text.ParserCombinators.ReadPrec::ReadPrec {
		Data.String::String
	}
}