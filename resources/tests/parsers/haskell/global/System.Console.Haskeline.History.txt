[Package]
Name: System.Console.Haskeline.History
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html
Containing package: System.Console.Haskeline
attributes {
}

Subpackages {
}

[Classifier]
data History
Name: History
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#t:History
Containing package: System.Console.Haskeline.History
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Function]
stifleHistory :: Maybe Int -> History -> History
Name: stifleHistory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:stifleHistory
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
	System.Console.Haskeline.History::History

	[result]
	System.Console.Haskeline.History::History
}

[Function]
addHistory :: String -> History -> History
Name: addHistory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:addHistory
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.Console.Haskeline.History::History

	[result]
	System.Console.Haskeline.History::History
}

[Function]
addHistoryUnlessConsecutiveDupe :: String -> History -> History
Name: addHistoryUnlessConsecutiveDupe
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:addHistoryUnlessConsecutiveDupe
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.Console.Haskeline.History::History

	[result]
	System.Console.Haskeline.History::History
}

[Function]
stifleAmount :: History -> Maybe Int
Name: stifleAmount
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:stifleAmount
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.Console.Haskeline.History::History

	[result]
	Data.Maybe::Maybe {
		Data.Int::Int
	}
}

[Function]
writeHistory :: FilePath -> History -> IO ()
Name: writeHistory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:writeHistory
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	System.Console.Haskeline.History::History

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
historyLines :: History -> [String]
Name: historyLines
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:historyLines
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.Console.Haskeline.History::History

	[result]
	other::List {
		Data.String::String
	}
}

[Function]
addHistoryRemovingAllDupes :: String -> History -> History
Name: addHistoryRemovingAllDupes
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:addHistoryRemovingAllDupes
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.Console.Haskeline.History::History

	[result]
	System.Console.Haskeline.History::History
}

[Function]
readHistory :: FilePath -> IO History
Name: readHistory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:readHistory
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath

	[result]
	System.IO::IO {
		System.Console.Haskeline.History::History
	}
}

[Function]
emptyHistory :: History
Name: emptyHistory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskeline-0.7.1.2/System-Console-Haskeline-History.html#v:emptyHistory
Containing package: System.Console.Haskeline.History
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.Console.Haskeline.History::History
}