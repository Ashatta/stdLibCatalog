[Package]
Name: Data.ByteString.Lazy.Char8
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html
Containing package: Data.ByteString.Lazy
attributes {
}

Subpackages {
}

[Classifier]
data ByteString
Name: ByteString
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#t:ByteString
Containing package: Data.ByteString.Lazy.Char8
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Function]
last :: ByteString -> Char
Name: last
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:last
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
copy :: ByteString -> ByteString
Name: copy
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:copy
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
repeat :: Char -> ByteString
Name: repeat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:repeat
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
find :: (Char -> Bool) -> ByteString -> Maybe Char
Name: find
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:find
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		Data.Char::Char
	}
}

[Function]
snoc :: ByteString -> Char -> ByteString
Name: snoc
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:snoc
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	Data.Char::Char

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
cons :: Char -> ByteString -> ByteString
Name: cons
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:cons
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
dropWhile :: (Char -> Bool) -> ByteString -> ByteString
Name: dropWhile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:dropWhile
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
foldl1' :: (Char -> Char -> Char) -> ByteString -> Char
Name: foldl1'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldl1'
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
splitAt :: Int64 -> ByteString -> (ByteString, ByteString)
Name: splitAt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:splitAt
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int64
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	GHC.Tuple::(,) {
		Data.ByteString.Lazy.Char8::ByteString
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
hGet :: Handle -> Int -> IO ByteString
Name: hGet
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hGet
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.Int::Int

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
concatMap :: (Char -> ByteString) -> ByteString -> ByteString
Name: concatMap
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:concatMap
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.ByteString.Lazy.Char8::ByteString
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
readFile :: FilePath -> IO ByteString
Name: readFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:readFile
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
cycle :: ByteString -> ByteString
Name: cycle
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:cycle
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
splitWith :: (Char -> Bool) -> ByteString -> [ByteString]
Name: splitWith
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:splitWith
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
drop :: Int64 -> ByteString -> ByteString
Name: drop
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:drop
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int64
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
take :: Int64 -> ByteString -> ByteString
Name: take
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:take
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int64
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
hPutStrLn :: Handle -> ByteString -> IO ()
Name: hPutStrLn
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hPutStrLn
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
index :: ByteString -> Int64 -> Char
Name: index
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:index
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	Data.Int::Int64

	[result]
	Data.Char::Char
}

[Function]
tail :: ByteString -> ByteString
Name: tail
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:tail
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
groupBy :: (Char -> Char -> Bool) -> ByteString -> [ByteString]
Name: groupBy
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:groupBy
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
toStrict :: ByteString -> ByteString
Name: toStrict
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:toStrict
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
cons' :: Char -> ByteString -> ByteString
Name: cons'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:cons'
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
hGetNonBlocking :: Handle -> Int -> IO ByteString
Name: hGetNonBlocking
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hGetNonBlocking
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.Int::Int

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
replicate :: Int64 -> Char -> ByteString
Name: replicate
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:replicate
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int64
	Data.Char::Char

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
singleton :: Char -> ByteString
Name: singleton
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:singleton
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
findIndex :: (Char -> Bool) -> ByteString -> Maybe Int64
Name: findIndex
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:findIndex
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		Data.Int::Int64
	}
}

[Function]
mapAccumR :: (acc -> Char -> (acc, Char)) -> acc -> ByteString -> (acc, ByteString)
Name: mapAccumR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:mapAccumR
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	acc
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::acc
		Data.Char::Char
	
		[result]
		GHC.Tuple::(,) {
			null::acc
			Data.Char::Char
		}
	}
	null::acc
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	GHC.Tuple::(,) {
		null::acc
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
mapAccumL :: (acc -> Char -> (acc, Char)) -> acc -> ByteString -> (acc, ByteString)
Name: mapAccumL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:mapAccumL
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	acc
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::acc
		Data.Char::Char
	
		[result]
		GHC.Tuple::(,) {
			null::acc
			Data.Char::Char
		}
	}
	null::acc
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	GHC.Tuple::(,) {
		null::acc
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
toChunks :: ByteString -> [ByteString]
Name: toChunks
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:toChunks
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
readInteger :: ByteString -> Maybe (Integer, ByteString)
Name: readInteger
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:readInteger
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Prelude::Integer
			Data.ByteString.Lazy.Char8::ByteString
		}
	}
}

[Function]
span :: (Char -> Bool) -> ByteString -> (ByteString, ByteString)
Name: span
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:span
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	GHC.Tuple::(,) {
		Data.ByteString.Lazy.Char8::ByteString
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
putStrLn :: ByteString -> IO ()
Name: putStrLn
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:putStrLn
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
hPut :: Handle -> ByteString -> IO ()
Name: hPut
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hPut
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
scanl :: (Char -> Char -> Char) -> Char -> ByteString -> ByteString
Name: scanl
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:scanl
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
length :: ByteString -> Int64
Name: length
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:length
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Int::Int64
}

[Function]
break :: (Char -> Bool) -> ByteString -> (ByteString, ByteString)
Name: break
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:break
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	GHC.Tuple::(,) {
		Data.ByteString.Lazy.Char8::ByteString
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
unpack :: ByteString -> [Char]
Name: unpack
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:unpack
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.Char::Char
	}
}

[Function]
split :: Char -> ByteString -> [ByteString]
Name: split
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:split
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
minimum :: ByteString -> Char
Name: minimum
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:minimum
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
putStr :: ByteString -> IO ()
Name: putStr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:putStr
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
fromStrict :: ByteString -> ByteString
Name: fromStrict
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:fromStrict
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString::ByteString

	[result]
	Data.ByteString::ByteString
}

[Function]
foldr :: (Char -> a -> a) -> a -> ByteString -> a
Name: foldr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldr
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		null::a
	
		[result]
		null::a
	}
	null::a
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	null::a
}

[Function]
foldl :: (a -> Char -> a) -> a -> ByteString -> a
Name: foldl
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldl
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
		Data.Char::Char
	
		[result]
		null::a
	}
	null::a
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	null::a
}

[Function]
fromChunks :: [ByteString] -> ByteString
Name: fromChunks
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:fromChunks
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.ByteString::ByteString
	}

	[result]
	Data.ByteString::ByteString
}

[Function]
inits :: ByteString -> [ByteString]
Name: inits
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:inits
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
concat :: [ByteString] -> ByteString
Name: concat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:concat
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
isPrefixOf :: ByteString -> ByteString -> Bool
Name: isPrefixOf
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:isPrefixOf
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
null :: ByteString -> Bool
Name: null
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:null
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
appendFile :: FilePath -> ByteString -> IO ()
Name: appendFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:appendFile
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
hGetContents :: Handle -> IO ByteString
Name: hGetContents
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hGetContents
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
unsnoc :: ByteString -> Maybe (ByteString, Char)
Name: unsnoc
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:unsnoc
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Data.ByteString.Lazy.Char8::ByteString
			Data.Char::Char
		}
	}
}

[Function]
hPutNonBlocking :: Handle -> ByteString -> IO ByteString
Name: hPutNonBlocking
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hPutNonBlocking
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
tails :: ByteString -> [ByteString]
Name: tails
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:tails
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
foldl1 :: (Char -> Char -> Char) -> ByteString -> Char
Name: foldl1
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldl1
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
head :: ByteString -> Char
Name: head
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:head
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
count :: Char -> ByteString -> Int64
Name: count
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:count
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Int::Int64
}

[Function]
foldl' :: (a -> Char -> a) -> a -> ByteString -> a
Name: foldl'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldl'
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
		Data.Char::Char
	
		[result]
		null::a
	}
	null::a
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	null::a
}

[Function]
elemIndices :: Char -> ByteString -> [Int64]
Name: elemIndices
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:elemIndices
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.Int::Int64
	}
}

[Function]
pack :: [Char] -> ByteString
Name: pack
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:pack
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.Char::Char
	}

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
empty :: ByteString
Name: empty
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:empty
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
group :: ByteString -> [ByteString]
Name: group
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:group
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
maximum :: ByteString -> Char
Name: maximum
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:maximum
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
readInt :: ByteString -> Maybe (Int, ByteString)
Name: readInt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:readInt
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Data.Int::Int
			Data.ByteString.Lazy.Char8::ByteString
		}
	}
}

[Function]
iterate :: (Char -> Char) -> Char -> ByteString
Name: iterate
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:iterate
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.Char::Char

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
intercalate :: ByteString -> [ByteString] -> ByteString
Name: intercalate
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:intercalate
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
getContents :: IO ByteString
Name: getContents
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:getContents
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
append :: ByteString -> ByteString -> ByteString
Name: append
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:append
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
notElem :: Char -> ByteString -> Bool
Name: notElem
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:notElem
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
uncons :: ByteString -> Maybe (Char, ByteString)
Name: uncons
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:uncons
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		GHC.Tuple::(,) {
			Data.Char::Char
			Data.ByteString.Lazy.Char8::ByteString
		}
	}
}

[Function]
unlines :: [ByteString] -> ByteString
Name: unlines
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:unlines
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
unfoldr :: (a -> Maybe (Char, a)) -> a -> ByteString
Name: unfoldr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:unfoldr
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Maybe::Maybe {
			GHC.Tuple::(,) {
				Data.Char::Char
				null::a
			}
		}
	}
	null::a

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
foldr1 :: (Char -> Char -> Char) -> ByteString -> Char
Name: foldr1
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:foldr1
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Char::Char
}

[Function]
intersperse :: Char -> ByteString -> ByteString
Name: intersperse
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:intersperse
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
zip :: ByteString -> ByteString -> [(Char, Char)]
Name: zip
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:zip
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		GHC.Tuple::(,) {
			Data.Char::Char
			Data.Char::Char
		}
	}
}

[Function]
takeWhile :: (Char -> Bool) -> ByteString -> ByteString
Name: takeWhile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:takeWhile
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
all :: (Char -> Bool) -> ByteString -> Bool
Name: all
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:all
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
zipWith :: (Char -> Char -> a) -> ByteString -> ByteString -> [a]
Name: zipWith
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:zipWith
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
		Data.Char::Char
	
		[result]
		null::a
	}
	Data.ByteString.Lazy.Char8::ByteString
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		null::a
	}
}

[Function]
hPutStr :: Handle -> ByteString -> IO ()
Name: hPutStr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:hPutStr
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	GHC.IO.Handle::Handle
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
transpose :: [ByteString] -> [ByteString]
Name: transpose
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:transpose
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
any :: (Char -> Bool) -> ByteString -> Bool
Name: any
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:any
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
lines :: ByteString -> [ByteString]
Name: lines
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:lines
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
findIndices :: (Char -> Bool) -> ByteString -> [Int64]
Name: findIndices
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:findIndices
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.Int::Int64
	}
}

[Function]
writeFile :: FilePath -> ByteString -> IO ()
Name: writeFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:writeFile
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
map :: (Char -> Char) -> ByteString -> ByteString
Name: map
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:map
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Char::Char
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
init :: ByteString -> ByteString
Name: init
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:init
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
words :: ByteString -> [ByteString]
Name: words
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:words
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}
}

[Function]
reverse :: ByteString -> ByteString
Name: reverse
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:reverse
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
elem :: Char -> ByteString -> Bool
Name: elem
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:elem
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Bool::Bool
}

[Function]
unwords :: [ByteString] -> ByteString
Name: unwords
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:unwords
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
filter :: (Char -> Bool) -> ByteString -> ByteString
Name: filter
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:filter
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.Char::Char
	
		[result]
		Data.Bool::Bool
	}
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.ByteString.Lazy.Char8::ByteString
}

[Function]
interact :: (ByteString -> ByteString) -> IO ()
Name: interact
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:interact
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		Data.ByteString.Lazy.Char8::ByteString
	
		[result]
		Data.ByteString.Lazy.Char8::ByteString
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
elemIndex :: Char -> ByteString -> Maybe Int64
Name: elemIndex
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/bytestring-0.10.4.0/Data-ByteString-Lazy-Char8.html#v:elemIndex
Containing package: Data.ByteString.Lazy.Char8
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char
	Data.ByteString.Lazy.Char8::ByteString

	[result]
	Data.Maybe::Maybe {
		Data.Int::Int64
	}
}