[Package]
Name: Directory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html
Containing package: null
attributes {
}

Subpackages {
}

[Classifier]
data Permissions = Permissions { readable :: Bool writable :: Bool executable :: Bool searchable :: Bool}
Name: Permissions
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#t:Permissions
Containing package: Directory
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Function]
doesDirectoryExist :: FilePath -> IO Bool
Name: doesDirectoryExist
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:doesDirectoryExist
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		Prelude::Bool
	}
}

[Function]
getPermissions :: FilePath -> IO Permissions
Name: getPermissions
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:getPermissions
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		Directory::Permissions
	}
}

[Function]
setCurrentDirectory :: FilePath -> IO ()
Name: setCurrentDirectory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:setCurrentDirectory
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
getModificationTime :: FilePath -> IO UTCTime
Name: getModificationTime
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:getModificationTime
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		Data.Time.Clock::UTCTime
	}
}

[Function]
setPermissions :: FilePath -> Permissions -> IO ()
Name: setPermissions
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:setPermissions
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath
	Directory::Permissions

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
renameFile :: FilePath -> FilePath -> IO ()
Name: renameFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:renameFile
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
getDirectoryContents :: FilePath -> IO [FilePath]
Name: getDirectoryContents
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:getDirectoryContents
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		other::List {
			Prelude::FilePath
		}
	}
}

[Function]
removeFile :: FilePath -> IO ()
Name: removeFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:removeFile
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
renameDirectory :: FilePath -> FilePath -> IO ()
Name: renameDirectory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:renameDirectory
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
doesFileExist :: FilePath -> IO Bool
Name: doesFileExist
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:doesFileExist
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		Prelude::Bool
	}
}

[Function]
createDirectory :: FilePath -> IO ()
Name: createDirectory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:createDirectory
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
removeDirectory :: FilePath -> IO ()
Name: removeDirectory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:removeDirectory
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::FilePath

	[result]
	Prelude::IO {
		GHC.Tuple::()
	}
}

[Function]
getCurrentDirectory :: IO FilePath
Name: getCurrentDirectory
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Directory.html#v:getCurrentDirectory
Containing package: Directory
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Prelude::IO {
		Prelude::FilePath
	}
}