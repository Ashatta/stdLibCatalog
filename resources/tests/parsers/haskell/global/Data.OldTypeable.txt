[Package]
Name: Data.OldTypeable
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html
Containing package: Data
attributes {
}

Subpackages {
	Data.OldTypeable.Internal
}

[Classifier]
class Typeable a where typeOf :: a -> TypeRep
Name: Typeable
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	Data.Bool::Data.OldTypeable.Typeable_Bool<>
	Data.Char::Data.OldTypeable.Typeable_Char<>
	Prelude::Data.OldTypeable.Typeable_Double<>
	Prelude::Data.OldTypeable.Typeable_Float<>
	Data.Int::Data.OldTypeable.Typeable_Int<>
	Data.Int::Data.OldTypeable.Typeable_Int8<>
	Data.Int::Data.OldTypeable.Typeable_Int16<>
	Data.Int::Data.OldTypeable.Typeable_Int32<>
	Data.Int::Data.OldTypeable.Typeable_Int64<>
	Prelude::Data.OldTypeable.Typeable_Integer<>
	Data.Ord::Data.OldTypeable.Typeable_Ordering<>
	Control.Monad.ST.Safe::Data.OldTypeable.Typeable_RealWorld<>
	Data.Word::Data.OldTypeable.Typeable_Word<>
	Data.Word::Data.OldTypeable.Typeable_Word8<>
	Data.Word::Data.OldTypeable.Typeable_Word16<>
	Data.Word::Data.OldTypeable.Typeable_Word32<>
	Data.Word::Data.OldTypeable.Typeable_Word64<>
	GHC.Tuple::Data.OldTypeable.Typeable_()<>
	Data.OldTypeable::Data.OldTypeable.Typeable_TyCon<>
	Data.OldTypeable::Data.OldTypeable.Typeable_TypeRep<>
	other::Data.OldTypeable.Typeable_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf :: a -> TypeRep
	Name: typeOf
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable
	parameters {
		a: (Typeable a; a; Data.OldTypeable::Typeable)
	}
	Signature = <function> {
		[parameters]
		null::a
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
data TypeRepKey
Name: TypeRep
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:TypeRep
Containing package: Data.OldTypeable
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Classifier]
data TypeRepKey
Name: TypeRepKey
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:TypeRepKey
Containing package: Data.OldTypeable
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Classifier]
class Typeable4 t where typeOf4 :: t a b c d -> TypeRep
Name: Typeable4
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable4
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	GHC.Tuple::Data.OldTypeable.Typeable4_(,,,,)<()<>,()<>,(,)<>>
	other::Data.OldTypeable.Typeable4_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf4 :: t a b c d -> TypeRep
	Name: typeOf4
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf4
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable4
	parameters {
		t: (Typeable4 t; t; Data.OldTypeable::Typeable4)
		a
		b
		c
		d
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
			null::c
			null::d
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable3 t where typeOf3 :: t a b c -> TypeRep
Name: Typeable3
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable3
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	GHC.Tuple::Data.OldTypeable.Typeable3_(,,,)<()<>,(,)<>>
	other::Data.OldTypeable.Typeable3_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf3 :: t a b c -> TypeRep
	Name: typeOf3
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf3
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable3
	parameters {
		t: (Typeable3 t; t; Data.OldTypeable::Typeable3)
		a
		b
		c
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
			null::c
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable2 t where typeOf2 :: t a b -> TypeRep
Name: Typeable2
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable2
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	other::Data.OldTypeable.Typeable2_(->)<>
	GHC.Tuple::Data.OldTypeable.Typeable2_(,)<>
	Control.Monad.ST.Safe::Data.OldTypeable.Typeable2_ST<>
	Data.STRef::Data.OldTypeable.Typeable2_STRef<>
	other::Data.OldTypeable.Typeable2_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf2 :: t a b -> TypeRep
	Name: typeOf2
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf2
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable2
	parameters {
		t: (Typeable2 t; t; Data.OldTypeable::Typeable2)
		a
		b
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable1 t where typeOf1 :: t a -> TypeRep
Name: Typeable1
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable1
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	other::Data.OldTypeable.Typeable1_List<curriedParam<>>
	Data.Ratio::Data.OldTypeable.Typeable1_Ratio<>
	Foreign.StablePtr::Data.OldTypeable.Typeable1_StablePtr<>
	System.IO::Data.OldTypeable.Typeable1_IO<>
	Foreign.Ptr::Data.OldTypeable.Typeable1_Ptr<>
	Foreign.Ptr::Data.OldTypeable.Typeable1_FunPtr<>
	Data.Maybe::Data.OldTypeable.Typeable1_Maybe<>
	Data.IORef::Data.OldTypeable.Typeable1_IORef<>
	Control.Concurrent.MVar::Data.OldTypeable.Typeable1_MVar<>
	other::Data.OldTypeable.Typeable1_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf1 :: t a -> TypeRep
	Name: typeOf1
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf1
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable1
	parameters {
		t: (Typeable1 t; t; Data.OldTypeable::Typeable1)
		a
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable7 t where typeOf7 :: t a b c d e f g -> TypeRep
Name: Typeable7
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable7
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	GHC.Tuple::Data.OldTypeable.Typeable7_(,,,,,,,)<()<>,()<>,()<>,()<>,()<>,(,)<>>
}
supertypes {
}
members {

	[Function]
	typeOf7 :: t a b c d e f g -> TypeRep
	Name: typeOf7
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf7
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable7
	parameters {
		t: (Typeable7 t; t; Data.OldTypeable::Typeable7)
		a
		b
		c
		d
		e
		f
		g
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
			null::c
			null::d
			null::e
			null::f
			null::g
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable6 t where typeOf6 :: t a b c d e f -> TypeRep
Name: Typeable6
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable6
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	GHC.Tuple::Data.OldTypeable.Typeable6_(,,,,,,)<()<>,()<>,()<>,()<>,(,)<>>
	other::Data.OldTypeable.Typeable6_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf6 :: t a b c d e f -> TypeRep
	Name: typeOf6
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf6
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable6
	parameters {
		t: (Typeable6 t; t; Data.OldTypeable::Typeable6)
		a
		b
		c
		d
		e
		f
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
			null::c
			null::d
			null::e
			null::f
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
class Typeable5 t where typeOf5 :: t a b c d e -> TypeRep
Name: Typeable5
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:Typeable5
Containing package: Data.OldTypeable
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	GHC.Tuple::Data.OldTypeable.Typeable5_(,,,,,)<()<>,()<>,()<>,(,)<>>
	other::Data.OldTypeable.Typeable5_s<a<>>
}
supertypes {
}
members {

	[Function]
	typeOf5 :: t a b c d e -> TypeRep
	Name: typeOf5
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf5
	Containing package: Data.OldTypeable
	attributes {
		memberType=function
	}
	Containing type: Typeable5
	parameters {
		t: (Typeable5 t; t; Data.OldTypeable::Typeable5)
		a
		b
		c
		d
		e
	}
	Signature = <function> {
		[parameters]
		null::t {
			null::a
			null::b
			null::c
			null::d
			null::e
		}
	
		[result]
		Data.OldTypeable::TypeRep
	}
}

[Classifier]
data TyCon
Name: TyCon
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#t:TyCon
Containing package: Data.OldTypeable
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
}
derived {
}
supertypes {
}
members {
}

[Function]
typeOf2Default :: forall t a b c. (Typeable3 t, Typeable a) => t a b c -> TypeRep
Name: typeOf2Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf2Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable3 t; t; Data.OldTypeable::Typeable3)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
	c
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
		null::c
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
funResultTy :: TypeRep -> TypeRep -> Maybe TypeRep
Name: funResultTy
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:funResultTy
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep
	Data.OldTypeable::TypeRep

	[result]
	Data.Maybe::Maybe {
		Data.OldTypeable::TypeRep
	}
}

[Function]
mkTyCon :: String -> TyCon
Name: mkTyCon
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:mkTyCon
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	Data.OldTypeable::TyCon
}

[Function]
cast :: (Typeable a, Typeable b) => a -> Maybe b
Name: cast
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:cast
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b: (Typeable b; b; Data.OldTypeable::Typeable)
}
Signature = <function> {
	[parameters]
	null::a

	[result]
	Data.Maybe::Maybe {
		null::b
	}
}

[Function]
typeRepTyCon :: TypeRep -> TyCon
Name: typeRepTyCon
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeRepTyCon
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep

	[result]
	Data.OldTypeable::TyCon
}

[Function]
gcast :: (Typeable a, Typeable b) => c a -> Maybe (c b)
Name: gcast
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:gcast
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b: (Typeable b; b; Data.OldTypeable::Typeable)
	c
}
Signature = <function> {
	[parameters]
	null::c {
		null::a
	}

	[result]
	Data.Maybe::Maybe {
		null::c {
			null::b
		}
	}
}

[Function]
mkAppTy :: TypeRep -> TypeRep -> TypeRep
Name: mkAppTy
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:mkAppTy
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep
	Data.OldTypeable::TypeRep

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
typeRepArgs :: TypeRep -> [TypeRep]
Name: typeRepArgs
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeRepArgs
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep

	[result]
	other::List {
		Data.OldTypeable::TypeRep
	}
}

[Function]
typeOf1Default :: forall t a b. (Typeable2 t, Typeable a) => t a b -> TypeRep
Name: typeOf1Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf1Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable2 t; t; Data.OldTypeable::Typeable2)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
gcast2 :: (Typeable2 t, Typeable2 t') => c (t a b) -> Maybe (c (t' a b))
Name: gcast2
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:gcast2
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable2 t; t; Data.OldTypeable::Typeable2)
	t': (Typeable2 t'; t'; Data.OldTypeable::Typeable2)
	c
	a
	b
}
Signature = <function> {
	[parameters]
	null::c {
		null::t {
			null::a
			null::b
		}
	}

	[result]
	Data.Maybe::Maybe {
		null::c {
			null::t' {
				null::a
				null::b
			}
		}
	}
}

[Function]
gcast1 :: (Typeable1 t, Typeable1 t') => c (t a) -> Maybe (c (t' a))
Name: gcast1
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:gcast1
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable1 t; t; Data.OldTypeable::Typeable1)
	t': (Typeable1 t'; t'; Data.OldTypeable::Typeable1)
	c
	a
}
Signature = <function> {
	[parameters]
	null::c {
		null::t {
			null::a
		}
	}

	[result]
	Data.Maybe::Maybe {
		null::c {
			null::t' {
				null::a
			}
		}
	}
}

[Function]
mkTyCon3 :: String -> String -> String -> TyCon
Name: mkTyCon3
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:mkTyCon3
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	Data.String::String
	Data.String::String

	[result]
	Data.OldTypeable::TyCon
}

[Function]
splitTyConApp :: TypeRep -> (TyCon, [TypeRep])
Name: splitTyConApp
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:splitTyConApp
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep

	[result]
	GHC.Tuple::(,) {
		Data.OldTypeable::TyCon
		other::List {
			Data.OldTypeable::TypeRep
		}
	}
}

[Function]
mkTyConApp :: TyCon -> [TypeRep] -> TypeRep
Name: mkTyConApp
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:mkTyConApp
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TyCon
	other::List {
		Data.OldTypeable::TypeRep
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
typeOf5Default :: forall t a b c d e f. (Typeable6 t, Typeable a) => t a b c d e f -> TypeRep
Name: typeOf5Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf5Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable6 t; t; Data.OldTypeable::Typeable6)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
	c
	d
	e
	f
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
		null::c
		null::d
		null::e
		null::f
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
typeOf4Default :: forall t a b c d e. (Typeable5 t, Typeable a) => t a b c d e -> TypeRep
Name: typeOf4Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf4Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable5 t; t; Data.OldTypeable::Typeable5)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
	c
	d
	e
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
		null::c
		null::d
		null::e
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
showsTypeRep :: TypeRep -> ShowS
Name: showsTypeRep
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:showsTypeRep
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep

	[result]
	Text.Show::ShowS
}

[Function]
typeOfDefault :: forall t a. (Typeable1 t, Typeable a) => t a -> TypeRep
Name: typeOfDefault
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOfDefault
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable1 t; t; Data.OldTypeable::Typeable1)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
typeOf3Default :: forall t a b c d. (Typeable4 t, Typeable a) => t a b c d -> TypeRep
Name: typeOf3Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf3Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable4 t; t; Data.OldTypeable::Typeable4)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
	c
	d
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
		null::c
		null::d
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
tyConPackage :: TyCon -> String
Name: tyConPackage
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:tyConPackage
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TyCon

	[result]
	Data.String::String
}

[Function]
tyConName :: TyCon -> String
Name: tyConName
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:tyConName
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TyCon

	[result]
	Data.String::String
}

[Function]
typeOf6Default :: forall t a b c d e f g. (Typeable7 t, Typeable a) => t a b c d e f g -> TypeRep
Name: typeOf6Default
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeOf6Default
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
	t: (Typeable7 t; t; Data.OldTypeable::Typeable7)
	a: (Typeable a; a; Data.OldTypeable::Typeable)
	b
	c
	d
	e
	f
	g
}
Signature = <function> {
	[parameters]
	null::t {
		null::a
		null::b
		null::c
		null::d
		null::e
		null::f
		null::g
	}

	[result]
	Data.OldTypeable::TypeRep
}

[Function]
typeRepKey :: TypeRep -> IO TypeRepKey
Name: typeRepKey
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:typeRepKey
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep

	[result]
	System.IO::IO {
		Data.OldTypeable::TypeRepKey
	}
}

[Function]
tyConModule :: TyCon -> String
Name: tyConModule
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:tyConModule
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TyCon

	[result]
	Data.String::String
}

[Function]
tyConString :: TyCon -> String
Name: tyConString
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:tyConString
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TyCon

	[result]
	Data.String::String
}

[Function]
mkFunTy :: TypeRep -> TypeRep -> TypeRep
Name: mkFunTy
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-OldTypeable.html#v:mkFunTy
Containing package: Data.OldTypeable
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.OldTypeable::TypeRep
	Data.OldTypeable::TypeRep

	[result]
	Data.OldTypeable::TypeRep
}