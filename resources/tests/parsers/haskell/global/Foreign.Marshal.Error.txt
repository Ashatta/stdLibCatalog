[Package]
Name: Foreign.Marshal.Error
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html
Containing package: Foreign.Marshal
attributes {
}

Subpackages {
}

[Function]
throwIfNeg :: (Ord a, Num a) => (a -> String) -> IO a -> IO a
Name: throwIfNeg
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:throwIfNeg
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Ord a; a; Data.Ord::Ord), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.String::String
	}
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
throwIf_ :: (a -> Bool) -> (a -> String) -> IO a -> IO ()
Name: throwIf_
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:throwIf_
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Bool::Bool
	}
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.String::String
	}
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
void :: IO a -> IO ()
Name: void
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:void
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
throwIfNull :: String -> IO (Ptr a) -> IO (Ptr a)
Name: throwIfNull
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:throwIfNull
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Data.String::String
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}

	[result]
	System.IO::IO {
		Foreign.Ptr::Ptr {
			null::a
		}
	}
}

[Function]
throwIfNeg_ :: (Ord a, Num a) => (a -> String) -> IO a -> IO ()
Name: throwIfNeg_
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:throwIfNeg_
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Ord a; a; Data.Ord::Ord), (Num a; a; Prelude::Num)
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.String::String
	}
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
throwIf :: (a -> Bool) -> (a -> String) -> IO a -> IO a
Name: throwIf
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Foreign-Marshal-Error.html#v:throwIf
Containing package: Foreign.Marshal.Error
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.Bool::Bool
	}
	<function> {
		[parameters]
		null::a
	
		[result]
		Data.String::String
	}
	System.IO::IO {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}