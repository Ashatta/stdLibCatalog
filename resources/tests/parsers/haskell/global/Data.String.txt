[Package]
Name: Data.String
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html
Containing package: Data
attributes {
}

Subpackages {
}

[Classifier]
class IsString a where fromString :: String -> a
Name: IsString
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#t:IsString
Containing package: Data.String
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	Data.ByteString.Builder::Data.String.IsString_Builder<>
	Data.ByteString.Char8::Data.String.IsString_ByteString<>
	Data.ByteString.Lazy.Char8::Data.String.IsString_ByteString<>
	Data.ByteString.Lazy::Data.String.IsString_ByteString<>
	Data.ByteString.Short::Data.String.IsString_ShortByteString<>
	Data.ByteString::Data.String.IsString_ByteString<>
	other::Data.String.IsString_List<Char<>>
	Text.PrettyPrint.HughesPJ::Data.String.IsString_Doc<>
	Text.PrettyPrint::Data.String.IsString_Doc<>
}
supertypes {
}
members {

	[Function]
	fromString :: String -> a
	Name: fromString
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#v:fromString
	Containing package: Data.String
	attributes {
		memberType=function
	}
	Containing type: IsString
	parameters {
		a: (IsString a; a; Data.String::IsString)
	}
	Signature = <function> {
		[parameters]
		Data.String::String
	
		[result]
		null::a
	}
}

[Alias]
type String = [Char]
Name: String
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#t:String
Containing package: Data.String
attributes {
}
parameters {
}
Aliased type = <function> {
	[parameters]

	[result]
	other::List {
		Data.Char::Char
	}
}

[Function]
words :: String -> [String]
Name: words
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#v:words
Containing package: Data.String
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	other::List {
		Data.String::String
	}
}

[Function]
unwords :: [String] -> String
Name: unwords
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#v:unwords
Containing package: Data.String
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.String::String
	}

	[result]
	Data.String::String
}

[Function]
lines :: String -> [String]
Name: lines
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#v:lines
Containing package: Data.String
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	other::List {
		Data.String::String
	}
}

[Function]
unlines :: [String] -> String
Name: unlines
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-String.html#v:unlines
Containing package: Data.String
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.String::String
	}

	[result]
	Data.String::String
}