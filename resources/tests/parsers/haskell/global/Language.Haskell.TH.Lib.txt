[Package]
Name: Language.Haskell.TH.Lib
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html
Containing package: Language.Haskell.TH
attributes {
}

Subpackages {
}

[Alias]
type TExpQ a = Q (TExp a)
Name: TExpQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:TExpQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
	a
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::TExp {
		null::a
	}
}

[Alias]
type TyLitQ = Q TyLit
Name: TyLitQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:TyLitQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::TyLit
}

[Alias]
type FieldExpQ = Q FieldExp
Name: FieldExpQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:FieldExpQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::FieldExp
}

[Alias]
type DecsQ = Q [Dec]
Name: DecsQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:DecsQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	other::List {
		Language.Haskell.TH.Syntax::Dec
	}
}

[Alias]
type ClauseQ = Q Clause
Name: ClauseQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:ClauseQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Clause
}

[Alias]
type BodyQ = Q Body
Name: BodyQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:BodyQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Body
}

[Alias]
type StmtQ = Q Stmt
Name: StmtQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:StmtQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Stmt
}

[Alias]
type GuardQ = Q Guard
Name: GuardQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:GuardQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Guard
}

[Alias]
type RangeQ = Q Range
Name: RangeQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:RangeQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Range
}

[Alias]
type PatQ = Q Pat
Name: PatQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:PatQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Pat
}

[Alias]
type PredQ = Q Pred
Name: PredQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:PredQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Pred
}

[Alias]
type TypeQ = Q Type
Name: TypeQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:TypeQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Type
}

[Alias]
type ConQ = Q Con
Name: ConQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:ConQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Con
}

[Alias]
type MatchQ = Q Match
Name: MatchQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:MatchQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Match
}

[Alias]
type DecQ = Q Dec
Name: DecQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:DecQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Dec
}

[Alias]
type FieldPatQ = Q FieldPat
Name: FieldPatQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:FieldPatQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::FieldPat
}

[Alias]
type Role = Role
Name: Role
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:Role
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = null::Role

[Alias]
type InfoQ = Q Info
Name: InfoQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:InfoQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Info
}

[Alias]
type CxtQ = Q Cxt
Name: CxtQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:CxtQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Cxt
}

[Alias]
type RuleBndrQ = Q RuleBndr
Name: RuleBndrQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:RuleBndrQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::RuleBndr
}

[Alias]
type StrictTypeQ = Q StrictType
Name: StrictTypeQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:StrictTypeQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::StrictType
}

[Alias]
type VarStrictTypeQ = Q VarStrictType
Name: VarStrictTypeQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:VarStrictTypeQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::VarStrictType
}

[Alias]
type TySynEqnQ = Q TySynEqn
Name: TySynEqnQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:TySynEqnQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::TySynEqn
}

[Alias]
type ExpQ = Q Exp
Name: ExpQ
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#t:ExpQ
Containing package: Language.Haskell.TH.Lib
attributes {
}
parameters {
}
Aliased type = Language.Haskell.TH.Syntax::Q {
	Language.Haskell.TH.Syntax::Exp
}

[Function]
normalB :: ExpQ -> BodyQ
Name: normalB
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:normalB
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::BodyQ
}

[Function]
normalC :: Name -> [StrictTypeQ] -> ConQ
Name: normalC
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:normalC
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::StrictTypeQ
	}

	[result]
	Language.Haskell.TH.Lib::ConQ
}

[Function]
normalG :: ExpQ -> GuardQ
Name: normalG
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:normalG
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::GuardQ
}

[Function]
fromToE :: ExpQ -> ExpQ -> ExpQ
Name: fromToE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromToE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
constraintK :: Kind
Name: constraintK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:constraintK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
doublePrimL :: Rational -> Lit
Name: doublePrimL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:doublePrimL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Rational

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
fromToR :: ExpQ -> ExpQ -> RangeQ
Name: fromToR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromToR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::RangeQ
}

[Function]
fromThenToR :: ExpQ -> ExpQ -> ExpQ -> RangeQ
Name: fromThenToR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromThenToR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::RangeQ
}

[Function]
fromThenToE :: ExpQ -> ExpQ -> ExpQ -> ExpQ
Name: fromThenToE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromThenToE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
stdCall :: Callconv
Name: stdCall
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:stdCall
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Callconv
}

[Function]
pragInlD :: Name -> Inline -> RuleMatch -> Phases -> DecQ
Name: pragInlD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragInlD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Syntax::Inline
	Language.Haskell.TH.Syntax::RuleMatch
	Language.Haskell.TH.Syntax::Phases

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
fromR :: ExpQ -> RangeQ
Name: fromR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::RangeQ
}

[Function]
fromE :: ExpQ -> ExpQ
Name: fromE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
tupleK :: Int -> Kind
Name: tupleK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tupleK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
tupleT :: Int -> TypeQ
Name: tupleT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tupleT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
match :: PatQ -> BodyQ -> [DecQ] -> MatchQ
Name: match
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:match
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Lib::BodyQ
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::MatchQ
}

[Function]
sigT :: TypeQ -> Kind -> TypeQ
Name: sigT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sigT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::TypeQ
	Language.Haskell.TH.Syntax::Kind

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
sigE :: ExpQ -> TypeQ -> ExpQ
Name: sigE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sigE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
sigD :: Name -> TypeQ -> DecQ
Name: sigD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sigD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
sigP :: PatQ -> TypeQ -> PatQ
Name: sigP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sigP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
forImpD :: Callconv -> Safety -> String -> Name -> TypeQ -> DecQ
Name: forImpD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:forImpD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Callconv
	Language.Haskell.TH.Syntax::Safety
	Data.String::String
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
lam1E :: PatQ -> ExpQ -> ExpQ
Name: lam1E
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:lam1E
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
infixApp :: ExpQ -> ExpQ -> ExpQ -> ExpQ
Name: infixApp
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixApp
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
recUpdE :: ExpQ -> [Q (Name, Exp)] -> ExpQ
Name: recUpdE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:recUpdE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	other::List {
		Language.Haskell.TH.Syntax::Q {
			GHC.Tuple::(,) {
				Language.Haskell.TH.Syntax::Name
				Language.Haskell.TH.Syntax::Exp
			}
		}
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
tySynInstD :: Name -> TySynEqnQ -> DecQ
Name: tySynInstD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tySynInstD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TySynEqnQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
interruptible :: Safety
Name: interruptible
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:interruptible
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Safety
}

[Function]
fieldExp :: Name -> ExpQ -> Q (Name, Exp)
Name: fieldExp
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fieldExp
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Syntax::Q {
		GHC.Tuple::(,) {
			Language.Haskell.TH.Syntax::Name
			Language.Haskell.TH.Syntax::Exp
		}
	}
}

[Function]
kindedTV :: Name -> Kind -> TyVarBndr
Name: kindedTV
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:kindedTV
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Syntax::Kind

	[result]
	Language.Haskell.TH.Syntax::TyVarBndr
}

[Function]
wordPrimL :: Integer -> Lit
Name: wordPrimL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:wordPrimL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
litE :: Lit -> ExpQ
Name: litE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:litE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Lit

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
litP :: Lit -> PatQ
Name: litP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:litP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Lit

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
litT :: TyLitQ -> TypeQ
Name: litT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:litT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::TyLitQ

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
recC :: Name -> [VarStrictTypeQ] -> ConQ
Name: recC
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:recC
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::VarStrictTypeQ
	}

	[result]
	Language.Haskell.TH.Lib::ConQ
}

[Function]
recP :: Name -> [FieldPatQ] -> PatQ
Name: recP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:recP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::FieldPatQ
	}

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
tildeP :: PatQ -> PatQ
Name: tildeP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tildeP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
unpacked :: Q Strict
Name: unpacked
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:unpacked
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Q {
		Language.Haskell.TH.Syntax::Strict
	}
}

[Function]
noBindS :: ExpQ -> StmtQ
Name: noBindS
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:noBindS
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::StmtQ
}

[Function]
infixRD :: Int -> Name -> DecQ
Name: infixRD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixRD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
arithSeqE :: RangeQ -> ExpQ
Name: arithSeqE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:arithSeqE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::RangeQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
multiIfE :: [Q (Guard, Exp)] -> ExpQ
Name: multiIfE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:multiIfE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Syntax::Q {
			GHC.Tuple::(,) {
				Language.Haskell.TH.Syntax::Guard
				Language.Haskell.TH.Syntax::Exp
			}
		}
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
tySynD :: Name -> [TyVarBndr] -> TypeQ -> DecQ
Name: tySynD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tySynD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
infixND :: Int -> Name -> DecQ
Name: infixND
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixND
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
floatPrimL :: Rational -> Lit
Name: floatPrimL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:floatPrimL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Rational

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
infixLD :: Int -> Name -> DecQ
Name: infixLD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixLD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
starK :: Kind
Name: starK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:starK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
bangP :: PatQ -> PatQ
Name: bangP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:bangP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
cCall :: Callconv
Name: cCall
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:cCall
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Callconv
}

[Function]
inferR :: Role
Name: inferR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:inferR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::Role
}

[Function]
roleAnnotD :: Name -> [Role] -> DecQ
Name: roleAnnotD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:roleAnnotD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::Role
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
closedTypeFamilyNoKindD :: Name -> [TyVarBndr] -> [TySynEqnQ] -> DecQ
Name: closedTypeFamilyNoKindD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:closedTypeFamilyNoKindD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	other::List {
		Language.Haskell.TH.Lib::TySynEqnQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
charL :: Char -> Lit
Name: charL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:charL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Char::Char

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
pragSpecD :: Name -> TypeQ -> Phases -> DecQ
Name: pragSpecD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragSpecD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TypeQ
	Language.Haskell.TH.Syntax::Phases

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
wildP :: PatQ
Name: wildP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:wildP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
phantomR :: Role
Name: phantomR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:phantomR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::Role
}

[Function]
parS :: [[StmtQ]] -> StmtQ
Name: parS
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:parS
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		<function> {
			[parameters]
		
			[result]
			other::List {
				Language.Haskell.TH.Lib::StmtQ
			}
		}
	}

	[result]
	Language.Haskell.TH.Lib::StmtQ
}

[Function]
patG :: [StmtQ] -> GuardQ
Name: patG
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:patG
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::StmtQ
	}

	[result]
	Language.Haskell.TH.Lib::GuardQ
}

[Function]
strictType :: Q Strict -> TypeQ -> StrictTypeQ
Name: strictType
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:strictType
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Q {
		Language.Haskell.TH.Syntax::Strict
	}
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::StrictTypeQ
}

[Function]
closedTypeFamilyKindD :: Name -> [TyVarBndr] -> Kind -> [TySynEqnQ] -> DecQ
Name: closedTypeFamilyKindD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:closedTypeFamilyKindD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Syntax::Kind
	other::List {
		Language.Haskell.TH.Lib::TySynEqnQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
viewP :: ExpQ -> PatQ -> PatQ
Name: viewP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:viewP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
tupE :: [ExpQ] -> ExpQ
Name: tupE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tupE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::ExpQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
tupP :: [PatQ] -> PatQ
Name: tupP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tupP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
sectionL :: ExpQ -> ExpQ -> ExpQ
Name: sectionL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sectionL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
sectionR :: ExpQ -> ExpQ -> ExpQ
Name: sectionR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:sectionR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
ruleVar :: Name -> RuleBndrQ
Name: ruleVar
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:ruleVar
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::RuleBndrQ
}

[Function]
rationalL :: Rational -> Lit
Name: rationalL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:rationalL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Rational

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
clause :: [PatQ] -> BodyQ -> [DecQ] -> ClauseQ
Name: clause
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:clause
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}
	Language.Haskell.TH.Lib::BodyQ
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::ClauseQ
}

[Function]
varStrictType :: Name -> StrictTypeQ -> VarStrictTypeQ
Name: varStrictType
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:varStrictType
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::StrictTypeQ

	[result]
	Language.Haskell.TH.Lib::VarStrictTypeQ
}

[Function]
unboxedTupP :: [PatQ] -> PatQ
Name: unboxedTupP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:unboxedTupP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
unboxedTupE :: [ExpQ] -> ExpQ
Name: unboxedTupE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:unboxedTupE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::ExpQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
promotedNilT :: TypeQ
Name: promotedNilT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:promotedNilT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
parensP :: PatQ -> PatQ
Name: parensP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:parensP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
safe :: Safety
Name: safe
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:safe
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Safety
}

[Function]
funDep :: [Name] -> [Name] -> FunDep
Name: funDep
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:funDep
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Syntax::Name
	}
	other::List {
		Language.Haskell.TH.Syntax::Name
	}

	[result]
	Language.Haskell.TH.Syntax::FunDep
}

[Function]
tySynEqn :: [TypeQ] -> TypeQ -> TySynEqnQ
Name: tySynEqn
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:tySynEqn
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::TypeQ
	}
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::TySynEqnQ
}

[Function]
nominalR :: Role
Name: nominalR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:nominalR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::Role
}

[Function]
strTyLit :: String -> TyLitQ
Name: strTyLit
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:strTyLit
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	Language.Haskell.TH.Lib::TyLitQ
}

[Function]
parensE :: ExpQ -> ExpQ
Name: parensE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:parensE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
recConE :: Name -> [Q (Name, Exp)] -> ExpQ
Name: recConE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:recConE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::Q {
			GHC.Tuple::(,) {
				Language.Haskell.TH.Syntax::Name
				Language.Haskell.TH.Syntax::Exp
			}
		}
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
infixE :: Maybe ExpQ -> ExpQ -> Maybe ExpQ -> ExpQ
Name: infixE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Maybe::Maybe {
		Language.Haskell.TH.Lib::ExpQ
	}
	Language.Haskell.TH.Lib::ExpQ
	Data.Maybe::Maybe {
		Language.Haskell.TH.Lib::ExpQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
infixC :: Q (Strict, Type) -> Name -> Q (Strict, Type) -> ConQ
Name: infixC
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixC
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Q {
		GHC.Tuple::(,) {
			Language.Haskell.TH.Syntax::Strict
			Language.Haskell.TH.Syntax::Type
		}
	}
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Syntax::Q {
		GHC.Tuple::(,) {
			Language.Haskell.TH.Syntax::Strict
			Language.Haskell.TH.Syntax::Type
		}
	}

	[result]
	Language.Haskell.TH.Lib::ConQ
}

[Function]
infixP :: PatQ -> Name -> PatQ -> PatQ
Name: infixP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:infixP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
dataInstD :: CxtQ -> Name -> [TypeQ] -> [ConQ] -> [Name] -> DecQ
Name: dataInstD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:dataInstD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::TypeQ
	}
	other::List {
		Language.Haskell.TH.Lib::ConQ
	}
	other::List {
		Language.Haskell.TH.Syntax::Name
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
pragSpecInstD :: TypeQ -> DecQ
Name: pragSpecInstD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragSpecInstD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
funD :: Name -> [ClauseQ] -> DecQ
Name: funD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:funD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::ClauseQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
plainTV :: Name -> TyVarBndr
Name: plainTV
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:plainTV
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Syntax::TyVarBndr
}

[Function]
valD :: PatQ -> BodyQ -> [DecQ] -> DecQ
Name: valD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:valD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Lib::BodyQ
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
instanceD :: CxtQ -> TypeQ -> [DecQ] -> DecQ
Name: instanceD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:instanceD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Lib::TypeQ
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
pragAnnD :: AnnTarget -> ExpQ -> DecQ
Name: pragAnnD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragAnnD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::AnnTarget
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
promotedTupleT :: Int -> TypeQ
Name: promotedTupleT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:promotedTupleT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
varK :: Name -> Kind
Name: varK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:varK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
varP :: Name -> PatQ
Name: varP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:varP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
varT :: Name -> TypeQ
Name: varT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:varT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
familyKindD :: FamFlavour -> Name -> [TyVarBndr] -> Kind -> DecQ
Name: familyKindD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:familyKindD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::FamFlavour
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Syntax::Kind

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
varE :: Name -> ExpQ
Name: varE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:varE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
newtypeD :: CxtQ -> Name -> [TyVarBndr] -> ConQ -> [Name] -> DecQ
Name: newtypeD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:newtypeD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Lib::ConQ
	other::List {
		Language.Haskell.TH.Syntax::Name
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
representationalR :: Role
Name: representationalR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:representationalR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::Role
}

[Function]
patGE :: [StmtQ] -> ExpQ -> Q (Guard, Exp)
Name: patGE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:patGE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::StmtQ
	}
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Syntax::Q {
		GHC.Tuple::(,) {
			Language.Haskell.TH.Syntax::Guard
			Language.Haskell.TH.Syntax::Exp
		}
	}
}

[Function]
fromThenR :: ExpQ -> ExpQ -> RangeQ
Name: fromThenR
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromThenR
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::RangeQ
}

[Function]
thisModule :: Q Module
Name: thisModule
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:thisModule
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Q {
		Language.Haskell.TH.Syntax::Module
	}
}

[Function]
pragRuleD :: String -> [RuleBndrQ] -> ExpQ -> ExpQ -> Phases -> DecQ
Name: pragRuleD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragRuleD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	other::List {
		Language.Haskell.TH.Lib::RuleBndrQ
	}
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Syntax::Phases

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
fromThenE :: ExpQ -> ExpQ -> ExpQ
Name: fromThenE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fromThenE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
promotedT :: Name -> TypeQ
Name: promotedT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:promotedT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
dataFam :: FamFlavour
Name: dataFam
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:dataFam
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::FamFlavour
}

[Function]
uInfixP :: PatQ -> Name -> PatQ -> PatQ
Name: uInfixP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:uInfixP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
uInfixE :: ExpQ -> ExpQ -> ExpQ -> ExpQ
Name: uInfixE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:uInfixE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
arrowT :: TypeQ
Name: arrowT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:arrowT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
arrowK :: Kind
Name: arrowK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:arrowK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
classD :: CxtQ -> Name -> [TyVarBndr] -> [FunDep] -> [DecQ] -> DecQ
Name: classD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:classD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	other::List {
		Language.Haskell.TH.Syntax::FunDep
	}
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
classP :: Name -> [TypeQ] -> PredQ
Name: classP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:classP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::TypeQ
	}

	[result]
	Language.Haskell.TH.Lib::PredQ
}

[Function]
dataD :: CxtQ -> Name -> [TyVarBndr] -> [ConQ] -> [Name] -> DecQ
Name: dataD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:dataD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	other::List {
		Language.Haskell.TH.Lib::ConQ
	}
	other::List {
		Language.Haskell.TH.Syntax::Name
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
lamE :: [PatQ] -> ExpQ -> ExpQ
Name: lamE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:lamE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
equalP :: TypeQ -> TypeQ -> PredQ
Name: equalP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:equalP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::TypeQ
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::PredQ
}

[Function]
numTyLit :: Integer -> TyLitQ
Name: numTyLit
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:numTyLit
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer

	[result]
	Language.Haskell.TH.Lib::TyLitQ
}

[Function]
familyNoKindD :: FamFlavour -> Name -> [TyVarBndr] -> DecQ
Name: familyNoKindD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:familyNoKindD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::FamFlavour
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
appE :: ExpQ -> ExpQ -> ExpQ
Name: appE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:appE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
appK :: Kind -> Kind -> Kind
Name: appK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:appK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Kind
	Language.Haskell.TH.Syntax::Kind

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
appT :: TypeQ -> TypeQ -> TypeQ
Name: appT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:appT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::TypeQ
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
normalGE :: ExpQ -> ExpQ -> Q (Guard, Exp)
Name: normalGE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:normalGE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Syntax::Q {
		GHC.Tuple::(,) {
			Language.Haskell.TH.Syntax::Guard
			Language.Haskell.TH.Syntax::Exp
		}
	}
}

[Function]
unboxedTupleT :: Int -> TypeQ
Name: unboxedTupleT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:unboxedTupleT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Int::Int

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
compE :: [StmtQ] -> ExpQ
Name: compE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:compE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::StmtQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
listT :: TypeQ
Name: listT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:listT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
listP :: [PatQ] -> PatQ
Name: listP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:listP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
listK :: Kind
Name: listK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:listK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
listE :: [ExpQ] -> ExpQ
Name: listE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:listE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::ExpQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
dyn :: String -> ExpQ
Name: dyn
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:dyn
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
stringE :: String -> ExpQ
Name: stringE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:stringE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
stringL :: String -> Lit
Name: stringL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:stringL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
conE :: Name -> ExpQ
Name: conE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:conE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
conK :: Name -> Kind
Name: conK
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:conK
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Syntax::Kind
}

[Function]
conP :: Name -> [PatQ] -> PatQ
Name: conP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:conP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::PatQ
	}

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
conT :: Name -> TypeQ
Name: conT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:conT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
unsafe :: Safety
Name: unsafe
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:unsafe
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Safety
}

[Function]
fieldPat :: Name -> PatQ -> FieldPatQ
Name: fieldPat
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:fieldPat
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::FieldPatQ
}

[Function]
caseE :: ExpQ -> [MatchQ] -> ExpQ
Name: caseE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:caseE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	other::List {
		Language.Haskell.TH.Lib::MatchQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
promotedConsT :: TypeQ
Name: promotedConsT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:promotedConsT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
typedRuleVar :: Name -> TypeQ -> RuleBndrQ
Name: typedRuleVar
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:typedRuleVar
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::RuleBndrQ
}

[Function]
doE :: [StmtQ] -> ExpQ
Name: doE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:doE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::StmtQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
notStrict :: Q Strict
Name: notStrict
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:notStrict
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Q {
		Language.Haskell.TH.Syntax::Strict
	}
}

[Function]
stringPrimL :: [Word8] -> Lit
Name: stringPrimL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:stringPrimL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Data.Word::Word8
	}

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
bindS :: PatQ -> ExpQ -> StmtQ
Name: bindS
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:bindS
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::PatQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::StmtQ
}

[Function]
cxt :: [PredQ] -> CxtQ
Name: cxt
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:cxt
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::PredQ
	}

	[result]
	Language.Haskell.TH.Lib::CxtQ
}

[Function]
isStrict :: Q Strict
Name: isStrict
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:isStrict
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::Q {
		Language.Haskell.TH.Syntax::Strict
	}
}

[Function]
condE :: ExpQ -> ExpQ -> ExpQ -> ExpQ
Name: condE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:condE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
typeFam :: FamFlavour
Name: typeFam
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:typeFam
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	Language.Haskell.TH.Syntax::FamFlavour
}

[Function]
appsE :: [ExpQ] -> ExpQ
Name: appsE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:appsE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::ExpQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
pragSpecInlD :: Name -> TypeQ -> Inline -> Phases -> DecQ
Name: pragSpecInlD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:pragSpecInlD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::TypeQ
	Language.Haskell.TH.Syntax::Inline
	Language.Haskell.TH.Syntax::Phases

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
intPrimL :: Integer -> Lit
Name: intPrimL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:intPrimL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
lamCaseE :: [MatchQ] -> ExpQ
Name: lamCaseE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:lamCaseE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::MatchQ
	}

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
forallC :: [TyVarBndr] -> CxtQ -> ConQ -> ConQ
Name: forallC
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:forallC
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Lib::ConQ

	[result]
	Language.Haskell.TH.Lib::ConQ
}

[Function]
forallT :: [TyVarBndr] -> CxtQ -> TypeQ -> TypeQ
Name: forallT
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:forallT
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Syntax::TyVarBndr
	}
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Lib::TypeQ

	[result]
	Language.Haskell.TH.Lib::TypeQ
}

[Function]
integerL :: Integer -> Lit
Name: integerL
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:integerL
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer

	[result]
	Language.Haskell.TH.Syntax::Lit
}

[Function]
letS :: [DecQ] -> StmtQ
Name: letS
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:letS
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}

	[result]
	Language.Haskell.TH.Lib::StmtQ
}

[Function]
letE :: [DecQ] -> ExpQ -> ExpQ
Name: letE
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:letE
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Lib::DecQ
	}
	Language.Haskell.TH.Lib::ExpQ

	[result]
	Language.Haskell.TH.Lib::ExpQ
}

[Function]
newtypeInstD :: CxtQ -> Name -> [TypeQ] -> ConQ -> [Name] -> DecQ
Name: newtypeInstD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:newtypeInstD
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Lib::CxtQ
	Language.Haskell.TH.Syntax::Name
	other::List {
		Language.Haskell.TH.Lib::TypeQ
	}
	Language.Haskell.TH.Lib::ConQ
	other::List {
		Language.Haskell.TH.Syntax::Name
	}

	[result]
	Language.Haskell.TH.Lib::DecQ
}

[Function]
asP :: Name -> PatQ -> PatQ
Name: asP
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:asP
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name
	Language.Haskell.TH.Lib::PatQ

	[result]
	Language.Haskell.TH.Lib::PatQ
}

[Function]
guardedB :: [Q (Guard, Exp)] -> BodyQ
Name: guardedB
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:guardedB
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		Language.Haskell.TH.Syntax::Q {
			GHC.Tuple::(,) {
				Language.Haskell.TH.Syntax::Guard
				Language.Haskell.TH.Syntax::Exp
			}
		}
	}

	[result]
	Language.Haskell.TH.Lib::BodyQ
}

[Function]
global :: Name -> ExpQ
Name: global
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/template-haskell-2.9.0.0/Language-Haskell-TH-Lib.html#v:global
Containing package: Language.Haskell.TH.Lib
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Language.Haskell.TH.Syntax::Name

	[result]
	Language.Haskell.TH.Lib::ExpQ
}