[Package]
Name: Data.Eq
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-Eq.html
Containing package: Data
attributes {
}

Subpackages {
}

[Classifier]
class Eq a where (==) :: a -> a -> Bool (/=) :: a -> a -> Bool
Name: Eq
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-Eq.html#t:Eq
Containing package: Data.Eq
attributes {
	classifierType=typeclass
	fakeInstanceClassifier=false
}
parameters {
}
derived {
	Data.Bits::Bits
	Data.Ord::Ord
	Compiler.Hoopl.Internals::Data.Eq.Eq_Label<>
	Compiler.Hoopl.Internals::Data.Eq.Eq_LabelSet<>
	Compiler.Hoopl.Internals::Data.Eq.Eq_LabelMap<v<>>
	Compiler.Hoopl.Internals::Data.Eq.Eq_ChangeFlag<>
	Compiler.Hoopl::Data.Eq.Eq_ChangeFlag<>
	Compiler.Hoopl::Data.Eq.Eq_Label<>
	Compiler.Hoopl::Data.Eq.Eq_LabelSet<>
	Compiler.Hoopl::Data.Eq.Eq_LabelMap<v<>>
	Compiler.Hoopl::Data.Eq.Eq_Pointed<t<>,b<>,a<>>
	Compiler.Hoopl::Data.Eq.Eq_UniqueSet<>
	Compiler.Hoopl::Data.Eq.Eq_UniqueMap<v<>>
	Control.Applicative::Data.Eq.Eq_ZipList<a<>>
	Control.Concurrent.Chan::Data.Eq.Eq_Chan<a<>>
	Control.Concurrent.MVar::Data.Eq.Eq_MVar<a<>>
	Control.Concurrent::Data.Eq.Eq_ThreadId<>
	Control.Exception.Base::Data.Eq.Eq_IOException<>
	Control.Exception.Base::Data.Eq.Eq_ArithException<>
	Control.Exception.Base::Data.Eq.Eq_ArrayException<>
	Control.Exception.Base::Data.Eq.Eq_AsyncException<>
	Control.Exception.Base::Data.Eq.Eq_ErrorCall<>
	Control.Exception.Base::Data.Eq.Eq_MaskingState<>
	Control.Exception::Data.Eq.Eq_IOException<>
	Control.Exception::Data.Eq.Eq_ArithException<>
	Control.Exception::Data.Eq.Eq_ArrayException<>
	Control.Exception::Data.Eq.Eq_AsyncException<>
	Control.Exception::Data.Eq.Eq_ErrorCall<>
	Control.Exception::Data.Eq.Eq_MaskingState<>
	Data.Array.IArray::Data.Eq.Eq_Array<i<>,e<>>
	Data.Array.IO.Safe::Data.Eq.Eq_IOArray<i<>,e<>>
	Data.Array.IO.Safe::Data.Eq.Eq_IOUArray<i<>,e<>>
	Data.Array.IO::Data.Eq.Eq_IOArray<i<>,e<>>
	Data.Array.IO::Data.Eq.Eq_IOUArray<i<>,e<>>
	Data.Array.ST.Safe::Data.Eq.Eq_STArray<s<>,i<>,e<>>
	Data.Array.ST.Safe::Data.Eq.Eq_STUArray<s<>,i<>,e<>>
	Data.Array.ST::Data.Eq.Eq_STArray<s<>,i<>,e<>>
	Data.Array.ST::Data.Eq.Eq_STUArray<s<>,i<>,e<>>
	Data.Array.Unboxed::Data.Eq.Eq_UArray<ix<>,e<>>
	Data.Array::Data.Eq.Eq_Array<i<>,e<>>
	Data.Bool::Data.Eq.Eq_Bool<>
	Data.ByteString.Char8::Data.Eq.Eq_ByteString<>
	Data.ByteString.Lazy.Char8::Data.Eq.Eq_ByteString<>
	Data.ByteString.Lazy::Data.Eq.Eq_ByteString<>
	Data.ByteString.Short::Data.Eq.Eq_ShortByteString<>
	Data.ByteString::Data.Eq.Eq_ByteString<>
	Data.Char::Data.Eq.Eq_Char<>
	Data.Char::Data.Eq.Eq_GeneralCategory<>
	Data.Complex::Data.Eq.Eq_Complex<a<>>
	Data.Data::Data.Eq.Eq_DataRep<>
	Data.Data::Data.Eq.Eq_Constr<>
	Data.Data::Data.Eq.Eq_Fixity<>
	Data.Data::Data.Eq.Eq_ConstrRep<>
	Data.Either::Data.Eq.Eq_Either<a<>,b<>>
	Prelude::Data.Eq.Eq_Double<>
	Prelude::Data.Eq.Eq_Float<>
	Data.Int::Data.Eq.Eq_Int<>
	Data.Int::Data.Eq.Eq_Int8<>
	Data.Int::Data.Eq.Eq_Int16<>
	Data.Int::Data.Eq.Eq_Int32<>
	Data.Int::Data.Eq.Eq_Int64<>
	Prelude::Data.Eq.Eq_Integer<>
	Data.Ord::Data.Eq.Eq_Ordering<>
	Data.Word::Data.Eq.Eq_Word<>
	Data.Word::Data.Eq.Eq_Word8<>
	Data.Word::Data.Eq.Eq_Word16<>
	Data.Word::Data.Eq.Eq_Word32<>
	Data.Word::Data.Eq.Eq_Word64<>
	GHC.Tuple::Data.Eq.Eq_()<>
	Text.Read.Lex::Data.Eq.Eq_Number<>
	Text.Read.Lex::Data.Eq.Eq_Lexeme<>
	GHC.Fingerprint.Type::Data.Eq.Eq_Fingerprint<>
	Data.Typeable.Internal::Data.Eq.Eq_TyCon<>
	Data.Typeable.Internal::Data.Eq.Eq_TypeRep<>
	GHC.Generics::Data.Eq.Eq_Associativity<>
	GHC.Generics::Data.Eq.Eq_Fixity<>
	GHC.Generics::Data.Eq.Eq_Arity<>
	Data.Monoid::Data.Eq.Eq_Any<>
	Data.Monoid::Data.Eq.Eq_All<>
	Foreign.C.Types::Data.Eq.Eq_CUIntMax<>
	Foreign.C.Types::Data.Eq.Eq_CIntMax<>
	Foreign.C.Types::Data.Eq.Eq_CUIntPtr<>
	Foreign.C.Types::Data.Eq.Eq_CIntPtr<>
	Foreign.C.Types::Data.Eq.Eq_CSUSeconds<>
	Foreign.C.Types::Data.Eq.Eq_CUSeconds<>
	Foreign.C.Types::Data.Eq.Eq_CTime<>
	Foreign.C.Types::Data.Eq.Eq_CClock<>
	Foreign.C.Types::Data.Eq.Eq_CSigAtomic<>
	Foreign.C.Types::Data.Eq.Eq_CWchar<>
	Foreign.C.Types::Data.Eq.Eq_CSize<>
	Foreign.C.Types::Data.Eq.Eq_CPtrdiff<>
	Foreign.C.Types::Data.Eq.Eq_CDouble<>
	Foreign.C.Types::Data.Eq.Eq_CFloat<>
	Foreign.C.Types::Data.Eq.Eq_CULLong<>
	Foreign.C.Types::Data.Eq.Eq_CLLong<>
	Foreign.C.Types::Data.Eq.Eq_CULong<>
	Foreign.C.Types::Data.Eq.Eq_CLong<>
	Foreign.C.Types::Data.Eq.Eq_CUInt<>
	Foreign.C.Types::Data.Eq.Eq_CInt<>
	Foreign.C.Types::Data.Eq.Eq_CUShort<>
	Foreign.C.Types::Data.Eq.Eq_CShort<>
	Foreign.C.Types::Data.Eq.Eq_CUChar<>
	Foreign.C.Types::Data.Eq.Eq_CSChar<>
	Foreign.C.Types::Data.Eq.Eq_CChar<>
	Foreign.Ptr::Data.Eq.Eq_IntPtr<>
	Foreign.Ptr::Data.Eq.Eq_WordPtr<>
	GHC.IO.Buffer::Data.Eq.Eq_BufferState<>
	GHC.IO.Encoding.Types::Data.Eq.Eq_CodingProgress<>
	GHC.IO.Device::Data.Eq.Eq_SeekMode<>
	GHC.IO.Device::Data.Eq.Eq_IODeviceType<>
	GHC.IO.Handle::Data.Eq.Eq_NewlineMode<>
	GHC.IO.Handle::Data.Eq.Eq_Newline<>
	GHC.IO.Handle::Data.Eq.Eq_BufferMode<>
	GHC.IO.Handle::Data.Eq.Eq_Handle<>
	System.IO.Error::Data.Eq.Eq_IOErrorType<>
	System.Exit::Data.Eq.Eq_ExitCode<>
	Foreign.C.Error::Data.Eq.Eq_Errno<>
	System.Posix.Types::Data.Eq.Eq_Fd<>
	System.Posix.Types::Data.Eq.Eq_CRLim<>
	System.Posix.Types::Data.Eq.Eq_CTcflag<>
	System.Posix.Types::Data.Eq.Eq_CSpeed<>
	System.Posix.Types::Data.Eq.Eq_CCc<>
	System.Posix.Types::Data.Eq.Eq_CUid<>
	System.Posix.Types::Data.Eq.Eq_CNlink<>
	System.Posix.Types::Data.Eq.Eq_CGid<>
	System.Posix.Types::Data.Eq.Eq_CSsize<>
	System.Posix.Types::Data.Eq.Eq_CPid<>
	System.Posix.Types::Data.Eq.Eq_COff<>
	System.Posix.Types::Data.Eq.Eq_CMode<>
	System.Posix.Types::Data.Eq.Eq_CIno<>
	System.Posix.Types::Data.Eq.Eq_CDev<>
	GHC.Conc::Data.Eq.Eq_ThreadStatus<>
	GHC.Conc::Data.Eq.Eq_BlockReason<>
	System.IO::Data.Eq.Eq_IOMode<>
	GHC.Event::Data.Eq.Eq_Event<>
	GHC.Event::Data.Eq.Eq_FdKey<>
	GHC.Event::Data.Eq.Eq_TimeoutKey<>
	GHC.IO.Handle::Data.Eq.Eq_HandlePosn<>
	Data.OldTypeable.Internal::Data.Eq.Eq_TyCon<>
	Data.OldTypeable.Internal::Data.Eq.Eq_TypeRep<>
	Data.OldTypeable::Data.Eq.Eq_TypeRepKey<>
	GHC.TypeLits::Data.Eq.Eq_SomeSymbol<>
	GHC.TypeLits::Data.Eq.Eq_SomeNat<>
	Data.Version::Data.Eq.Eq_Version<>
	Data.Unique::Data.Eq.Eq_Unique<>
	GHC.Exts::Data.Eq.Eq_SpecConstrAnnotation<>
	other::Data.Eq.Eq_List<a<>>
	Data.Ratio::Data.Eq.Eq_Ratio<a<>>
	Foreign.StablePtr::Data.Eq.Eq_StablePtr<a<>>
	Foreign.Ptr::Data.Eq.Eq_Ptr<a<>>
	Foreign.Ptr::Data.Eq.Eq_FunPtr<a<>>
	GHC.Generics::Data.Eq.Eq_U1<p<>>
	GHC.Generics::Data.Eq.Eq_Par1<p<>>
	Data.Maybe::Data.Eq.Eq_Maybe<a<>>
	Data.Ord::Data.Eq.Eq_Down<a<>>
	Data.Monoid::Data.Eq.Eq_Last<a<>>
	Data.Monoid::Data.Eq.Eq_First<a<>>
	Data.Monoid::Data.Eq.Eq_Product<a<>>
	Data.Monoid::Data.Eq.Eq_Sum<a<>>
	Data.Monoid::Data.Eq.Eq_Dual<a<>>
	Data.IORef::Data.Eq.Eq_IORef<a<>>
	Foreign.ForeignPtr.Safe::Data.Eq.Eq_ForeignPtr<a<>>
	GHC.Conc::Data.Eq.Eq_TVar<a<>>
	Data.Fixed::Data.Eq.Eq_Fixed<a<>>
	System.Mem.StableName::Data.Eq.Eq_StableName<a<>>
	GHC.Generics::Data.Eq.Eq_Rec1<f<>,p<>>
	GHC.Tuple::Data.Eq.Eq_(,,,)<a<>,b<>>
	Data.STRef::Data.Eq.Eq_STRef<s<>,a<>>
	Data.Proxy::Data.Eq.Eq_Proxy<s<>>
	GHC.Generics::Data.Eq.Eq_K1<i<>,c<>,p<>>
	GHC.Generics::Data.Eq.Eq_(:+:)<f<>,g<>,p<>>
	GHC.Generics::Data.Eq.Eq_(:*:)<f<>,g<>,p<>>
	GHC.Generics::Data.Eq.Eq_(:.:)<f<>,g<>,p<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,)<a<>,b<>,c<>>
	Data.Type.Equality::Data.Eq.Eq_(:~:)<a<>,b<>>
	Data.Type.Coercion::Data.Eq.Eq_Coercion<a<>,b<>>
	GHC.Generics::Data.Eq.Eq_M1<i<>,c<>,f<>,p<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,)<a<>,b<>,c<>,d<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,)<a<>,b<>,c<>,d<>,e<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>,k<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>,k<>,l<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>,k<>,l<>,m<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>,k<>,l<>,m<>,n<>>
	GHC.Tuple::Data.Eq.Eq_(,,,,,,,,,,,,,,,,)<a<>,b<>,c<>,d<>,e<>,f<>,g<>,h<>,i<>,j<>,k<>,l<>,m<>,n<>,o<>>
	Data.IntMap.Lazy::Data.Eq.Eq_IntMap<a<>>
	Data.IntMap.Strict::Data.Eq.Eq_IntMap<a<>>
	Data.IntSet::Data.Eq.Eq_IntSet<>
	Data.Map.Lazy::Data.Eq.Eq_Map<k<>,a<>>
	Data.Map.Strict::Data.Eq.Eq_Map<k<>,a<>>
	Data.OldTypeable::Data.Eq.Eq_TypeRep<>
	Data.OldTypeable::Data.Eq.Eq_TyCon<>
	Data.STRef.Lazy::Data.Eq.Eq_STRef<s<>,a<>>
	Data.Sequence::Data.Eq.Eq_Seq<a<>>
	Data.Sequence::Data.Eq.Eq_ViewL<a<>>
	Data.Sequence::Data.Eq.Eq_ViewR<a<>>
	Data.Set::Data.Eq.Eq_Set<a<>>
	Data.Time.Calendar::Data.Eq.Eq_Day<>
	Data.Time.Clock.TAI::Data.Eq.Eq_AbsoluteTime<>
	Data.Time.Clock::Data.Eq.Eq_UniversalTime<>
	Data.Time.Clock::Data.Eq.Eq_DiffTime<>
	Data.Time.Clock::Data.Eq.Eq_UTCTime<>
	Data.Time.Clock::Data.Eq.Eq_NominalDiffTime<>
	Data.Time.LocalTime::Data.Eq.Eq_TimeZone<>
	Data.Time.LocalTime::Data.Eq.Eq_TimeOfDay<>
	Data.Time.LocalTime::Data.Eq.Eq_LocalTime<>
	Data.Tree::Data.Eq.Eq_Tree<a<>>
	Data.Typeable.Internal::Data.Eq.Eq_Proxy<s<>>
	Data.Typeable.Internal::Data.Eq.Eq_Fingerprint<>
	Data.Typeable::Data.Eq.Eq_(:~:)<a<>,b<>>
	Data.Typeable::Data.Eq.Eq_Proxy<s<>>
	Data.Typeable::Data.Eq.Eq_TypeRep<>
	Data.Typeable::Data.Eq.Eq_TyCon<>
	Distribution.Compiler::Data.Eq.Eq_CompilerFlavor<>
	Distribution.Compiler::Data.Eq.Eq_CompilerId<>
	Distribution.InstalledPackageInfo::Data.Eq.Eq_PError<>
	Distribution.InstalledPackageInfo::Data.Eq.Eq_PWarning<>
	Distribution.License::Data.Eq.Eq_License<>
	Distribution.Make::Data.Eq.Eq_License<>
	Distribution.Make::Data.Eq.Eq_Version<>
	Distribution.ModuleName::Data.Eq.Eq_ModuleName<>
	Distribution.Package::Data.Eq.Eq_PackageName<>
	Distribution.Package::Data.Eq.Eq_PackageIdentifier<>
	Distribution.Package::Data.Eq.Eq_InstalledPackageId<>
	Distribution.Package::Data.Eq.Eq_Dependency<>
	Distribution.PackageDescription.Check::Data.Eq.Eq_PackageCheck<>
	Distribution.PackageDescription::Data.Eq.Eq_PackageDescription<>
	Distribution.PackageDescription::Data.Eq.Eq_BuildType<>
	Distribution.PackageDescription::Data.Eq.Eq_Library<>
	Distribution.PackageDescription::Data.Eq.Eq_Executable<>
	Distribution.PackageDescription::Data.Eq.Eq_TestSuite<>
	Distribution.PackageDescription::Data.Eq.Eq_TestSuiteInterface<>
	Distribution.PackageDescription::Data.Eq.Eq_TestType<>
	Distribution.PackageDescription::Data.Eq.Eq_Benchmark<>
	Distribution.PackageDescription::Data.Eq.Eq_BenchmarkInterface<>
	Distribution.PackageDescription::Data.Eq.Eq_BenchmarkType<>
	Distribution.PackageDescription::Data.Eq.Eq_BuildInfo<>
	Distribution.PackageDescription::Data.Eq.Eq_GenericPackageDescription<>
	Distribution.PackageDescription::Data.Eq.Eq_Flag<>
	Distribution.PackageDescription::Data.Eq.Eq_FlagName<>
	Distribution.PackageDescription::Data.Eq.Eq_CondTree<v<>,c<>,a<>>
	Distribution.PackageDescription::Data.Eq.Eq_ConfVar<>
	Distribution.PackageDescription::Data.Eq.Eq_Condition<c<>>
	Distribution.PackageDescription::Data.Eq.Eq_SourceRepo<>
	Distribution.PackageDescription::Data.Eq.Eq_RepoKind<>
	Distribution.PackageDescription::Data.Eq.Eq_RepoType<>
	Distribution.Simple.BuildTarget::Data.Eq.Eq_BuildTarget<>
	Distribution.Simple.BuildTarget::Data.Eq.Eq_UserBuildTarget<>
	Distribution.Simple.Compiler::Data.Eq.Eq_PackageDB<>
	Distribution.Simple.Compiler::Data.Eq.Eq_OptimisationLevel<>
	Distribution.Simple.Configure::Data.Eq.Eq_ConfigStateFileErrorType<>
	Distribution.Simple.InstallDirs::Data.Eq.Eq_CopyDest<>
	Distribution.Simple.InstallDirs::Data.Eq.Eq_PathTemplateVariable<>
	Distribution.Simple.LocalBuildInfo::Data.Eq.Eq_Component<>
	Distribution.Simple.LocalBuildInfo::Data.Eq.Eq_ComponentName<>
	Distribution.Simple.Program.GHC::Data.Eq.Eq_GhcMode<>
	Distribution.Simple.Program.GHC::Data.Eq.Eq_GhcOptimisation<>
	Distribution.Simple.Program.GHC::Data.Eq.Eq_GhcDynLinkMode<>
	Distribution.Simple.Program.Types::Data.Eq.Eq_ConfiguredProgram<>
	Distribution.Simple.Program.Types::Data.Eq.Eq_ProgramLocation<>
	Distribution.Simple.Program::Data.Eq.Eq_ConfiguredProgram<>
	Distribution.Simple.Program::Data.Eq.Eq_ProgramLocation<>
	Distribution.Simple.Setup::Data.Eq.Eq_TestShowDetails<>
	Distribution.Simple.Setup::Data.Eq.Eq_CopyDest<>
	Distribution.Simple.Setup::Data.Eq.Eq_Flag<a<>>
	Distribution.Simple.Test::Data.Eq.Eq_PackageLog<>
	Distribution.Simple.Test::Data.Eq.Eq_TestSuiteLog<>
	Distribution.Simple.Test::Data.Eq.Eq_TestLogs<>
	Distribution.System::Data.Eq.Eq_OS<>
	Distribution.System::Data.Eq.Eq_Arch<>
	Distribution.System::Data.Eq.Eq_Platform<>
	Distribution.TestSuite::Data.Eq.Eq_OptionDescr<>
	Distribution.TestSuite::Data.Eq.Eq_OptionType<>
	Distribution.TestSuite::Data.Eq.Eq_Result<>
	Distribution.Verbosity::Data.Eq.Eq_Verbosity<>
	Distribution.Version::Data.Eq.Eq_Version<>
	Distribution.Version::Data.Eq.Eq_VersionRange<>
	Distribution.Version::Data.Eq.Eq_LowerBound<>
	Distribution.Version::Data.Eq.Eq_UpperBound<>
	Distribution.Version::Data.Eq.Eq_Bound<>
	Distribution.Version::Data.Eq.Eq_VersionIntervals<>
	Foreign.ForeignPtr::Data.Eq.Eq_ForeignPtr<a<>>
	GHC.Conc.Sync::Data.Eq.Eq_ThreadId<>
	GHC.Conc.Sync::Data.Eq.Eq_ThreadStatus<>
	GHC.Conc.Sync::Data.Eq.Eq_BlockReason<>
	GHC.Conc.Sync::Data.Eq.Eq_TVar<a<>>
	GHC.Conc::Data.Eq.Eq_ThreadId<>
	GHC.Exts::Data.Eq.Eq_Int<>
	GHC.Exts::Data.Eq.Eq_Word<>
	GHC.Exts::Data.Eq.Eq_Float<>
	GHC.Exts::Data.Eq.Eq_Double<>
	GHC.Exts::Data.Eq.Eq_Char<>
	GHC.Exts::Data.Eq.Eq_Ptr<a<>>
	GHC.Exts::Data.Eq.Eq_FunPtr<a<>>
	GHC.Exts::Data.Eq.Eq_Down<a<>>
	GHC.Fingerprint::Data.Eq.Eq_Fingerprint<>
	GHC.IO.Encoding::Data.Eq.Eq_CodingProgress<>
	GHC.IO.Handle::Data.Eq.Eq_SeekMode<>
	GHC.Integer.GMP.Internals::Data.Eq.Eq_Integer<>
	GHC.Integer::Data.Eq.Eq_Integer<>
	Language.Haskell.Extension::Data.Eq.Eq_Language<>
	Language.Haskell.Extension::Data.Eq.Eq_Extension<>
	Language.Haskell.Extension::Data.Eq.Eq_KnownExtension<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_ModName<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_PkgName<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Module<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_OccName<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Name<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_NameFlavour<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_NameSpace<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Fixity<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_FixityDirection<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Lit<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Pat<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Match<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Clause<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Exp<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Body<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Guard<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Stmt<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Range<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Dec<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_TySynEqn<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_FunDep<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_FamFlavour<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Foreign<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Callconv<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Safety<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Pragma<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Inline<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_RuleMatch<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Phases<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_RuleBndr<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_AnnTarget<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Pred<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Strict<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Con<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Type<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_TyVarBndr<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_TyLit<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_Role<>
	Language.Haskell.TH.Syntax::Data.Eq.Eq_AnnLookup<>
	Language.Haskell.TH::Data.Eq.Eq_AnnLookup<>
	Language.Haskell.TH::Data.Eq.Eq_Name<>
	Language.Haskell.TH::Data.Eq.Eq_NameSpace<>
	Language.Haskell.TH::Data.Eq.Eq_Dec<>
	Language.Haskell.TH::Data.Eq.Eq_Con<>
	Language.Haskell.TH::Data.Eq.Eq_Clause<>
	Language.Haskell.TH::Data.Eq.Eq_Strict<>
	Language.Haskell.TH::Data.Eq.Eq_Foreign<>
	Language.Haskell.TH::Data.Eq.Eq_Callconv<>
	Language.Haskell.TH::Data.Eq.Eq_Safety<>
	Language.Haskell.TH::Data.Eq.Eq_Pragma<>
	Language.Haskell.TH::Data.Eq.Eq_Inline<>
	Language.Haskell.TH::Data.Eq.Eq_RuleMatch<>
	Language.Haskell.TH::Data.Eq.Eq_Phases<>
	Language.Haskell.TH::Data.Eq.Eq_RuleBndr<>
	Language.Haskell.TH::Data.Eq.Eq_AnnTarget<>
	Language.Haskell.TH::Data.Eq.Eq_FunDep<>
	Language.Haskell.TH::Data.Eq.Eq_FamFlavour<>
	Language.Haskell.TH::Data.Eq.Eq_TySynEqn<>
	Language.Haskell.TH::Data.Eq.Eq_Fixity<>
	Language.Haskell.TH::Data.Eq.Eq_FixityDirection<>
	Language.Haskell.TH::Data.Eq.Eq_Exp<>
	Language.Haskell.TH::Data.Eq.Eq_Match<>
	Language.Haskell.TH::Data.Eq.Eq_Body<>
	Language.Haskell.TH::Data.Eq.Eq_Guard<>
	Language.Haskell.TH::Data.Eq.Eq_Stmt<>
	Language.Haskell.TH::Data.Eq.Eq_Range<>
	Language.Haskell.TH::Data.Eq.Eq_Lit<>
	Language.Haskell.TH::Data.Eq.Eq_Pat<>
	Language.Haskell.TH::Data.Eq.Eq_Type<>
	Language.Haskell.TH::Data.Eq.Eq_TyVarBndr<>
	Language.Haskell.TH::Data.Eq.Eq_TyLit<>
	Language.Haskell.TH::Data.Eq.Eq_Pred<>
	Language.Haskell.TH::Data.Eq.Eq_Role<>
	System.Console.Haskeline.MonadException::Data.Eq.Eq_IOException<>
	System.Console.Haskeline::Data.Eq.Eq_Interrupt<>
	System.Console.Terminfo.Color::Data.Eq.Eq_Color<>
	System.Directory::Data.Eq.Eq_Permissions<>
	System.IO::Data.Eq.Eq_Handle<>
	System.IO::Data.Eq.Eq_BufferMode<>
	System.IO::Data.Eq.Eq_HandlePosn<>
	System.IO::Data.Eq.Eq_SeekMode<>
	System.IO::Data.Eq.Eq_Newline<>
	System.IO::Data.Eq.Eq_NewlineMode<>
	System.Locale::Data.Eq.Eq_TimeLocale<>
	System.Posix.Process.ByteString::Data.Eq.Eq_ProcessStatus<>
	System.Posix.Process.Internals::Data.Eq.Eq_ProcessStatus<>
	System.Posix.Process::Data.Eq.Eq_ProcessStatus<>
	System.Posix.Resource::Data.Eq.Eq_ResourceLimit<>
	System.Posix.Resource::Data.Eq.Eq_ResourceLimits<>
	System.Posix.Resource::Data.Eq.Eq_Resource<>
	System.Posix.User::Data.Eq.Eq_GroupEntry<>
	System.Posix.User::Data.Eq.Eq_UserEntry<>
	System.Time::Data.Eq.Eq_ClockTime<>
	System.Time::Data.Eq.Eq_TimeDiff<>
	System.Time::Data.Eq.Eq_CalendarTime<>
	System.Time::Data.Eq.Eq_Month<>
	System.Time::Data.Eq.Eq_Day<>
	System.Win32.File::Data.Eq.Eq_GET_FILEEX_INFO_LEVELS<>
	System.Win32.Info::Data.Eq.Eq_ProcessorArchitecture<>
	System.Win32.SimpleMAPI::Data.Eq.Eq_RecipientClass<>
	System.Win32.Time::Data.Eq.Eq_FILETIME<>
	System.Win32.Time::Data.Eq.Eq_SYSTEMTIME<>
	System.Win32.Time::Data.Eq.Eq_TIME_ZONE_INFORMATION<>
	System.Win32.Time::Data.Eq.Eq_TimeZoneId<>
	Text.Read::Data.Eq.Eq_Lexeme<>
	Trace.Hpc.Mix::Data.Eq.Eq_BoxLabel<>
	Trace.Hpc.Mix::Data.Eq.Eq_CondBox<>
	Trace.Hpc.Tix::Data.Eq.Eq_Tix<>
	Trace.Hpc.Tix::Data.Eq.Eq_TixModule<>
	Trace.Hpc.Util::Data.Eq.Eq_HpcPos<>
	Trace.Hpc.Util::Data.Eq.Eq_Hash<>
}
supertypes {
}
members {

	[Function]
	(==) :: a -> a -> Bool
	Name: (==)
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-Eq.html#v:(==)
	Containing package: Data.Eq
	attributes {
		memberType=function
	}
	Containing type: Eq
	parameters {
		a: (Eq a; a; Data.Eq::Eq)
	}
	Signature = <function> {
		[parameters]
		null::a
		null::a
	
		[result]
		Data.Bool::Bool
	}

	[Function]
	(/=) :: a -> a -> Bool
	Name: (/=)
	Language: HASKELL
	Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Data-Eq.html#v:(/=)
	Containing package: Data.Eq
	attributes {
		memberType=function
	}
	Containing type: Eq
	parameters {
		a: (Eq a; a; Data.Eq::Eq)
	}
	Signature = <function> {
		[parameters]
		null::a
		null::a
	
		[result]
		Data.Bool::Bool
	}
}