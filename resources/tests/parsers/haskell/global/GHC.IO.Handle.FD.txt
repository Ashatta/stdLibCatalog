[Package]
Name: GHC.IO.Handle.FD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html
Containing package: GHC.IO.Handle
attributes {
}

Subpackages {
}

[Function]
openFile :: FilePath -> IOMode -> IO Handle
Name: openFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:openFile
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	System.IO::IOMode

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}

[Function]
stdin :: Handle
Name: stdin
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:stdin
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	GHC.IO.Handle::Handle
}

[Function]
stdout :: Handle
Name: stdout
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:stdout
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	GHC.IO.Handle::Handle
}

[Function]
isEOF :: IO Bool
Name: isEOF
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:isEOF
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		Data.Bool::Bool
	}
}

[Function]
openFileBlocking :: FilePath -> IOMode -> IO Handle
Name: openFileBlocking
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:openFileBlocking
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	System.IO::IOMode

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}

[Function]
stderr :: Handle
Name: stderr
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:stderr
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	GHC.IO.Handle::Handle
}

[Function]
fdToHandle' :: CInt -> Maybe IODeviceType -> Bool -> FilePath -> IOMode -> Bool -> IO Handle
Name: fdToHandle'
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:fdToHandle'
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Foreign.C.Types::CInt
	Data.Maybe::Maybe {
		GHC.IO.Device::IODeviceType
	}
	Data.Bool::Bool
	System.IO::FilePath
	System.IO::IOMode
	Data.Bool::Bool

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}

[Function]
openBinaryFile :: FilePath -> IOMode -> IO Handle
Name: openBinaryFile
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:openBinaryFile
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	System.IO::FilePath
	System.IO::IOMode

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}

[Function]
mkHandleFromFD :: FD -> IODeviceType -> FilePath -> IOMode -> Bool -> Maybe TextEncoding -> IO Handle
Name: mkHandleFromFD
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:mkHandleFromFD
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	null::FD
	GHC.IO.Device::IODeviceType
	System.IO::FilePath
	System.IO::IOMode
	Data.Bool::Bool
	Data.Maybe::Maybe {
		GHC.IO.Encoding.Types::TextEncoding
	}

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}

[Function]
fdToHandle :: FD -> IO Handle
Name: fdToHandle
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/GHC-IO-Handle-FD.html#v:fdToHandle
Containing package: GHC.IO.Handle.FD
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	null::FD

	[result]
	System.IO::IO {
		GHC.IO.Handle::Handle
	}
}