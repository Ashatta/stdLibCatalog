[Package]
Name: Control.Concurrent.Chan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html
Containing package: Control.Concurrent
attributes {
}

Subpackages {
}

[Classifier]
data Chan a
Name: Chan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#t:Chan
Containing package: Control.Concurrent.Chan
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
	a
}
derived {
}
supertypes {
}
members {
}

[Function]
unGetChan :: Chan a -> a -> IO ()
Name: unGetChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:unGetChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}
	null::a

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
getChanContents :: Chan a -> IO [a]
Name: getChanContents
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:getChanContents
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}

	[result]
	System.IO::IO {
		other::List {
			null::a
		}
	}
}

[Function]
isEmptyChan :: Chan a -> IO Bool
Name: isEmptyChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:isEmptyChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}

	[result]
	System.IO::IO {
		Data.Bool::Bool
	}
}

[Function]
readChan :: Chan a -> IO a
Name: readChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:readChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}

	[result]
	System.IO::IO {
		null::a
	}
}

[Function]
newChan :: IO (Chan a)
Name: newChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:newChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		Control.Concurrent.Chan::Chan {
			null::a
		}
	}
}

[Function]
writeList2Chan :: Chan a -> [a] -> IO ()
Name: writeList2Chan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:writeList2Chan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}
	other::List {
		null::a
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
writeChan :: Chan a -> a -> IO ()
Name: writeChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:writeChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}
	null::a

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
dupChan :: Chan a -> IO (Chan a)
Name: dupChan
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/base-4.7.0.1/Control-Concurrent-Chan.html#v:dupChan
Containing package: Control.Concurrent.Chan
attributes {
	memberType=function
}
Containing type: null
parameters {
	a
}
Signature = <function> {
	[parameters]
	Control.Concurrent.Chan::Chan {
		null::a
	}

	[result]
	System.IO::IO {
		Control.Concurrent.Chan::Chan {
			null::a
		}
	}
}