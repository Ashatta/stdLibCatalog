[Package]
Name: Ratio
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html
Containing package: null
attributes {
}

Subpackages {
}

[Classifier]
data Ratio a :: * -> *
Name: Ratio
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#t:Ratio
Containing package: Ratio
attributes {
	infix=false
	classifierType=data
	fakeInstanceClassifier=false
}
parameters {
	a
}
derived {
}
supertypes {
}
members {
}

[Alias]
type Rational = Ratio Integer
Name: Rational
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#t:Rational
Containing package: Ratio
attributes {
}
parameters {
}
Aliased type = Ratio::Ratio {
	Prelude::Integer
}

[Function]
approxRational :: RealFrac a => a -> a -> Rational
Name: approxRational
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#v:approxRational
Containing package: Ratio
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (RealFrac a; a; Prelude::RealFrac)
}
Signature = <function> {
	[parameters]
	null::a
	null::a

	[result]
	Ratio::Rational
}

[Function]
denominator :: Integral a => Ratio a -> a
Name: denominator
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#v:denominator
Containing package: Ratio
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral)
}
Signature = <function> {
	[parameters]
	Ratio::Ratio {
		null::a
	}

	[result]
	null::a
}

[Function]
numerator :: Integral a => Ratio a -> a
Name: numerator
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#v:numerator
Containing package: Ratio
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral)
}
Signature = <function> {
	[parameters]
	Ratio::Ratio {
		null::a
	}

	[result]
	null::a
}

[Function]
(%) :: Integral a => a -> a -> Ratio a
Name: (%)
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/haskell98-2.0.0.3/Ratio.html#v:(%)
Containing package: Ratio
attributes {
	memberType=function
}
Containing type: null
parameters {
	a: (Integral a; a; Prelude::Integral)
}
Signature = <function> {
	[parameters]
	null::a
	null::a

	[result]
	Ratio::Ratio {
		null::a
	}
}