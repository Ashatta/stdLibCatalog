[Package]
Name: Data.Time.Calendar.Julian
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html
Containing package: Data.Time.Calendar
attributes {
}

Subpackages {
}

[Function]
addJulianMonthsRollOver :: Integer -> Day -> Day
Name: addJulianMonthsRollOver
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:addJulianMonthsRollOver
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Time.Calendar::Day

	[result]
	Data.Time.Calendar::Day
}

[Function]
fromJulianYearAndDayValid :: Integer -> Int -> Maybe Day
Name: fromJulianYearAndDayValid
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:fromJulianYearAndDayValid
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Int::Int

	[result]
	Data.Maybe::Maybe {
		Data.Time.Calendar::Day
	}
}

[Function]
showJulianYearAndDay :: Day -> String
Name: showJulianYearAndDay
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:showJulianYearAndDay
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Time.Calendar::Day

	[result]
	Data.String::String
}

[Function]
fromJulianValid :: Integer -> Int -> Int -> Maybe Day
Name: fromJulianValid
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:fromJulianValid
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Int::Int
	Data.Int::Int

	[result]
	Data.Maybe::Maybe {
		Data.Time.Calendar::Day
	}
}

[Function]
showJulian :: Day -> String
Name: showJulian
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:showJulian
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Time.Calendar::Day

	[result]
	Data.String::String
}

[Function]
toJulianYearAndDay :: Day -> (Integer, Int)
Name: toJulianYearAndDay
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:toJulianYearAndDay
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Time.Calendar::Day

	[result]
	GHC.Tuple::(,) {
		Prelude::Integer
		Data.Int::Int
	}
}

[Function]
julianMonthLength :: Integer -> Int -> Int
Name: julianMonthLength
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:julianMonthLength
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Int::Int

	[result]
	Data.Int::Int
}

[Function]
fromJulian :: Integer -> Int -> Int -> Day
Name: fromJulian
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:fromJulian
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Int::Int
	Data.Int::Int

	[result]
	Data.Time.Calendar::Day
}

[Function]
toJulian :: Day -> (Integer, Int, Int)
Name: toJulian
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:toJulian
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.Time.Calendar::Day

	[result]
	GHC.Tuple::(,,) {
		Prelude::Integer
		Data.Int::Int
		Data.Int::Int
	}
}

[Function]
addJulianYearsClip :: Integer -> Day -> Day
Name: addJulianYearsClip
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:addJulianYearsClip
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Time.Calendar::Day

	[result]
	Data.Time.Calendar::Day
}

[Function]
addJulianMonthsClip :: Integer -> Day -> Day
Name: addJulianMonthsClip
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:addJulianMonthsClip
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Time.Calendar::Day

	[result]
	Data.Time.Calendar::Day
}

[Function]
fromJulianYearAndDay :: Integer -> Int -> Day
Name: fromJulianYearAndDay
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:fromJulianYearAndDay
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Int::Int

	[result]
	Data.Time.Calendar::Day
}

[Function]
isJulianLeapYear :: Integer -> Bool
Name: isJulianLeapYear
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:isJulianLeapYear
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer

	[result]
	Data.Bool::Bool
}

[Function]
addJulianYearsRollOver :: Integer -> Day -> Day
Name: addJulianYearsRollOver
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/time-1.4.2/Data-Time-Calendar-Julian.html#v:addJulianYearsRollOver
Containing package: Data.Time.Calendar.Julian
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Prelude::Integer
	Data.Time.Calendar::Day

	[result]
	Data.Time.Calendar::Day
}