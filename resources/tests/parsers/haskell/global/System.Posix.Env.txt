[Package]
Name: System.Posix.Env
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html
Containing package: System.Posix
attributes {
}

Subpackages {
	System.Posix.Env.ByteString
}

[Function]
clearEnv :: IO ()
Name: clearEnv
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:clearEnv
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
getEnv :: String -> IO (Maybe String)
Name: getEnv
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:getEnv
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	System.IO::IO {
		Data.Maybe::Maybe {
			Data.String::String
		}
	}
}

[Function]
putEnv :: String -> IO ()
Name: putEnv
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:putEnv
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
setEnv :: String -> String -> Bool -> IO ()
Name: setEnv
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:setEnv
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	Data.String::String
	Data.Bool::Bool

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
unsetEnv :: String -> IO ()
Name: unsetEnv
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:unsetEnv
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
getEnvironmentPrim :: IO [String]
Name: getEnvironmentPrim
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:getEnvironmentPrim
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		other::List {
			Data.String::String
		}
	}
}

[Function]
setEnvironment :: [(String, String)] -> IO ()
Name: setEnvironment
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:setEnvironment
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	other::List {
		GHC.Tuple::(,) {
			Data.String::String
			Data.String::String
		}
	}

	[result]
	System.IO::IO {
		GHC.Tuple::()
	}
}

[Function]
getEnvironment :: IO [(String, String)]
Name: getEnvironment
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:getEnvironment
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]

	[result]
	System.IO::IO {
		other::List {
			GHC.Tuple::(,) {
				Data.String::String
				Data.String::String
			}
		}
	}
}

[Function]
getEnvDefault :: String -> String -> IO String
Name: getEnvDefault
Language: HASKELL
Doc: http://www.haskell.org/ghc/docs/latest/html/libraries/unix-2.7.0.1/System-Posix-Env.html#v:getEnvDefault
Containing package: System.Posix.Env
attributes {
	memberType=function
}
Containing type: null
parameters {
}
Signature = <function> {
	[parameters]
	Data.String::String
	Data.String::String

	[result]
	System.IO::IO {
		Data.String::String
	}
}